<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-CN">
  <id>https://leetcode.innenu.com/</id>
  <title>LeetCode</title>
  <subtitle>LeetCode 练习</subtitle>
  <author>
    <name>LeetCode</name>
  </author>
  <updated>2021-02-17T16:16:54.902Z</updated>
  <generator>@mr-hope/vuepress-plugin-feed</generator>
  <link rel="self" href="https://leetcode.innenu.com/atom.xml"/>
  <link rel="alternate" href="https://leetcode.innenu.com/"/>
  <rights>Copyright © 2017-present Hope Studio</rights>
  <category term="C++"/>
  <category term="Java"/>
  <category term="JavaScript"/>
  <category term="Mister-Hope"/>
  <category term="Python3"/>
  <category term="TypeScript"/>
  <category term="Virgil"/>
  <category term="lizncu"/>
  <category term="lmy"/>
  <category term="sqm"/>
  <category term="PHP"/>
  <contributor>
    <name>1. Two Sum</name>
  </contributor>
  <contributor>
    <name>LeetCode</name>
  </contributor>
  <contributor>
    <name>1025. Divisor Game</name>
  </contributor>
  <contributor>
    <name>104. Maximum Depth Of Binary Tree</name>
  </contributor>
  <contributor>
    <name>1122. Relative Sort Array</name>
  </contributor>
  <contributor>
    <name>12. Integer to Roman</name>
  </contributor>
  <contributor>
    <name>122. Best Time to Buy And Sell Stock Ii</name>
  </contributor>
  <contributor>
    <name>1221. Split a String in Balanced Strings</name>
  </contributor>
  <contributor>
    <name>1281. Subtract the Product And Sum of Digits of An Integer</name>
  </contributor>
  <contributor>
    <name>1295. Find Numbers with Even Number of Digits</name>
  </contributor>
  <contributor>
    <name>1299. Replace Elements with Greatest Element on Right Side</name>
  </contributor>
  <contributor>
    <name>13. Roman to Integer</name>
  </contributor>
  <contributor>
    <name>1313. Decompress Run Length Encoded List</name>
  </contributor>
  <contributor>
    <name>1317. Convert Integer to the Sum of Two No Zero Integers</name>
  </contributor>
  <contributor>
    <name>1323. Maximum 69 Number</name>
  </contributor>
  <contributor>
    <name>1342. Number of Steps to Reduce a Number to Zero</name>
  </contributor>
  <contributor>
    <name>136. Single Number</name>
  </contributor>
  <contributor>
    <name>1365. How Many Numbers Are Smaller Than the Current Number</name>
  </contributor>
  <contributor>
    <name>1389. Create Target Array in the Given Order</name>
  </contributor>
  <contributor>
    <name>1431. Kids With the Greatest Number of Candies</name>
  </contributor>
  <contributor>
    <name>1450. Number of Students Doing Homework at a Given Time</name>
  </contributor>
  <contributor>
    <name>1470. Shuffle the Array</name>
  </contributor>
  <contributor>
    <name>1480. Running Sum of 1d Array</name>
  </contributor>
  <contributor>
    <name>1486. Xor Operation in An Array</name>
  </contributor>
  <contributor>
    <name>1491. Average Salary Excluding the Minimum And Maximum Salary</name>
  </contributor>
  <contributor>
    <name>15. 3sum</name>
  </contributor>
  <contributor>
    <name>1502. Can Make Arithmetic Progression From Sequence</name>
  </contributor>
  <contributor>
    <name>1512. Number of Good Pairs</name>
  </contributor>
  <contributor>
    <name>1518. Wate Bottles</name>
  </contributor>
  <contributor>
    <name>1528. Shuffle String</name>
  </contributor>
  <contributor>
    <name>1572. Matrix Diagonal Sum</name>
  </contributor>
  <contributor>
    <name>1603. Design Parking System</name>
  </contributor>
  <contributor>
    <name>167. Two Sum Ii Input Array Is Sorted</name>
  </contributor>
  <contributor>
    <name>198. House Robbe</name>
  </contributor>
  <contributor>
    <name>2. Add Two Numbers</name>
  </contributor>
  <contributor>
    <name>226. Invert Binary Tree</name>
  </contributor>
  <contributor>
    <name>237. Delete Node in a Linked List</name>
  </contributor>
  <contributor>
    <name>242. Valid Anagram</name>
  </contributor>
  <contributor>
    <name>268. Missing Number</name>
  </contributor>
  <contributor>
    <name>283. Move Zeroes</name>
  </contributor>
  <contributor>
    <name>292. Nim Game</name>
  </contributor>
  <contributor>
    <name>344. Reverse String</name>
  </contributor>
  <contributor>
    <name>371. Sum of Two Integers</name>
  </contributor>
  <contributor>
    <name>387. First Unique Character in a String</name>
  </contributor>
  <contributor>
    <name>389. Find the Difference</name>
  </contributor>
  <contributor>
    <name>4. Median of Two Sorted Arrays</name>
  </contributor>
  <contributor>
    <name>415. Add Strings</name>
  </contributor>
  <contributor>
    <name>43. Multiply Strings</name>
  </contributor>
  <contributor>
    <name>455. Assign Cookies</name>
  </contributor>
  <contributor>
    <name>461. Hamming Distance</name>
  </contributor>
  <contributor>
    <name>53. Maximum Subarray</name>
  </contributor>
  <contributor>
    <name>66. Plus One</name>
  </contributor>
  <contributor>
    <name>67. Add Binary</name>
  </contributor>
  <contributor>
    <name>7. Reverse Integer</name>
  </contributor>
  <contributor>
    <name>70. Climbing Stairs</name>
  </contributor>
  <contributor>
    <name>771. Jewels And Stones</name>
  </contributor>
  <contributor>
    <name>860. Lemonade Change</name>
  </contributor>
  <contributor>
    <name>867. Transpose Matrix</name>
  </contributor>
  <contributor>
    <name>88. Merge Sorted Array</name>
  </contributor>
  <contributor>
    <name>9. Palindrome Number</name>
  </contributor>
  <contributor>
    <name>905. Sort Array By Parity</name>
  </contributor>
  <contributor>
    <name>922. Sort Array By Parity Ii</name>
  </contributor>
  <contributor>
    <name>977. Squares of a Sorted Array</name>
  </contributor>
  <entry>
    <title type="html">C++</title>
    <id>https://leetcode.innenu.com/1-two-sum/C++/</id>
    <link href="https://leetcode.innenu.com/1-two-sum/C++/"/>
    <updated>2021-02-17T16:18:42.535Z</updated>
    <content type="html"><![CDATA[<h2 id="mister-hope"> Mister-Hope</h2>
<div><pre><code><span>/*
 * Runtime: 188 ms, faster than 36.71% of C++ online submissions for Two Sum.
 *
 * Memory Usage: 52.9 MB, less than 13.71% of C++ online submissions for Two
 * Sum.
 */</span>

<span><span>#</span><span>include</span> <span>&lt;unordered_map></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  vector<span>&lt;</span><span>int</span><span>></span> <span>twoSum</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums<span>,</span> <span>int</span> target<span>)</span> <span>{</span>
    unordered_map<span>&lt;</span><span>int</span><span>,</span> <span>int</span><span>></span> prevMap<span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>int</span> j <span>=</span> target <span>-</span> nums<span>[</span>i<span>]</span><span>;</span>

      <span>if</span> <span>(</span>prevMap<span>.</span><span>count</span><span>(</span>j<span>)</span><span>)</span> <span>return</span> <span>{</span>prevMap<span>[</span>j<span>]</span><span>,</span> i<span>}</span><span>;</span>
      prevMap<span>[</span>nums<span>[</span>i<span>]</span><span>]</span> <span>=</span> i<span>;</span>
    <span>}</span>

    <span>return</span> <span>{</span><span>}</span><span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br></div></div><h2 id="virgil"> Virgil</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>
<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  vector<span>&lt;</span><span>int</span><span>></span> <span>twoSum</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums<span>,</span> <span>int</span> target<span>)</span> <span>{</span>
    <span>int</span> n <span>=</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> n <span>-</span> <span>1</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>for</span> <span>(</span><span>int</span> j <span>=</span> i <span>+</span> <span>1</span><span>;</span> j <span>&lt;</span> n<span>;</span> j<span>++</span><span>)</span> <span>{</span>
        <span>if</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>+</span> nums<span>[</span>j<span>]</span> <span>==</span> target<span>)</span> <span>{</span>
          <span>return</span> <span>{</span>i<span>,</span> j<span>}</span><span>;</span>
        <span>}</span>
      <span>}</span>
    <span>}</span>
    <span>return</span> <span>{</span><span>}</span><span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div><h2 id="sqm"> sqm</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  vector<span>&lt;</span><span>int</span><span>></span> <span>twoSum</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums<span>,</span> <span>int</span> target<span>)</span> <span>{</span>
    <span>int</span> i<span>,</span> j<span>;</span>
    <span>for</span> <span>(</span>i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>for</span> <span>(</span>j <span>=</span> i <span>+</span> <span>1</span><span>;</span> j <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> j<span>++</span><span>)</span> <span>{</span>
        <span>if</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>+</span> nums<span>[</span>j<span>]</span> <span>==</span> target<span>)</span> <span>return</span> <span>{</span>i<span>,</span> j<span>}</span><span>;</span>
      <span>}</span>
    <span>}</span>
    <span>return</span> <span>{</span>i<span>,</span> j<span>}</span><span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div>]]></content>
    <author>
      <name>1. Two Sum</name>
    </author>
    <category term="C++"/>
    <contributor>
      <name>1. Two Sum</name>
    </contributor>
    <rights>Copyright by 1. Two Sum</rights>
  </entry>
  <entry>
    <title type="html">Java</title>
    <id>https://leetcode.innenu.com/1-two-sum/Java/</id>
    <link href="https://leetcode.innenu.com/1-two-sum/Java/"/>
    <updated>2021-02-17T16:18:42.536Z</updated>
    <content type="html"><![CDATA[<h2 id="mister-hope"> Mister-Hope</h2>
<div><pre><code><span>/*
 * Runtime: 10 ms, faster than 41.97% of Java online submissions for Two Sum.
 *
 * Memory Usage: 56.5 MB, less than 6.02% of Java online submissions for Two Sum.
 */</span>

<span>import</span> <span>java<span>.</span>util<span>.</span></span><span>HashMap</span><span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>twoSum</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>,</span> <span>int</span> target<span>)</span> <span>{</span>
    <span>HashMap</span><span><span>&lt;</span><span>Integer</span><span>,</span> <span>Integer</span><span>></span></span> map <span>=</span> <span>new</span> <span>HashMap</span><span><span>&lt;</span><span>Integer</span><span>,</span> <span>Integer</span><span>></span></span><span>(</span><span>)</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>int</span> j <span>=</span> target <span>-</span> nums<span>[</span>i<span>]</span><span>;</span>

      <span>if</span> <span>(</span>map<span>.</span><span>containsKey</span><span>(</span>j<span>)</span><span>)</span>
        <span>return</span> <span>new</span> <span>int</span><span>[</span><span>]</span> <span>{</span>map<span>.</span><span>get</span><span>(</span>j<span>)</span><span>,</span> i<span>}</span><span>;</span>

      map<span>.</span><span>put</span><span>(</span>nums<span>[</span>i<span>]</span><span>,</span> i<span>)</span><span>;</span>
    <span>}</span>

    <span>throw</span> <span>new</span> <span>IllegalArgumentException</span><span>(</span><span>"No solution"</span><span>)</span><span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br></div></div><h2 id="lizncu"> lizncu</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>twoSum</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>,</span> <span>int</span> target<span>)</span> <span>{</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>for</span> <span>(</span><span>int</span> j <span>=</span> i <span>+</span> <span>1</span><span>;</span> j <span>&lt;</span> nums<span>.</span>length<span>;</span> j<span>++</span><span>)</span> <span>{</span>
        <span>if</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>+</span> nums<span>[</span>j<span>]</span> <span>==</span> target<span>)</span> <span>{</span>
          <span>return</span> <span>new</span> <span>int</span><span>[</span><span>]</span> <span>{</span>i<span>,</span> j<span>}</span><span>;</span>
        <span>}</span>
      <span>}</span>
    <span>}</span>

    <span>throw</span> <span>new</span> <span>IllegalArgumentException</span><span>(</span><span>"No two sum solution"</span><span>)</span><span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div><h2 id="lmy"> lmy</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>twoSum</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>,</span> <span>int</span> target<span>)</span> <span>{</span>
    <span>int</span> n <span>=</span> nums<span>.</span>length<span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> n<span>;</span> <span>++</span>i<span>)</span> <span>{</span>
      <span>for</span> <span>(</span><span>int</span> j <span>=</span> i <span>+</span> <span>1</span><span>;</span> j <span>&lt;</span> n<span>;</span> <span>++</span>j<span>)</span> <span>{</span>
        <span>if</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>+</span> nums<span>[</span>j<span>]</span> <span>==</span> target<span>)</span> <span>{</span>
          <span>return</span> <span>new</span> <span>int</span><span>[</span><span>]</span> <span>{</span>i<span>,</span> j<span>}</span><span>;</span>
        <span>}</span>
      <span>}</span>
    <span>}</span>
    <span>return</span> <span>new</span> <span>int</span><span>[</span><span>0</span><span>]</span><span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div>]]></content>
    <author>
      <name>1. Two Sum</name>
    </author>
    <category term="Java"/>
    <contributor>
      <name>1. Two Sum</name>
    </contributor>
    <rights>Copyright by 1. Two Sum</rights>
  </entry>
  <entry>
    <title type="html">JavaScript</title>
    <id>https://leetcode.innenu.com/1-two-sum/JavaScript/</id>
    <link href="https://leetcode.innenu.com/1-two-sum/JavaScript/"/>
    <updated>2021-02-17T16:18:42.537Z</updated>
    <content type="html"><![CDATA[<h2 id="mister-hope"> Mister-Hope</h2>
<div><pre><code><span>/*
 * Runtime: 112 ms, faster than 48.98% of JavaScript online submissions for Two Sum.
 *
 * Memory Usage: 48.3 MB, less than 5.73% of JavaScript online submissions for Two Sum.
 */</span>

<span>const</span> <span>twoSum</span> <span>=</span> <span>(</span><span>nums<span>,</span> target</span><span>)</span> <span>=></span> <span>{</span>
  <span>const</span> arr <span>=</span> <span>[</span><span>]</span><span>;</span>

  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
    <span>let</span> j <span>=</span> arr<span>[</span>target <span>-</span> nums<span>[</span>i<span>]</span><span>]</span><span>;</span>
    <span>if</span> <span>(</span>j <span>!==</span> <span>undefined</span><span>)</span> <span>return</span> <span>[</span>j<span>,</span> i<span>]</span><span>;</span>
    arr<span>[</span>nums<span>[</span>i<span>]</span><span>]</span> <span>=</span> i<span>;</span>
  <span>}</span>

  <span>throw</span> <span>new</span> <span>Error</span><span>(</span><span>"No solution"</span><span>)</span><span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div>]]></content>
    <author>
      <name>1. Two Sum</name>
    </author>
    <category term="JavaScript"/>
    <contributor>
      <name>1. Two Sum</name>
    </contributor>
    <rights>Copyright by 1. Two Sum</rights>
  </entry>
  <entry>
    <title type="html">Mister-Hope</title>
    <id>https://leetcode.innenu.com/1-two-sum/Mister-Hope/</id>
    <link href="https://leetcode.innenu.com/1-two-sum/Mister-Hope/"/>
    <updated>2021-02-17T16:18:42.538Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span>/*
 * Runtime: 188 ms, faster than 36.71% of C++ online submissions for Two Sum.
 *
 * Memory Usage: 52.9 MB, less than 13.71% of C++ online submissions for Two
 * Sum.
 */</span>

<span><span>#</span><span>include</span> <span>&lt;unordered_map></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  vector<span>&lt;</span><span>int</span><span>></span> <span>twoSum</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums<span>,</span> <span>int</span> target<span>)</span> <span>{</span>
    unordered_map<span>&lt;</span><span>int</span><span>,</span> <span>int</span><span>></span> prevMap<span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>int</span> j <span>=</span> target <span>-</span> nums<span>[</span>i<span>]</span><span>;</span>

      <span>if</span> <span>(</span>prevMap<span>.</span><span>count</span><span>(</span>j<span>)</span><span>)</span> <span>return</span> <span>{</span>prevMap<span>[</span>j<span>]</span><span>,</span> i<span>}</span><span>;</span>
      prevMap<span>[</span>nums<span>[</span>i<span>]</span><span>]</span> <span>=</span> i<span>;</span>
    <span>}</span>

    <span>return</span> <span>{</span><span>}</span><span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br></div></div><h2 id="java"> Java</h2>
<div><pre><code><span>/*
 * Runtime: 10 ms, faster than 41.97% of Java online submissions for Two Sum.
 *
 * Memory Usage: 56.5 MB, less than 6.02% of Java online submissions for Two Sum.
 */</span>

<span>import</span> <span>java<span>.</span>util<span>.</span></span><span>HashMap</span><span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>twoSum</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>,</span> <span>int</span> target<span>)</span> <span>{</span>
    <span>HashMap</span><span><span>&lt;</span><span>Integer</span><span>,</span> <span>Integer</span><span>></span></span> map <span>=</span> <span>new</span> <span>HashMap</span><span><span>&lt;</span><span>Integer</span><span>,</span> <span>Integer</span><span>></span></span><span>(</span><span>)</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>int</span> j <span>=</span> target <span>-</span> nums<span>[</span>i<span>]</span><span>;</span>

      <span>if</span> <span>(</span>map<span>.</span><span>containsKey</span><span>(</span>j<span>)</span><span>)</span>
        <span>return</span> <span>new</span> <span>int</span><span>[</span><span>]</span> <span>{</span>map<span>.</span><span>get</span><span>(</span>j<span>)</span><span>,</span> i<span>}</span><span>;</span>

      map<span>.</span><span>put</span><span>(</span>nums<span>[</span>i<span>]</span><span>,</span> i<span>)</span><span>;</span>
    <span>}</span>

    <span>throw</span> <span>new</span> <span>IllegalArgumentException</span><span>(</span><span>"No solution"</span><span>)</span><span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br></div></div><h2 id="javascript"> JavaScript</h2>
<div><pre><code><span>/*
 * Runtime: 112 ms, faster than 48.98% of JavaScript online submissions for Two Sum.
 *
 * Memory Usage: 48.3 MB, less than 5.73% of JavaScript online submissions for Two Sum.
 */</span>

<span>const</span> <span>twoSum</span> <span>=</span> <span>(</span><span>nums<span>,</span> target</span><span>)</span> <span>=></span> <span>{</span>
  <span>const</span> arr <span>=</span> <span>[</span><span>]</span><span>;</span>

  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
    <span>let</span> j <span>=</span> arr<span>[</span>target <span>-</span> nums<span>[</span>i<span>]</span><span>]</span><span>;</span>
    <span>if</span> <span>(</span>j <span>!==</span> <span>undefined</span><span>)</span> <span>return</span> <span>[</span>j<span>,</span> i<span>]</span><span>;</span>
    arr<span>[</span>nums<span>[</span>i<span>]</span><span>]</span> <span>=</span> i<span>;</span>
  <span>}</span>

  <span>throw</span> <span>new</span> <span>Error</span><span>(</span><span>"No solution"</span><span>)</span><span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div><h2 id="python3"> Python3</h2>
<div><pre><code><span># Runtime: 476 ms, faster than 32.13% of Python3 online submissions for Two Sum.</span>
<span>#</span>
<span># Memory Usage: 27.9 MB, less than 17.63% of Python3 online submissions for Two Sum.</span>

<span>class</span> <span>Solution</span><span>:</span>
  <span>def</span> <span>twoSum</span><span>(</span>self<span>,</span> nums<span>:</span> List<span>[</span><span>int</span><span>]</span><span>,</span> target<span>:</span> <span>int</span><span>)</span> <span>-</span><span>></span> List<span>[</span><span>int</span><span>]</span><span>:</span>
    prevMap <span>=</span> <span>{</span><span>}</span>
    
    <span>for</span> i<span>,</span> v <span>in</span> <span>enumerate</span><span>(</span>nums<span>)</span><span>:</span>
      j <span>=</span> target <span>-</span> v
      <span>if</span> j <span>in</span> prevMap<span>:</span>
        <span>return</span> <span>[</span>prevMap<span>[</span>j<span>]</span><span>,</span> i<span>]</span>
      prevMap<span>[</span>v<span>]</span> <span>=</span> i
    <span>return</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div><h2 id="typescript"> TypeScript</h2>
<div><pre><code><span>/*
 * Runtime: 124 ms, faster than 50.73% of TypeScript online submissions for Two Sum.
 *
 * Memory Usage: 48.7 MB, less than 5.74% of TypeScript online submissions for Two Sum.
 */</span>

<span>const</span> twoSum <span>=</span> <span>(</span>nums<span>:</span> <span>number</span><span>[</span><span>]</span><span>,</span> target<span>:</span> <span>number</span><span>)</span><span>:</span> <span>number</span><span>[</span><span>]</span> <span>=></span> <span>{</span>
  <span>const</span> arr <span>=</span> <span>[</span><span>]</span><span>;</span>

  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
    <span>let</span> j <span>=</span> arr<span>[</span>target <span>-</span> nums<span>[</span>i<span>]</span><span>]</span><span>;</span>
    <span>if</span> <span>(</span>j <span>!==</span> <span>undefined</span><span>)</span> <span>return</span> <span>[</span>j<span>,</span> i<span>]</span><span>;</span>
    arr<span>[</span>nums<span>[</span>i<span>]</span><span>]</span> <span>=</span> i<span>;</span>
  <span>}</span>

  <span>throw</span> <span>new</span> <span>Error</span><span>(</span><span>"No solution"</span><span>)</span><span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div>]]></content>
    <author>
      <name>1. Two Sum</name>
    </author>
    <category term="Mister-Hope"/>
    <contributor>
      <name>1. Two Sum</name>
    </contributor>
    <rights>Copyright by 1. Two Sum</rights>
  </entry>
  <entry>
    <title type="html">Python3</title>
    <id>https://leetcode.innenu.com/1-two-sum/Python3/</id>
    <link href="https://leetcode.innenu.com/1-two-sum/Python3/"/>
    <updated>2021-02-17T16:18:42.539Z</updated>
    <content type="html"><![CDATA[<h2 id="mister-hope"> Mister-Hope</h2>
<div><pre><code><span># Runtime: 476 ms, faster than 32.13% of Python3 online submissions for Two Sum.</span>
<span>#</span>
<span># Memory Usage: 27.9 MB, less than 17.63% of Python3 online submissions for Two Sum.</span>

<span>class</span> <span>Solution</span><span>:</span>
  <span>def</span> <span>twoSum</span><span>(</span>self<span>,</span> nums<span>:</span> List<span>[</span><span>int</span><span>]</span><span>,</span> target<span>:</span> <span>int</span><span>)</span> <span>-</span><span>></span> List<span>[</span><span>int</span><span>]</span><span>:</span>
    prevMap <span>=</span> <span>{</span><span>}</span>
    
    <span>for</span> i<span>,</span> v <span>in</span> <span>enumerate</span><span>(</span>nums<span>)</span><span>:</span>
      j <span>=</span> target <span>-</span> v
      <span>if</span> j <span>in</span> prevMap<span>:</span>
        <span>return</span> <span>[</span>prevMap<span>[</span>j<span>]</span><span>,</span> i<span>]</span>
      prevMap<span>[</span>v<span>]</span> <span>=</span> i
    <span>return</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div>]]></content>
    <author>
      <name>1. Two Sum</name>
    </author>
    <category term="Python3"/>
    <contributor>
      <name>1. Two Sum</name>
    </contributor>
    <rights>Copyright by 1. Two Sum</rights>
  </entry>
  <entry>
    <title type="html">TypeScript</title>
    <id>https://leetcode.innenu.com/1-two-sum/TypeScript/</id>
    <link href="https://leetcode.innenu.com/1-two-sum/TypeScript/"/>
    <updated>2021-02-17T16:18:42.540Z</updated>
    <content type="html"><![CDATA[<h2 id="mister-hope"> Mister-Hope</h2>
<div><pre><code><span>/*
 * Runtime: 124 ms, faster than 50.73% of TypeScript online submissions for Two Sum.
 *
 * Memory Usage: 48.7 MB, less than 5.74% of TypeScript online submissions for Two Sum.
 */</span>

<span>const</span> twoSum <span>=</span> <span>(</span>nums<span>:</span> <span>number</span><span>[</span><span>]</span><span>,</span> target<span>:</span> <span>number</span><span>)</span><span>:</span> <span>number</span><span>[</span><span>]</span> <span>=></span> <span>{</span>
  <span>const</span> arr <span>=</span> <span>[</span><span>]</span><span>;</span>

  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
    <span>let</span> j <span>=</span> arr<span>[</span>target <span>-</span> nums<span>[</span>i<span>]</span><span>]</span><span>;</span>
    <span>if</span> <span>(</span>j <span>!==</span> <span>undefined</span><span>)</span> <span>return</span> <span>[</span>j<span>,</span> i<span>]</span><span>;</span>
    arr<span>[</span>nums<span>[</span>i<span>]</span><span>]</span> <span>=</span> i<span>;</span>
  <span>}</span>

  <span>throw</span> <span>new</span> <span>Error</span><span>(</span><span>"No solution"</span><span>)</span><span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div>]]></content>
    <author>
      <name>1. Two Sum</name>
    </author>
    <category term="TypeScript"/>
    <contributor>
      <name>1. Two Sum</name>
    </contributor>
    <rights>Copyright by 1. Two Sum</rights>
  </entry>
  <entry>
    <title type="html">Virgil</title>
    <id>https://leetcode.innenu.com/1-two-sum/Virgil/</id>
    <link href="https://leetcode.innenu.com/1-two-sum/Virgil/"/>
    <updated>2021-02-17T16:18:42.541Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>
<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  vector<span>&lt;</span><span>int</span><span>></span> <span>twoSum</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums<span>,</span> <span>int</span> target<span>)</span> <span>{</span>
    <span>int</span> n <span>=</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> n <span>-</span> <span>1</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>for</span> <span>(</span><span>int</span> j <span>=</span> i <span>+</span> <span>1</span><span>;</span> j <span>&lt;</span> n<span>;</span> j<span>++</span><span>)</span> <span>{</span>
        <span>if</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>+</span> nums<span>[</span>j<span>]</span> <span>==</span> target<span>)</span> <span>{</span>
          <span>return</span> <span>{</span>i<span>,</span> j<span>}</span><span>;</span>
        <span>}</span>
      <span>}</span>
    <span>}</span>
    <span>return</span> <span>{</span><span>}</span><span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div>]]></content>
    <author>
      <name>1. Two Sum</name>
    </author>
    <category term="Virgil"/>
    <contributor>
      <name>1. Two Sum</name>
    </contributor>
    <rights>Copyright by 1. Two Sum</rights>
  </entry>
  <entry>
    <title type="html">lizncu</title>
    <id>https://leetcode.innenu.com/1-two-sum/lizncu/</id>
    <link href="https://leetcode.innenu.com/1-two-sum/lizncu/"/>
    <updated>2021-02-17T16:18:42.541Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>twoSum</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>,</span> <span>int</span> target<span>)</span> <span>{</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>for</span> <span>(</span><span>int</span> j <span>=</span> i <span>+</span> <span>1</span><span>;</span> j <span>&lt;</span> nums<span>.</span>length<span>;</span> j<span>++</span><span>)</span> <span>{</span>
        <span>if</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>+</span> nums<span>[</span>j<span>]</span> <span>==</span> target<span>)</span> <span>{</span>
          <span>return</span> <span>new</span> <span>int</span><span>[</span><span>]</span> <span>{</span>i<span>,</span> j<span>}</span><span>;</span>
        <span>}</span>
      <span>}</span>
    <span>}</span>

    <span>throw</span> <span>new</span> <span>IllegalArgumentException</span><span>(</span><span>"No two sum solution"</span><span>)</span><span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div>]]></content>
    <author>
      <name>1. Two Sum</name>
    </author>
    <category term="lizncu"/>
    <contributor>
      <name>1. Two Sum</name>
    </contributor>
    <rights>Copyright by 1. Two Sum</rights>
  </entry>
  <entry>
    <title type="html">lmy</title>
    <id>https://leetcode.innenu.com/1-two-sum/lmy/</id>
    <link href="https://leetcode.innenu.com/1-two-sum/lmy/"/>
    <updated>2021-02-17T16:18:42.541Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>twoSum</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>,</span> <span>int</span> target<span>)</span> <span>{</span>
    <span>int</span> n <span>=</span> nums<span>.</span>length<span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> n<span>;</span> <span>++</span>i<span>)</span> <span>{</span>
      <span>for</span> <span>(</span><span>int</span> j <span>=</span> i <span>+</span> <span>1</span><span>;</span> j <span>&lt;</span> n<span>;</span> <span>++</span>j<span>)</span> <span>{</span>
        <span>if</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>+</span> nums<span>[</span>j<span>]</span> <span>==</span> target<span>)</span> <span>{</span>
          <span>return</span> <span>new</span> <span>int</span><span>[</span><span>]</span> <span>{</span>i<span>,</span> j<span>}</span><span>;</span>
        <span>}</span>
      <span>}</span>
    <span>}</span>
    <span>return</span> <span>new</span> <span>int</span><span>[</span><span>0</span><span>]</span><span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div>]]></content>
    <author>
      <name>1. Two Sum</name>
    </author>
    <category term="lmy"/>
    <contributor>
      <name>1. Two Sum</name>
    </contributor>
    <rights>Copyright by 1. Two Sum</rights>
  </entry>
  <entry>
    <title type="html">1. Two Sum</title>
    <id>https://leetcode.innenu.com/1-two-sum/</id>
    <link href="https://leetcode.innenu.com/1-two-sum/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_1-two-sum"> <a href="https://leetcode.com/problems/two-sum/" target="_blank" rel="noopener noreferrer">1. Two Sum</a></h1>
<p>Given an array of integers <code>nums</code> and an integer <code>target</code>, return <em>indices of the two numbers such that they add up to <code>target</code></em>.</p>
<p>You may assume that each input would have <strong><em>exactly</em> one solution</strong>, and you may not use the <em>same</em> element twice.</p>
<p>You can return the answer in any order.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> nums = [2,7,11,15], target = 9</p>
<p><strong>Output:</strong> [0,1]</p>
<p><strong>Output:</strong> Because nums[0] + nums[1] == 9, we return [0, 1].</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> nums = [3,2,4], target = 6</p>
<p><strong>Output:</strong> [1,2]</p>
<p><strong>Example 3:</strong></p>
<p><strong>Input:</strong> nums = [3,3], target = 6</p>
<p><strong>Output:</strong> [0,1]</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>2 &lt;= nums.length &lt;= 105</code></li>
<li><code>-109 &lt;= nums[i] &lt;= 109</code></li>
<li><code>-109 &lt;= target &lt;= 109</code></li>
<li><strong>Only one valid answer exists.</strong></li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">sqm</title>
    <id>https://leetcode.innenu.com/1-two-sum/sqm/</id>
    <link href="https://leetcode.innenu.com/1-two-sum/sqm/"/>
    <updated>2021-02-17T16:18:42.543Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  vector<span>&lt;</span><span>int</span><span>></span> <span>twoSum</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums<span>,</span> <span>int</span> target<span>)</span> <span>{</span>
    <span>int</span> i<span>,</span> j<span>;</span>
    <span>for</span> <span>(</span>i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>for</span> <span>(</span>j <span>=</span> i <span>+</span> <span>1</span><span>;</span> j <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> j<span>++</span><span>)</span> <span>{</span>
        <span>if</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>+</span> nums<span>[</span>j<span>]</span> <span>==</span> target<span>)</span> <span>return</span> <span>{</span>i<span>,</span> j<span>}</span><span>;</span>
      <span>}</span>
    <span>}</span>
    <span>return</span> <span>{</span>i<span>,</span> j<span>}</span><span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div>]]></content>
    <author>
      <name>1. Two Sum</name>
    </author>
    <category term="sqm"/>
    <contributor>
      <name>1. Two Sum</name>
    </contributor>
    <rights>Copyright by 1. Two Sum</rights>
  </entry>
  <entry>
    <title type="html">C++</title>
    <id>https://leetcode.innenu.com/1025-divisor-game/C++/</id>
    <link href="https://leetcode.innenu.com/1025-divisor-game/C++/"/>
    <updated>2021-02-17T16:18:42.543Z</updated>
    <content type="html"><![CDATA[<h2 id="virgil"> Virgil</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>
<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>bool</span> <span>divisorGame</span><span>(</span><span>int</span> N<span>)</span> <span>{</span>
    <span>if</span> <span>(</span>N <span>%</span> <span>2</span> <span>==</span> <span>0</span><span>)</span>
      <span>return</span> <span>true</span><span>;</span>
    <span>else</span>
      <span>return</span> <span>false</span><span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div>]]></content>
    <author>
      <name>1025. Divisor Game</name>
    </author>
    <category term="C++"/>
    <contributor>
      <name>1025. Divisor Game</name>
    </contributor>
    <rights>Copyright by 1025. Divisor Game</rights>
  </entry>
  <entry>
    <title type="html">Virgil</title>
    <id>https://leetcode.innenu.com/1025-divisor-game/Virgil/</id>
    <link href="https://leetcode.innenu.com/1025-divisor-game/Virgil/"/>
    <updated>2021-02-17T16:18:42.543Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>
<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>bool</span> <span>divisorGame</span><span>(</span><span>int</span> N<span>)</span> <span>{</span>
    <span>if</span> <span>(</span>N <span>%</span> <span>2</span> <span>==</span> <span>0</span><span>)</span>
      <span>return</span> <span>true</span><span>;</span>
    <span>else</span>
      <span>return</span> <span>false</span><span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div>]]></content>
    <author>
      <name>1025. Divisor Game</name>
    </author>
    <category term="Virgil"/>
    <contributor>
      <name>1025. Divisor Game</name>
    </contributor>
    <rights>Copyright by 1025. Divisor Game</rights>
  </entry>
  <entry>
    <title type="html">1025. Divisor Game</title>
    <id>https://leetcode.innenu.com/1025-divisor-game/</id>
    <link href="https://leetcode.innenu.com/1025-divisor-game/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_1025-divisor-game"> <a href="https://leetcode.com/problems/divisor-game/" target="_blank" rel="noopener noreferrer">1025. Divisor Game</a></h1>
<p>Alice and Bob take turns playing a game, with Alice starting first.</p>
<p>Initially, there is a number <code>N</code> on the chalkboard. On each player's turn, that player makes a <em>move</em> consisting of:</p>
<ul>
<li>Choosing any <code>x</code> with <code>0 &lt; x &lt; N</code> and <code>N % x == 0</code>.</li>
<li>Replacing the number <code>N</code> on the chalkboard with <code>N - x</code>.</li>
</ul>
<p>Also, if a player cannot make a move, they lose the game.</p>
<p>Return <code>True</code> if and only if Alice wins the game, assuming both players play optimally.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> 2</p>
<p><strong>Output:</strong> true</p>
<p><strong>Explanation:</strong> Alice chooses 1, and Bob has no more moves.</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> 3</p>
<p><strong>Output:</strong> false</p>
<p><strong>Explanation:</strong> Alice chooses 1, Bob chooses 1, and Alice has no more moves.</p>
<p><strong>Note:</strong></p>
<ol>
<li><code>1 &lt;= N &lt;= 1000</code></li>
</ol>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">C++</title>
    <id>https://leetcode.innenu.com/104-Maximum-Depth-Of-Binary-Tree/C++/</id>
    <link href="https://leetcode.innenu.com/104-Maximum-Depth-Of-Binary-Tree/C++/"/>
    <updated>2021-02-17T16:18:42.544Z</updated>
    <content type="html"><![CDATA[<h2 id="sqm"> sqm</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>
<span>/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */</span>
<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>int</span> <span>maxDepth</span><span>(</span>TreeNode<span>*</span> root<span>)</span> <span>{</span>
    <span>if</span> <span>(</span>root <span>==</span> <span>nullptr</span><span>)</span> <span>return</span> <span>0</span><span>;</span>
    <span>return</span> <span>max</span><span>(</span><span>maxDepth</span><span>(</span>root<span>-></span>right<span>)</span><span>,</span> <span>maxDepth</span><span>(</span>root<span>-></span>left<span>)</span><span>)</span> <span>+</span> <span>1</span><span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div>]]></content>
    <author>
      <name>104. Maximum Depth Of Binary Tree</name>
    </author>
    <category term="C++"/>
    <contributor>
      <name>104. Maximum Depth Of Binary Tree</name>
    </contributor>
    <rights>Copyright by 104. Maximum Depth Of Binary Tree</rights>
  </entry>
  <entry>
    <title type="html">104. Maximum Depth of Binary Tree</title>
    <id>https://leetcode.innenu.com/104-Maximum-Depth-Of-Binary-Tree/</id>
    <link href="https://leetcode.innenu.com/104-Maximum-Depth-Of-Binary-Tree/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_104-maximum-depth-of-binary-tree"> <a href="https://leetcode.com/problems/maximum-depth-of-binary-tree/" target="_blank" rel="noopener noreferrer">104. Maximum Depth of Binary Tree</a></h1>
<p>Given a binary tree, find its maximum depth.</p>
<p>The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.</p>
<p><strong>Note:</strong> A leaf is a node with no children.</p>
<p><strong>Example:</strong></p>
<p>Given binary tree <code>[3,9,20,null,null,15,7]</code>,</p>
<div><pre><code>    3
   / \\
  9  20
    /  \\
   15   7
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>return its depth = 3.</p>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">sqm</title>
    <id>https://leetcode.innenu.com/104-Maximum-Depth-Of-Binary-Tree/sqm/</id>
    <link href="https://leetcode.innenu.com/104-Maximum-Depth-Of-Binary-Tree/sqm/"/>
    <updated>2021-02-17T16:18:42.545Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>
<span>/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */</span>
<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>int</span> <span>maxDepth</span><span>(</span>TreeNode<span>*</span> root<span>)</span> <span>{</span>
    <span>if</span> <span>(</span>root <span>==</span> <span>nullptr</span><span>)</span> <span>return</span> <span>0</span><span>;</span>
    <span>return</span> <span>max</span><span>(</span><span>maxDepth</span><span>(</span>root<span>-></span>right<span>)</span><span>,</span> <span>maxDepth</span><span>(</span>root<span>-></span>left<span>)</span><span>)</span> <span>+</span> <span>1</span><span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div>]]></content>
    <author>
      <name>104. Maximum Depth Of Binary Tree</name>
    </author>
    <category term="sqm"/>
    <contributor>
      <name>104. Maximum Depth Of Binary Tree</name>
    </contributor>
    <rights>Copyright by 104. Maximum Depth Of Binary Tree</rights>
  </entry>
  <entry>
    <title type="html">C++</title>
    <id>https://leetcode.innenu.com/1122-Relative-Sort-Array/C++/</id>
    <link href="https://leetcode.innenu.com/1122-Relative-Sort-Array/C++/"/>
    <updated>2021-02-17T16:18:42.545Z</updated>
    <content type="html"><![CDATA[<h2 id="sqm"> sqm</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>
<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  vector<span>&lt;</span><span>int</span><span>></span> <span>relativeSortArray</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> arr1<span>,</span> vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> arr2<span>)</span> <span>{</span>
    <span>int</span> tmp <span>=</span> <span>0</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> arr2<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>0</span><span>;</span> j <span>&lt;</span> arr1<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> j<span>++</span><span>)</span> <span>{</span>
        <span>if</span> <span>(</span>arr1<span>[</span>j<span>]</span> <span>==</span> arr2<span>[</span>i<span>]</span><span>)</span> <span>{</span>
          <span>swap</span><span>(</span>arr1<span>[</span>j<span>]</span><span>,</span> arr1<span>[</span>tmp<span>]</span><span>)</span><span>;</span>
          tmp<span>++</span><span>;</span>
        <span>}</span>
      <span>}</span>
    <span>}</span>
    <span>sort</span><span>(</span>arr1<span>.</span><span>begin</span><span>(</span><span>)</span> <span>+</span> tmp<span>,</span> arr1<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>
    <span>return</span> arr1<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br></div></div>]]></content>
    <author>
      <name>1122. Relative Sort Array</name>
    </author>
    <category term="C++"/>
    <contributor>
      <name>1122. Relative Sort Array</name>
    </contributor>
    <rights>Copyright by 1122. Relative Sort Array</rights>
  </entry>
  <entry>
    <title type="html">1122. Relative Sort Array</title>
    <id>https://leetcode.innenu.com/1122-Relative-Sort-Array/</id>
    <link href="https://leetcode.innenu.com/1122-Relative-Sort-Array/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_1122-relative-sort-array"> <a href="https://leetcode.com/problems/relative-sort-array/" target="_blank" rel="noopener noreferrer">1122. Relative Sort Array</a></h1>
<p>Given two arrays <code>arr1</code> and <code>arr2</code>, the elements of <code>arr2</code> are distinct, and all elements in <code>arr2</code> are also in <code>arr1</code>.</p>
<p>Sort the elements of <code>arr1</code> such that the relative ordering of items in <code>arr1</code> are the same as in <code>arr2</code>. Elements that don't appear in <code>arr2</code> should be placed at the end of <code>arr1</code> in <strong>ascending</strong> order.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> arr1 = [2,3,1,3,2,4,6,7,9,2,19], arr2 = [2,1,4,3,9,6]</p>
<p><strong>Output:</strong> [2,2,2,1,4,3,3,9,6,7,19]</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>1 &lt;= arr1.length, arr2.length &lt;= 1000</code></li>
<li><code>0 &lt;= arr1[i], arr2[i] &lt;= 1000</code></li>
<li>All the elements of <code>arr2</code> are <strong>distinct</strong>.</li>
<li>Each <code>arr2[i]</code> is in <code>arr1</code>.</li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">sqm</title>
    <id>https://leetcode.innenu.com/1122-Relative-Sort-Array/sqm/</id>
    <link href="https://leetcode.innenu.com/1122-Relative-Sort-Array/sqm/"/>
    <updated>2021-02-17T16:18:42.546Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>
<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  vector<span>&lt;</span><span>int</span><span>></span> <span>relativeSortArray</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> arr1<span>,</span> vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> arr2<span>)</span> <span>{</span>
    <span>int</span> tmp <span>=</span> <span>0</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> arr2<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>0</span><span>;</span> j <span>&lt;</span> arr1<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> j<span>++</span><span>)</span> <span>{</span>
        <span>if</span> <span>(</span>arr1<span>[</span>j<span>]</span> <span>==</span> arr2<span>[</span>i<span>]</span><span>)</span> <span>{</span>
          <span>swap</span><span>(</span>arr1<span>[</span>j<span>]</span><span>,</span> arr1<span>[</span>tmp<span>]</span><span>)</span><span>;</span>
          tmp<span>++</span><span>;</span>
        <span>}</span>
      <span>}</span>
    <span>}</span>
    <span>sort</span><span>(</span>arr1<span>.</span><span>begin</span><span>(</span><span>)</span> <span>+</span> tmp<span>,</span> arr1<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>
    <span>return</span> arr1<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br></div></div>]]></content>
    <author>
      <name>1122. Relative Sort Array</name>
    </author>
    <category term="sqm"/>
    <contributor>
      <name>1122. Relative Sort Array</name>
    </contributor>
    <rights>Copyright by 1122. Relative Sort Array</rights>
  </entry>
  <entry>
    <title type="html">C++</title>
    <id>https://leetcode.innenu.com/12-integer-to-roman/C++/</id>
    <link href="https://leetcode.innenu.com/12-integer-to-roman/C++/"/>
    <updated>2021-02-17T16:18:42.547Z</updated>
    <content type="html"><![CDATA[<h2 id="mister-hope"> Mister-Hope</h2>
<div><pre><code><span>/*
 * Runtime: 24 ms, faster than 22.26% of C++ online submissions for Integer to
 * Roman.
 *
 * Memory Usage: 12.6 MB, less than 11.00% of C++ online submissions for Integer
 * to Roman.
 */</span>

<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>
<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  string <span>intToRoman</span><span>(</span><span>int</span> num<span>)</span> <span>{</span>
    <span>if</span> <span>(</span>num <span>&lt;=</span> <span>0</span><span>)</span> <span>return</span> <span>""</span><span>;</span>

    vector<span>&lt;</span>string<span>></span> thousands<span>{</span><span>""</span><span>,</span> <span>"M"</span><span>,</span> <span>"MM"</span><span>,</span> <span>"MMM"</span><span>}</span><span>;</span>
    vector<span>&lt;</span>string<span>></span> hundreds<span>{</span><span>""</span><span>,</span>  <span>"C"</span><span>,</span>  <span>"CC"</span><span>,</span>  <span>"CCC"</span><span>,</span>  <span>"CD"</span><span>,</span>
                            <span>"D"</span><span>,</span> <span>"DC"</span><span>,</span> <span>"DCC"</span><span>,</span> <span>"DCCC"</span><span>,</span> <span>"CM"</span><span>}</span><span>;</span>
    vector<span>&lt;</span>string<span>></span> tens<span>{</span><span>""</span><span>,</span>  <span>"X"</span><span>,</span>  <span>"XX"</span><span>,</span>  <span>"XXX"</span><span>,</span>  <span>"XL"</span><span>,</span>
                        <span>"L"</span><span>,</span> <span>"LX"</span><span>,</span> <span>"LXX"</span><span>,</span> <span>"LXXX"</span><span>,</span> <span>"XC"</span><span>}</span><span>;</span>
    vector<span>&lt;</span>string<span>></span> units<span>{</span><span>""</span><span>,</span>  <span>"I"</span><span>,</span>  <span>"II"</span><span>,</span>  <span>"III"</span><span>,</span>  <span>"IV"</span><span>,</span>
                         <span>"V"</span><span>,</span> <span>"VI"</span><span>,</span> <span>"VII"</span><span>,</span> <span>"VIII"</span><span>,</span> <span>"IX"</span><span>}</span><span>;</span>

    <span>return</span> thousands<span>[</span>num <span>/</span> <span>1000</span><span>]</span> <span>+</span> hundreds<span>[</span><span>(</span>num <span>%</span> <span>1000</span><span>)</span> <span>/</span> <span>100</span><span>]</span> <span>+</span>
           tens<span>[</span><span>(</span>num <span>%</span> <span>100</span><span>)</span> <span>/</span> <span>10</span><span>]</span> <span>+</span> units<span>[</span>num <span>%</span> <span>10</span><span>]</span><span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br></div></div><h3 id="_1"> 1</h3>
<div><pre><code><span>/*
 * Runtime: 4 ms, faster than 93.51% of C++ online submissions for Integer to
 * Roman.
 *
 * Memory Usage: 9.2 MB, less than 11.00% of C++ online submissions for Integer
 * to Roman.
 */</span>

<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>
<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  string <span>intToRoman</span><span>(</span><span>int</span> num<span>)</span> <span>{</span>
    <span>if</span> <span>(</span>num <span>&lt;=</span> <span>0</span><span>)</span> <span>return</span> <span>""</span><span>;</span>

    vector<span>&lt;</span>string<span>></span> numerals<span>{</span>
        <span>"M"</span><span>,</span> <span>"CM"</span><span>,</span> <span>"D"</span><span>,</span> <span>"CD"</span><span>,</span> <span>"C"</span><span>,</span> <span>"XC"</span><span>,</span> <span>"L"</span><span>,</span> <span>"XL"</span><span>,</span> <span>"X"</span><span>,</span> <span>"IX"</span><span>,</span> <span>"V"</span><span>,</span> <span>"IV"</span><span>,</span> <span>"I"</span><span>,</span>
    <span>}</span><span>;</span>
    vector<span>&lt;</span><span>int</span><span>></span> weights<span>{</span><span>1000</span><span>,</span> <span>900</span><span>,</span> <span>500</span><span>,</span> <span>400</span><span>,</span> <span>100</span><span>,</span> <span>90</span><span>,</span> <span>50</span><span>,</span> <span>40</span><span>,</span> <span>10</span><span>,</span> <span>9</span><span>,</span> <span>5</span><span>,</span> <span>4</span><span>,</span> <span>1</span><span>}</span><span>;</span>

    string result <span>=</span> <span>""</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> weights<span>.</span><span>size</span><span>(</span><span>)</span> <span>&amp;&amp;</span> num <span>!=</span> <span>0</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>1</span><span>;</span> j <span>&lt;=</span> num <span>/</span> weights<span>[</span>i<span>]</span><span>;</span> j<span>++</span><span>)</span> result <span>+=</span> numerals<span>[</span>i<span>]</span><span>;</span>

      num <span>%=</span> weights<span>[</span>i<span>]</span><span>;</span>
    <span>}</span>

    <span>return</span> result<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br></div></div>]]></content>
    <author>
      <name>12. Integer to Roman</name>
    </author>
    <category term="C++"/>
    <contributor>
      <name>12. Integer to Roman</name>
    </contributor>
    <rights>Copyright by 12. Integer to Roman</rights>
  </entry>
  <entry>
    <title type="html">Mister-Hope</title>
    <id>https://leetcode.innenu.com/12-integer-to-roman/Mister-Hope/</id>
    <link href="https://leetcode.innenu.com/12-integer-to-roman/Mister-Hope/"/>
    <updated>2021-02-17T16:18:42.550Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span>/*
 * Runtime: 24 ms, faster than 22.26% of C++ online submissions for Integer to
 * Roman.
 *
 * Memory Usage: 12.6 MB, less than 11.00% of C++ online submissions for Integer
 * to Roman.
 */</span>

<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>
<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  string <span>intToRoman</span><span>(</span><span>int</span> num<span>)</span> <span>{</span>
    <span>if</span> <span>(</span>num <span>&lt;=</span> <span>0</span><span>)</span> <span>return</span> <span>""</span><span>;</span>

    vector<span>&lt;</span>string<span>></span> thousands<span>{</span><span>""</span><span>,</span> <span>"M"</span><span>,</span> <span>"MM"</span><span>,</span> <span>"MMM"</span><span>}</span><span>;</span>
    vector<span>&lt;</span>string<span>></span> hundreds<span>{</span><span>""</span><span>,</span>  <span>"C"</span><span>,</span>  <span>"CC"</span><span>,</span>  <span>"CCC"</span><span>,</span>  <span>"CD"</span><span>,</span>
                            <span>"D"</span><span>,</span> <span>"DC"</span><span>,</span> <span>"DCC"</span><span>,</span> <span>"DCCC"</span><span>,</span> <span>"CM"</span><span>}</span><span>;</span>
    vector<span>&lt;</span>string<span>></span> tens<span>{</span><span>""</span><span>,</span>  <span>"X"</span><span>,</span>  <span>"XX"</span><span>,</span>  <span>"XXX"</span><span>,</span>  <span>"XL"</span><span>,</span>
                        <span>"L"</span><span>,</span> <span>"LX"</span><span>,</span> <span>"LXX"</span><span>,</span> <span>"LXXX"</span><span>,</span> <span>"XC"</span><span>}</span><span>;</span>
    vector<span>&lt;</span>string<span>></span> units<span>{</span><span>""</span><span>,</span>  <span>"I"</span><span>,</span>  <span>"II"</span><span>,</span>  <span>"III"</span><span>,</span>  <span>"IV"</span><span>,</span>
                         <span>"V"</span><span>,</span> <span>"VI"</span><span>,</span> <span>"VII"</span><span>,</span> <span>"VIII"</span><span>,</span> <span>"IX"</span><span>}</span><span>;</span>

    <span>return</span> thousands<span>[</span>num <span>/</span> <span>1000</span><span>]</span> <span>+</span> hundreds<span>[</span><span>(</span>num <span>%</span> <span>1000</span><span>)</span> <span>/</span> <span>100</span><span>]</span> <span>+</span>
           tens<span>[</span><span>(</span>num <span>%</span> <span>100</span><span>)</span> <span>/</span> <span>10</span><span>]</span> <span>+</span> units<span>[</span>num <span>%</span> <span>10</span><span>]</span><span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br></div></div><h3 id="_1"> 1</h3>
<div><pre><code><span>/*
 * Runtime: 4 ms, faster than 93.51% of C++ online submissions for Integer to
 * Roman.
 *
 * Memory Usage: 9.2 MB, less than 11.00% of C++ online submissions for Integer
 * to Roman.
 */</span>

<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>
<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  string <span>intToRoman</span><span>(</span><span>int</span> num<span>)</span> <span>{</span>
    <span>if</span> <span>(</span>num <span>&lt;=</span> <span>0</span><span>)</span> <span>return</span> <span>""</span><span>;</span>

    vector<span>&lt;</span>string<span>></span> numerals<span>{</span>
        <span>"M"</span><span>,</span> <span>"CM"</span><span>,</span> <span>"D"</span><span>,</span> <span>"CD"</span><span>,</span> <span>"C"</span><span>,</span> <span>"XC"</span><span>,</span> <span>"L"</span><span>,</span> <span>"XL"</span><span>,</span> <span>"X"</span><span>,</span> <span>"IX"</span><span>,</span> <span>"V"</span><span>,</span> <span>"IV"</span><span>,</span> <span>"I"</span><span>,</span>
    <span>}</span><span>;</span>
    vector<span>&lt;</span><span>int</span><span>></span> weights<span>{</span><span>1000</span><span>,</span> <span>900</span><span>,</span> <span>500</span><span>,</span> <span>400</span><span>,</span> <span>100</span><span>,</span> <span>90</span><span>,</span> <span>50</span><span>,</span> <span>40</span><span>,</span> <span>10</span><span>,</span> <span>9</span><span>,</span> <span>5</span><span>,</span> <span>4</span><span>,</span> <span>1</span><span>}</span><span>;</span>

    string result <span>=</span> <span>""</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> weights<span>.</span><span>size</span><span>(</span><span>)</span> <span>&amp;&amp;</span> num <span>!=</span> <span>0</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>1</span><span>;</span> j <span>&lt;=</span> num <span>/</span> weights<span>[</span>i<span>]</span><span>;</span> j<span>++</span><span>)</span> result <span>+=</span> numerals<span>[</span>i<span>]</span><span>;</span>

      num <span>%=</span> weights<span>[</span>i<span>]</span><span>;</span>
    <span>}</span>

    <span>return</span> result<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br></div></div><h2 id="javascript"> JavaScript</h2>
<div><pre><code><span>/*
 * Runtime: 176 ms, faster than 33.68% of JavaScript online submissions for Integer to Roman.
 *
 * Memory Usage: 45.2 MB, less than 6.38% of JavaScript online submissions for Integer to Roman.
 */</span>

<span>const</span> <span>intToRoman</span> <span>=</span> <span>(</span><span>num</span><span>)</span> <span>=></span> <span>{</span>
  <span>const</span> numerals <span>=</span> <span>[</span>
    <span>"M"</span><span>,</span>
    <span>"CM"</span><span>,</span>
    <span>"D"</span><span>,</span>
    <span>"CD"</span><span>,</span>
    <span>"C"</span><span>,</span>
    <span>"XC"</span><span>,</span>
    <span>"L"</span><span>,</span>
    <span>"XL"</span><span>,</span>
    <span>"X"</span><span>,</span>
    <span>"IX"</span><span>,</span>
    <span>"V"</span><span>,</span>
    <span>"IV"</span><span>,</span>
    <span>"I"</span><span>,</span>
  <span>]</span><span>;</span>
  <span>const</span> weights <span>=</span> <span>[</span><span>1000</span><span>,</span> <span>900</span><span>,</span> <span>500</span><span>,</span> <span>400</span><span>,</span> <span>100</span><span>,</span> <span>90</span><span>,</span> <span>50</span><span>,</span> <span>40</span><span>,</span> <span>10</span><span>,</span> <span>9</span><span>,</span> <span>5</span><span>,</span> <span>4</span><span>,</span> <span>1</span><span>]</span><span>;</span>

  <span>let</span> result <span>=</span> <span>""</span><span>;</span>

  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> weights<span>.</span>length <span>&amp;&amp;</span> num <span>!==</span> <span>0</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
    <span>for</span> <span>(</span><span>let</span> j <span>=</span> <span>1</span><span>;</span> j <span>&lt;=</span> num <span>/</span> weights<span>[</span>i<span>]</span><span>;</span> j<span>++</span><span>)</span> result <span>+=</span> numerals<span>[</span>i<span>]</span><span>;</span>

    num <span>%=</span> weights<span>[</span>i<span>]</span><span>;</span>
  <span>}</span>

  <span>return</span> result<span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br></div></div><h3 id="_1-2"> 1</h3>
<div><pre><code><span>/*
 * Runtime: 168 ms, faster than 53.26% of JavaScript online submissions for Integer to Roman.
 *
 * Memory Usage: 45.5 MB, less than 6.38% of JavaScript online submissions for Integer to Roman.
 */</span>

<span>const</span> <span>intToRoman</span> <span>=</span> <span>(</span><span>num</span><span>)</span> <span>=></span> <span>{</span>
  <span>const</span> thousands <span>=</span> <span>[</span><span>""</span><span>,</span> <span>"M"</span><span>,</span> <span>"MM"</span><span>,</span> <span>"MMM"</span><span>]</span><span>;</span>
  <span>const</span> hundreds <span>=</span> <span>[</span><span>""</span><span>,</span> <span>"C"</span><span>,</span> <span>"CC"</span><span>,</span> <span>"CCC"</span><span>,</span> <span>"CD"</span><span>,</span> <span>"D"</span><span>,</span> <span>"DC"</span><span>,</span> <span>"DCC"</span><span>,</span> <span>"DCCC"</span><span>,</span> <span>"CM"</span><span>]</span><span>;</span>
  <span>const</span> tens <span>=</span> <span>[</span><span>""</span><span>,</span> <span>"X"</span><span>,</span> <span>"XX"</span><span>,</span> <span>"XXX"</span><span>,</span> <span>"XL"</span><span>,</span> <span>"L"</span><span>,</span> <span>"LX"</span><span>,</span> <span>"LXX"</span><span>,</span> <span>"LXXX"</span><span>,</span> <span>"XC"</span><span>]</span><span>;</span>
  <span>const</span> units <span>=</span> <span>[</span><span>""</span><span>,</span> <span>"I"</span><span>,</span> <span>"II"</span><span>,</span> <span>"III"</span><span>,</span> <span>"IV"</span><span>,</span> <span>"V"</span><span>,</span> <span>"VI"</span><span>,</span> <span>"VII"</span><span>,</span> <span>"VIII"</span><span>,</span> <span>"IX"</span><span>]</span><span>;</span>

  <span>const</span> val1 <span>=</span> num <span>%</span> <span>1000</span><span>;</span>
  <span>const</span> val2 <span>=</span> val1 <span>%</span> <span>100</span><span>;</span>
  <span>const</span> val3 <span>=</span> val2 <span>%</span> <span>10</span><span>;</span>
  <span>return</span> <span>(</span>
    thousands<span>[</span><span>(</span>num <span>-</span> val1<span>)</span> <span>/</span> <span>1000</span><span>]</span> <span>+</span>
    hundreds<span>[</span><span>(</span>val1 <span>-</span> val2<span>)</span> <span>/</span> <span>100</span><span>]</span> <span>+</span>
    tens<span>[</span><span>(</span>val2 <span>-</span> val3<span>)</span> <span>/</span> <span>10</span><span>]</span> <span>+</span>
    units<span>[</span>val3 <span>%</span> <span>10</span><span>]</span>
  <span>)</span><span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br></div></div><h2 id="typescript"> TypeScript</h2>
<div><pre><code><span>/*
 * Runtime: 160 ms, faster than 77.17% of TypeScript online submissions for Integer to Roman.
 *
 * Memory Usage: 46.6 MB, less than 19.57% of TypeScript online submissions for Integer to Roman.
 */</span>

<span>const</span> intToRoman <span>=</span> <span>(</span>num<span>:</span> <span>number</span><span>)</span><span>:</span> <span>string</span> <span>=></span> <span>{</span>
  <span>const</span> numerals <span>=</span> <span>[</span>
    <span>"M"</span><span>,</span>
    <span>"CM"</span><span>,</span>
    <span>"D"</span><span>,</span>
    <span>"CD"</span><span>,</span>
    <span>"C"</span><span>,</span>
    <span>"XC"</span><span>,</span>
    <span>"L"</span><span>,</span>
    <span>"XL"</span><span>,</span>
    <span>"X"</span><span>,</span>
    <span>"IX"</span><span>,</span>
    <span>"V"</span><span>,</span>
    <span>"IV"</span><span>,</span>
    <span>"I"</span><span>,</span>
  <span>]</span><span>;</span>
  <span>const</span> weights <span>=</span> <span>[</span><span>1000</span><span>,</span> <span>900</span><span>,</span> <span>500</span><span>,</span> <span>400</span><span>,</span> <span>100</span><span>,</span> <span>90</span><span>,</span> <span>50</span><span>,</span> <span>40</span><span>,</span> <span>10</span><span>,</span> <span>9</span><span>,</span> <span>5</span><span>,</span> <span>4</span><span>,</span> <span>1</span><span>]</span><span>;</span>

  <span>let</span> result <span>=</span> <span>""</span><span>;</span>

  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> weights<span>.</span>length <span>&amp;&amp;</span> num <span>!==</span> <span>0</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
    <span>for</span> <span>(</span><span>let</span> j <span>=</span> <span>1</span><span>;</span> j <span>&lt;=</span> num <span>/</span> weights<span>[</span>i<span>]</span><span>;</span> j<span>++</span><span>)</span> result <span>+=</span> numerals<span>[</span>i<span>]</span><span>;</span>

    num <span>%=</span> weights<span>[</span>i<span>]</span><span>;</span>
  <span>}</span>

  <span>return</span> result<span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br></div></div><h3 id="_1-3"> 1</h3>
<div><pre><code><span>/*
 * Runtime: 172 ms, faster than 43.48% of TypeScript online submissions for Integer to Roman.
 *
 * Memory Usage: 46.1 MB, less than 19.57% of TypeScript online submissions for Integer to Roman.
 */</span>

<span>const</span> intToRoman <span>=</span> <span>(</span>num<span>:</span> <span>number</span><span>)</span><span>:</span> <span>string</span> <span>=></span> <span>{</span>
  <span>const</span> thousands <span>=</span> <span>[</span><span>""</span><span>,</span> <span>"M"</span><span>,</span> <span>"MM"</span><span>,</span> <span>"MMM"</span><span>]</span><span>;</span>
  <span>const</span> hundreds <span>=</span> <span>[</span><span>""</span><span>,</span> <span>"C"</span><span>,</span> <span>"CC"</span><span>,</span> <span>"CCC"</span><span>,</span> <span>"CD"</span><span>,</span> <span>"D"</span><span>,</span> <span>"DC"</span><span>,</span> <span>"DCC"</span><span>,</span> <span>"DCCC"</span><span>,</span> <span>"CM"</span><span>]</span><span>;</span>
  <span>const</span> tens <span>=</span> <span>[</span><span>""</span><span>,</span> <span>"X"</span><span>,</span> <span>"XX"</span><span>,</span> <span>"XXX"</span><span>,</span> <span>"XL"</span><span>,</span> <span>"L"</span><span>,</span> <span>"LX"</span><span>,</span> <span>"LXX"</span><span>,</span> <span>"LXXX"</span><span>,</span> <span>"XC"</span><span>]</span><span>;</span>
  <span>const</span> units <span>=</span> <span>[</span><span>""</span><span>,</span> <span>"I"</span><span>,</span> <span>"II"</span><span>,</span> <span>"III"</span><span>,</span> <span>"IV"</span><span>,</span> <span>"V"</span><span>,</span> <span>"VI"</span><span>,</span> <span>"VII"</span><span>,</span> <span>"VIII"</span><span>,</span> <span>"IX"</span><span>]</span><span>;</span>

  <span>const</span> val1 <span>=</span> num <span>%</span> <span>1000</span><span>;</span>
  <span>const</span> val2 <span>=</span> val1 <span>%</span> <span>100</span><span>;</span>
  <span>const</span> val3 <span>=</span> val2 <span>%</span> <span>10</span><span>;</span>
  <span>return</span> <span>(</span>
    thousands<span>[</span><span>(</span>num <span>-</span> val1<span>)</span> <span>/</span> <span>1000</span><span>]</span> <span>+</span>
    hundreds<span>[</span><span>(</span>val1 <span>-</span> val2<span>)</span> <span>/</span> <span>100</span><span>]</span> <span>+</span>
    tens<span>[</span><span>(</span>val2 <span>-</span> val3<span>)</span> <span>/</span> <span>10</span><span>]</span> <span>+</span>
    units<span>[</span>val3 <span>%</span> <span>10</span><span>]</span>
  <span>)</span><span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br></div></div>]]></content>
    <author>
      <name>12. Integer to Roman</name>
    </author>
    <category term="Mister-Hope"/>
    <contributor>
      <name>12. Integer to Roman</name>
    </contributor>
    <rights>Copyright by 12. Integer to Roman</rights>
  </entry>
  <entry>
    <title type="html">JavaScript</title>
    <id>https://leetcode.innenu.com/12-integer-to-roman/JavaScript/</id>
    <link href="https://leetcode.innenu.com/12-integer-to-roman/JavaScript/"/>
    <updated>2021-02-17T16:18:42.551Z</updated>
    <content type="html"><![CDATA[<h2 id="mister-hope"> Mister-Hope</h2>
<div><pre><code><span>/*
 * Runtime: 176 ms, faster than 33.68% of JavaScript online submissions for Integer to Roman.
 *
 * Memory Usage: 45.2 MB, less than 6.38% of JavaScript online submissions for Integer to Roman.
 */</span>

<span>const</span> <span>intToRoman</span> <span>=</span> <span>(</span><span>num</span><span>)</span> <span>=></span> <span>{</span>
  <span>const</span> numerals <span>=</span> <span>[</span>
    <span>"M"</span><span>,</span>
    <span>"CM"</span><span>,</span>
    <span>"D"</span><span>,</span>
    <span>"CD"</span><span>,</span>
    <span>"C"</span><span>,</span>
    <span>"XC"</span><span>,</span>
    <span>"L"</span><span>,</span>
    <span>"XL"</span><span>,</span>
    <span>"X"</span><span>,</span>
    <span>"IX"</span><span>,</span>
    <span>"V"</span><span>,</span>
    <span>"IV"</span><span>,</span>
    <span>"I"</span><span>,</span>
  <span>]</span><span>;</span>
  <span>const</span> weights <span>=</span> <span>[</span><span>1000</span><span>,</span> <span>900</span><span>,</span> <span>500</span><span>,</span> <span>400</span><span>,</span> <span>100</span><span>,</span> <span>90</span><span>,</span> <span>50</span><span>,</span> <span>40</span><span>,</span> <span>10</span><span>,</span> <span>9</span><span>,</span> <span>5</span><span>,</span> <span>4</span><span>,</span> <span>1</span><span>]</span><span>;</span>

  <span>let</span> result <span>=</span> <span>""</span><span>;</span>

  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> weights<span>.</span>length <span>&amp;&amp;</span> num <span>!==</span> <span>0</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
    <span>for</span> <span>(</span><span>let</span> j <span>=</span> <span>1</span><span>;</span> j <span>&lt;=</span> num <span>/</span> weights<span>[</span>i<span>]</span><span>;</span> j<span>++</span><span>)</span> result <span>+=</span> numerals<span>[</span>i<span>]</span><span>;</span>

    num <span>%=</span> weights<span>[</span>i<span>]</span><span>;</span>
  <span>}</span>

  <span>return</span> result<span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br></div></div><h3 id="_1"> 1</h3>
<div><pre><code><span>/*
 * Runtime: 168 ms, faster than 53.26% of JavaScript online submissions for Integer to Roman.
 *
 * Memory Usage: 45.5 MB, less than 6.38% of JavaScript online submissions for Integer to Roman.
 */</span>

<span>const</span> <span>intToRoman</span> <span>=</span> <span>(</span><span>num</span><span>)</span> <span>=></span> <span>{</span>
  <span>const</span> thousands <span>=</span> <span>[</span><span>""</span><span>,</span> <span>"M"</span><span>,</span> <span>"MM"</span><span>,</span> <span>"MMM"</span><span>]</span><span>;</span>
  <span>const</span> hundreds <span>=</span> <span>[</span><span>""</span><span>,</span> <span>"C"</span><span>,</span> <span>"CC"</span><span>,</span> <span>"CCC"</span><span>,</span> <span>"CD"</span><span>,</span> <span>"D"</span><span>,</span> <span>"DC"</span><span>,</span> <span>"DCC"</span><span>,</span> <span>"DCCC"</span><span>,</span> <span>"CM"</span><span>]</span><span>;</span>
  <span>const</span> tens <span>=</span> <span>[</span><span>""</span><span>,</span> <span>"X"</span><span>,</span> <span>"XX"</span><span>,</span> <span>"XXX"</span><span>,</span> <span>"XL"</span><span>,</span> <span>"L"</span><span>,</span> <span>"LX"</span><span>,</span> <span>"LXX"</span><span>,</span> <span>"LXXX"</span><span>,</span> <span>"XC"</span><span>]</span><span>;</span>
  <span>const</span> units <span>=</span> <span>[</span><span>""</span><span>,</span> <span>"I"</span><span>,</span> <span>"II"</span><span>,</span> <span>"III"</span><span>,</span> <span>"IV"</span><span>,</span> <span>"V"</span><span>,</span> <span>"VI"</span><span>,</span> <span>"VII"</span><span>,</span> <span>"VIII"</span><span>,</span> <span>"IX"</span><span>]</span><span>;</span>

  <span>const</span> val1 <span>=</span> num <span>%</span> <span>1000</span><span>;</span>
  <span>const</span> val2 <span>=</span> val1 <span>%</span> <span>100</span><span>;</span>
  <span>const</span> val3 <span>=</span> val2 <span>%</span> <span>10</span><span>;</span>
  <span>return</span> <span>(</span>
    thousands<span>[</span><span>(</span>num <span>-</span> val1<span>)</span> <span>/</span> <span>1000</span><span>]</span> <span>+</span>
    hundreds<span>[</span><span>(</span>val1 <span>-</span> val2<span>)</span> <span>/</span> <span>100</span><span>]</span> <span>+</span>
    tens<span>[</span><span>(</span>val2 <span>-</span> val3<span>)</span> <span>/</span> <span>10</span><span>]</span> <span>+</span>
    units<span>[</span>val3 <span>%</span> <span>10</span><span>]</span>
  <span>)</span><span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br></div></div>]]></content>
    <author>
      <name>12. Integer to Roman</name>
    </author>
    <category term="JavaScript"/>
    <contributor>
      <name>12. Integer to Roman</name>
    </contributor>
    <rights>Copyright by 12. Integer to Roman</rights>
  </entry>
  <entry>
    <title type="html">TypeScript</title>
    <id>https://leetcode.innenu.com/12-integer-to-roman/TypeScript/</id>
    <link href="https://leetcode.innenu.com/12-integer-to-roman/TypeScript/"/>
    <updated>2021-02-17T16:18:42.551Z</updated>
    <content type="html"><![CDATA[<h2 id="mister-hope"> Mister-Hope</h2>
<div><pre><code><span>/*
 * Runtime: 160 ms, faster than 77.17% of TypeScript online submissions for Integer to Roman.
 *
 * Memory Usage: 46.6 MB, less than 19.57% of TypeScript online submissions for Integer to Roman.
 */</span>

<span>const</span> intToRoman <span>=</span> <span>(</span>num<span>:</span> <span>number</span><span>)</span><span>:</span> <span>string</span> <span>=></span> <span>{</span>
  <span>const</span> numerals <span>=</span> <span>[</span>
    <span>"M"</span><span>,</span>
    <span>"CM"</span><span>,</span>
    <span>"D"</span><span>,</span>
    <span>"CD"</span><span>,</span>
    <span>"C"</span><span>,</span>
    <span>"XC"</span><span>,</span>
    <span>"L"</span><span>,</span>
    <span>"XL"</span><span>,</span>
    <span>"X"</span><span>,</span>
    <span>"IX"</span><span>,</span>
    <span>"V"</span><span>,</span>
    <span>"IV"</span><span>,</span>
    <span>"I"</span><span>,</span>
  <span>]</span><span>;</span>
  <span>const</span> weights <span>=</span> <span>[</span><span>1000</span><span>,</span> <span>900</span><span>,</span> <span>500</span><span>,</span> <span>400</span><span>,</span> <span>100</span><span>,</span> <span>90</span><span>,</span> <span>50</span><span>,</span> <span>40</span><span>,</span> <span>10</span><span>,</span> <span>9</span><span>,</span> <span>5</span><span>,</span> <span>4</span><span>,</span> <span>1</span><span>]</span><span>;</span>

  <span>let</span> result <span>=</span> <span>""</span><span>;</span>

  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> weights<span>.</span>length <span>&amp;&amp;</span> num <span>!==</span> <span>0</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
    <span>for</span> <span>(</span><span>let</span> j <span>=</span> <span>1</span><span>;</span> j <span>&lt;=</span> num <span>/</span> weights<span>[</span>i<span>]</span><span>;</span> j<span>++</span><span>)</span> result <span>+=</span> numerals<span>[</span>i<span>]</span><span>;</span>

    num <span>%=</span> weights<span>[</span>i<span>]</span><span>;</span>
  <span>}</span>

  <span>return</span> result<span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br></div></div><h3 id="_1"> 1</h3>
<div><pre><code><span>/*
 * Runtime: 172 ms, faster than 43.48% of TypeScript online submissions for Integer to Roman.
 *
 * Memory Usage: 46.1 MB, less than 19.57% of TypeScript online submissions for Integer to Roman.
 */</span>

<span>const</span> intToRoman <span>=</span> <span>(</span>num<span>:</span> <span>number</span><span>)</span><span>:</span> <span>string</span> <span>=></span> <span>{</span>
  <span>const</span> thousands <span>=</span> <span>[</span><span>""</span><span>,</span> <span>"M"</span><span>,</span> <span>"MM"</span><span>,</span> <span>"MMM"</span><span>]</span><span>;</span>
  <span>const</span> hundreds <span>=</span> <span>[</span><span>""</span><span>,</span> <span>"C"</span><span>,</span> <span>"CC"</span><span>,</span> <span>"CCC"</span><span>,</span> <span>"CD"</span><span>,</span> <span>"D"</span><span>,</span> <span>"DC"</span><span>,</span> <span>"DCC"</span><span>,</span> <span>"DCCC"</span><span>,</span> <span>"CM"</span><span>]</span><span>;</span>
  <span>const</span> tens <span>=</span> <span>[</span><span>""</span><span>,</span> <span>"X"</span><span>,</span> <span>"XX"</span><span>,</span> <span>"XXX"</span><span>,</span> <span>"XL"</span><span>,</span> <span>"L"</span><span>,</span> <span>"LX"</span><span>,</span> <span>"LXX"</span><span>,</span> <span>"LXXX"</span><span>,</span> <span>"XC"</span><span>]</span><span>;</span>
  <span>const</span> units <span>=</span> <span>[</span><span>""</span><span>,</span> <span>"I"</span><span>,</span> <span>"II"</span><span>,</span> <span>"III"</span><span>,</span> <span>"IV"</span><span>,</span> <span>"V"</span><span>,</span> <span>"VI"</span><span>,</span> <span>"VII"</span><span>,</span> <span>"VIII"</span><span>,</span> <span>"IX"</span><span>]</span><span>;</span>

  <span>const</span> val1 <span>=</span> num <span>%</span> <span>1000</span><span>;</span>
  <span>const</span> val2 <span>=</span> val1 <span>%</span> <span>100</span><span>;</span>
  <span>const</span> val3 <span>=</span> val2 <span>%</span> <span>10</span><span>;</span>
  <span>return</span> <span>(</span>
    thousands<span>[</span><span>(</span>num <span>-</span> val1<span>)</span> <span>/</span> <span>1000</span><span>]</span> <span>+</span>
    hundreds<span>[</span><span>(</span>val1 <span>-</span> val2<span>)</span> <span>/</span> <span>100</span><span>]</span> <span>+</span>
    tens<span>[</span><span>(</span>val2 <span>-</span> val3<span>)</span> <span>/</span> <span>10</span><span>]</span> <span>+</span>
    units<span>[</span>val3 <span>%</span> <span>10</span><span>]</span>
  <span>)</span><span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br></div></div>]]></content>
    <author>
      <name>12. Integer to Roman</name>
    </author>
    <category term="TypeScript"/>
    <contributor>
      <name>12. Integer to Roman</name>
    </contributor>
    <rights>Copyright by 12. Integer to Roman</rights>
  </entry>
  <entry>
    <title type="html">12. Integer to Roman</title>
    <id>https://leetcode.innenu.com/12-integer-to-roman/</id>
    <link href="https://leetcode.innenu.com/12-integer-to-roman/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_12-integer-to-roman"> <a href="https://leetcode.com/problems/integer-to-roman/" target="_blank" rel="noopener noreferrer">12. Integer to Roman</a></h1>
<p>Roman numerals are represented by seven different symbols: <code>I</code>, <code>V</code>, <code>X</code>, <code>L</code>, <code>C</code>, <code>D</code> and <code>M</code>.</p>
<table>
<thead>
<tr>
<th>Symbol</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr>
<td>I</td>
<td>1</td>
</tr>
<tr>
<td>V</td>
<td>5</td>
</tr>
<tr>
<td>X</td>
<td>10</td>
</tr>
<tr>
<td>L</td>
<td>50</td>
</tr>
<tr>
<td>C</td>
<td>100</td>
</tr>
<tr>
<td>D</td>
<td>500</td>
</tr>
<tr>
<td>M</td>
<td>1000</td>
</tr>
</tbody>
</table>
<p>For example, <code>2</code> is written as <code>II</code> in Roman numeral, just two one's added together. <code>12</code> is written as <code>XII</code>, which is simply <code>X + II</code>. The number <code>27</code> is written as <code>XXVII</code>, which is <code>XX + V + II</code>.</p>
<p>Roman numerals are usually written largest to smallest from left to right. However, the numeral for four is not <code>IIII</code>. Instead, the number four is written as <code>IV</code>. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as <code>IX</code>. There are six instances where subtraction is used:</p>
<ul>
<li><code>I</code> can be placed before <code>V</code> (5) and <code>X</code> (10) to make 4 and 9.</li>
<li><code>X</code> can be placed before <code>L</code> (50) and <code>C</code> (100) to make 40 and 90.</li>
<li><code>C</code> can be placed before <code>D</code> (500) and <code>M</code> (1000) to make 400 and 900.</li>
</ul>
<p>Given an integer, convert it to a roman numeral.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> num = 3</p>
<p><strong>Output:</strong> &quot;III&quot;</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> num = 4</p>
<p><strong>Output:</strong> &quot;IV&quot;</p>
<p><strong>Example 3:</strong></p>
<p><strong>Input:</strong> num = 9</p>
<p><strong>Output:</strong> &quot;IX&quot;</p>
<p><strong>Example 4:</strong></p>
<p><strong>Input:</strong> num = 58</p>
<p><strong>Output:</strong> &quot;LVIII&quot;</p>
<p><strong>Explanation:</strong> L = 50, V = 5, III = 3.</p>
<p><strong>Example 5:</strong></p>
<p><strong>Input:</strong> num = 1994</p>
<p><strong>Output:</strong> &quot;MCMXCIV&quot;</p>
<p><strong>Explanation:</strong> M = 1000, CM = 900, XC = 90 and IV = 4.</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>1 &lt;= num &lt;= 3999</code></li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">C++</title>
    <id>https://leetcode.innenu.com/122-best-time-to-buy-and-sell-stock-ii/C++/</id>
    <link href="https://leetcode.innenu.com/122-best-time-to-buy-and-sell-stock-ii/C++/"/>
    <updated>2021-02-17T16:18:42.554Z</updated>
    <content type="html"><![CDATA[<h2 id="lmy"> lmy</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>int</span> <span>maxProfit</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> prices<span>)</span> <span>{</span>
    <span>int</span> sum <span>=</span> <span>0</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>1</span><span>;</span> i <span>&lt;</span> prices<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      sum <span>+=</span> <span>max</span><span>(</span>prices<span>[</span>i<span>]</span> <span>-</span> prices<span>[</span>i <span>-</span> <span>1</span><span>]</span><span>,</span> <span>0</span><span>)</span><span>;</span>
    <span>}</span>
    <span>return</span> sum<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div>]]></content>
    <author>
      <name>122. Best Time to Buy And Sell Stock Ii</name>
    </author>
    <category term="C++"/>
    <contributor>
      <name>122. Best Time to Buy And Sell Stock Ii</name>
    </contributor>
    <rights>Copyright by 122. Best Time to Buy And Sell Stock Ii</rights>
  </entry>
  <entry>
    <title type="html">lmy</title>
    <id>https://leetcode.innenu.com/122-best-time-to-buy-and-sell-stock-ii/lmy/</id>
    <link href="https://leetcode.innenu.com/122-best-time-to-buy-and-sell-stock-ii/lmy/"/>
    <updated>2021-02-17T16:18:42.555Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>int</span> <span>maxProfit</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> prices<span>)</span> <span>{</span>
    <span>int</span> sum <span>=</span> <span>0</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>1</span><span>;</span> i <span>&lt;</span> prices<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      sum <span>+=</span> <span>max</span><span>(</span>prices<span>[</span>i<span>]</span> <span>-</span> prices<span>[</span>i <span>-</span> <span>1</span><span>]</span><span>,</span> <span>0</span><span>)</span><span>;</span>
    <span>}</span>
    <span>return</span> sum<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div>]]></content>
    <author>
      <name>122. Best Time to Buy And Sell Stock Ii</name>
    </author>
    <category term="lmy"/>
    <contributor>
      <name>122. Best Time to Buy And Sell Stock Ii</name>
    </contributor>
    <rights>Copyright by 122. Best Time to Buy And Sell Stock Ii</rights>
  </entry>
  <entry>
    <title type="html">122. Best Time to Buy and Sell Stock II</title>
    <id>https://leetcode.innenu.com/122-best-time-to-buy-and-sell-stock-ii/</id>
    <link href="https://leetcode.innenu.com/122-best-time-to-buy-and-sell-stock-ii/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_122-best-time-to-buy-and-sell-stock-ii"> <a href="https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/" target="_blank" rel="noopener noreferrer">122. Best Time to Buy and Sell Stock II</a></h1>
<p>Say you have an array <code>prices</code> for which the <em>i</em>th element is the price of a given stock on day <em>i</em>.</p>
<p>Design an algorithm to find the maximum profit. You may complete as many transactions as you like (i.e., buy one and sell one share of the stock multiple times).</p>
<p><strong>Note:</strong> You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> [7,1,5,3,6,4]</p>
<p><strong>Output:</strong> 7</p>
<p><strong>Explanation:</strong></p>
<p>Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4.</p>
<p>Then buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3.</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> [1,2,3,4,5]</p>
<p><strong>Output:</strong> 4</p>
<p><strong>Explanation:</strong></p>
<p>Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.</p>
<p>Note that you cannot buy on day 1, buy on day 2 and sell them later, as you are engaging multiple transactions at the same time. You must sell before buying again.</p>
<p><strong>Example 3:</strong></p>
<p><strong>Input:</strong> [7,6,4,3,1]</p>
<p><strong>Output:</strong> 0</p>
<p><strong>Explanation:</strong> In this case, no transaction is done, i.e. max profit = 0.</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>1 &lt;= prices.length &lt;= 3 * 10 ^ 4</code></li>
<li><code>0 &lt;= prices[i] &lt;= 10 ^ 4</code></li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">Java</title>
    <id>https://leetcode.innenu.com/1221-Split-a-String-in-Balanced-Strings/Java/</id>
    <link href="https://leetcode.innenu.com/1221-Split-a-String-in-Balanced-Strings/Java/"/>
    <updated>2021-02-17T16:18:42.556Z</updated>
    <content type="html"><![CDATA[<h2 id="lizncu"> lizncu</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span> <span>balancedStringSplit</span><span>(</span><span>String</span> s<span>)</span> <span>{</span>
    <span>int</span> flag <span>=</span> <span>0</span><span>;</span>
    <span>int</span> ans <span>=</span> <span>0</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> s<span>.</span><span>length</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>s<span>.</span><span>charAt</span><span>(</span>i<span>)</span> <span>==</span> <span>'L'</span><span>)</span> <span>{</span>
        flag<span>++</span><span>;</span>
      <span>}</span> <span>else</span> <span>{</span>
        flag<span>--</span><span>;</span>
      <span>}</span>

      <span>if</span> <span>(</span>flag <span>==</span> <span>0</span><span>)</span> <span>{</span>
        ans<span>++</span><span>;</span>
      <span>}</span>
    <span>}</span>

    <span>return</span> ans<span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br></div></div>]]></content>
    <author>
      <name>1221. Split a String in Balanced Strings</name>
    </author>
    <category term="Java"/>
    <contributor>
      <name>1221. Split a String in Balanced Strings</name>
    </contributor>
    <rights>Copyright by 1221. Split a String in Balanced Strings</rights>
  </entry>
  <entry>
    <title type="html">lizncu</title>
    <id>https://leetcode.innenu.com/1221-Split-a-String-in-Balanced-Strings/lizncu/</id>
    <link href="https://leetcode.innenu.com/1221-Split-a-String-in-Balanced-Strings/lizncu/"/>
    <updated>2021-02-17T16:18:42.556Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span> <span>balancedStringSplit</span><span>(</span><span>String</span> s<span>)</span> <span>{</span>
    <span>int</span> flag <span>=</span> <span>0</span><span>;</span>
    <span>int</span> ans <span>=</span> <span>0</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> s<span>.</span><span>length</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>s<span>.</span><span>charAt</span><span>(</span>i<span>)</span> <span>==</span> <span>'L'</span><span>)</span> <span>{</span>
        flag<span>++</span><span>;</span>
      <span>}</span> <span>else</span> <span>{</span>
        flag<span>--</span><span>;</span>
      <span>}</span>

      <span>if</span> <span>(</span>flag <span>==</span> <span>0</span><span>)</span> <span>{</span>
        ans<span>++</span><span>;</span>
      <span>}</span>
    <span>}</span>

    <span>return</span> ans<span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br></div></div>]]></content>
    <author>
      <name>1221. Split a String in Balanced Strings</name>
    </author>
    <category term="lizncu"/>
    <contributor>
      <name>1221. Split a String in Balanced Strings</name>
    </contributor>
    <rights>Copyright by 1221. Split a String in Balanced Strings</rights>
  </entry>
  <entry>
    <title type="html">1221. Split a String in Balanced Strings</title>
    <id>https://leetcode.innenu.com/1221-Split-a-String-in-Balanced-Strings/</id>
    <link href="https://leetcode.innenu.com/1221-Split-a-String-in-Balanced-Strings/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_1221-split-a-string-in-balanced-strings"> <a href="https://leetcode.com/problems/split-a-string-in-balanced-strings/" target="_blank" rel="noopener noreferrer">1221. Split a String in Balanced Strings</a></h1>
<p><em>Balanced</em> strings are those who have equal quantity of 'L' and 'R' characters.</p>
<p>Given a balanced string <code>s</code> split it in the maximum amount of balanced strings.</p>
<p>Return the maximum amount of splitted balanced strings.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> s = &quot;RLRRLLRLRL&quot;</p>
<p><strong>Output:</strong> 4</p>
<p><strong>Explanation:</strong> s can be split into &quot;RL&quot;, &quot;RRLL&quot;, &quot;RL&quot;, &quot;RL&quot;, each substring contains same number of 'L' and 'R'.</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> s = &quot;RLLLLRRRLR&quot;</p>
<p><strong>Output:</strong> 3</p>
<p><strong>Explanation:</strong> s can be split into &quot;RL&quot;, &quot;LLLRRR&quot;, &quot;LR&quot;, each substring contains same number of 'L' and 'R'.</p>
<p><strong>Example 3:</strong></p>
<p><strong>Input:</strong> s = &quot;LLLLRRRR&quot;</p>
<p><strong>Output:</strong> 1</p>
<p><strong>Explanation:</strong> s can be split into &quot;LLLLRRRR&quot;.</p>
<p><strong>Example 4:</strong></p>
<p><strong>Input:</strong> s = &quot;RLRRRLLRLL&quot;</p>
<p><strong>Output:</strong> 2</p>
<p><strong>Explanation:</strong> s can be split into &quot;RL&quot;, &quot;RRRLLRLL&quot;, since each substring contains an equal number of 'L' and 'R'</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>1 &lt;= s.length &lt;= 1000</code></li>
<li><code>s[i] = 'L' or 'R'</code></li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">Java</title>
    <id>https://leetcode.innenu.com/1281-Subtract-the-Product-and-Sum-of-Digits-of-an-Integer/Java/</id>
    <link href="https://leetcode.innenu.com/1281-Subtract-the-Product-and-Sum-of-Digits-of-an-Integer/Java/"/>
    <updated>2021-02-17T16:18:42.558Z</updated>
    <content type="html"><![CDATA[<h2 id="lizncu"> lizncu</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span> <span>subtractProductAndSum</span><span>(</span><span>int</span> n<span>)</span> <span>{</span>
    <span>int</span> add <span>=</span> <span>0</span><span>;</span>
    <span>int</span> mul <span>=</span> <span>1</span><span>;</span>

    <span>while</span> <span>(</span>n <span>!=</span> <span>0</span><span>)</span> <span>{</span>
      add <span>+=</span> n <span>%</span> <span>10</span><span>;</span>
      mul <span>*=</span> n <span>%</span> <span>10</span><span>;</span>
      n <span>=</span> n <span>/</span> <span>10</span><span>;</span>
    <span>}</span>

    <span>return</span> <span>(</span>mul <span>-</span> add<span>)</span><span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div>]]></content>
    <author>
      <name>1281. Subtract the Product And Sum of Digits of An Integer</name>
    </author>
    <category term="Java"/>
    <contributor>
      <name>1281. Subtract the Product And Sum of Digits of An Integer</name>
    </contributor>
    <rights>Copyright by 1281. Subtract the Product And Sum of Digits of An Integer</rights>
  </entry>
  <entry>
    <title type="html">lizncu</title>
    <id>https://leetcode.innenu.com/1281-Subtract-the-Product-and-Sum-of-Digits-of-an-Integer/lizncu/</id>
    <link href="https://leetcode.innenu.com/1281-Subtract-the-Product-and-Sum-of-Digits-of-an-Integer/lizncu/"/>
    <updated>2021-02-17T16:18:42.558Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span> <span>subtractProductAndSum</span><span>(</span><span>int</span> n<span>)</span> <span>{</span>
    <span>int</span> add <span>=</span> <span>0</span><span>;</span>
    <span>int</span> mul <span>=</span> <span>1</span><span>;</span>

    <span>while</span> <span>(</span>n <span>!=</span> <span>0</span><span>)</span> <span>{</span>
      add <span>+=</span> n <span>%</span> <span>10</span><span>;</span>
      mul <span>*=</span> n <span>%</span> <span>10</span><span>;</span>
      n <span>=</span> n <span>/</span> <span>10</span><span>;</span>
    <span>}</span>

    <span>return</span> <span>(</span>mul <span>-</span> add<span>)</span><span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div>]]></content>
    <author>
      <name>1281. Subtract the Product And Sum of Digits of An Integer</name>
    </author>
    <category term="lizncu"/>
    <contributor>
      <name>1281. Subtract the Product And Sum of Digits of An Integer</name>
    </contributor>
    <rights>Copyright by 1281. Subtract the Product And Sum of Digits of An Integer</rights>
  </entry>
  <entry>
    <title type="html">1281. Subtract the Product and Sum of Digits of an Integer</title>
    <id>https://leetcode.innenu.com/1281-Subtract-the-Product-and-Sum-of-Digits-of-an-Integer/</id>
    <link href="https://leetcode.innenu.com/1281-Subtract-the-Product-and-Sum-of-Digits-of-an-Integer/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_1281-subtract-the-product-and-sum-of-digits-of-an-integer"> <a href="https://leetcode.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer/" target="_blank" rel="noopener noreferrer">1281. Subtract the Product and Sum of Digits of an Integer</a></h1>
<p>Given an integer number <code>n</code>, return the difference between the product of its digits and the sum of its digits.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> n = 234</p>
<p><strong>Output:</strong> 15</p>
<p><strong>Explanation:</strong></p>
<p>Product of digits = 2 * 3 * 4 = 24</p>
<p>Sum of digits = 2 + 3 + 4 = 9</p>
<p>Result = 24 - 9 = 15</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> n = 4421</p>
<p><strong>Output:</strong> 21</p>
<p><strong>Explanation:</strong></p>
<p>Product of digits = 4 * 4 * 2 * 1 = 32</p>
<p>Sum of digits = 4 + 4 + 2 + 1 = 11</p>
<p>Result = 32 - 11 = 21</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>1 &lt;= n &lt;= 10^5</code></li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">Java</title>
    <id>https://leetcode.innenu.com/1295-Find-Numbers-with-Even-Number-of-Digits/Java/</id>
    <link href="https://leetcode.innenu.com/1295-Find-Numbers-with-Even-Number-of-Digits/Java/"/>
    <updated>2021-02-17T16:18:42.559Z</updated>
    <content type="html"><![CDATA[<h2 id="lizncu"> lizncu</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span> <span>findNumbers</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>)</span> <span>{</span>
    <span>int</span> ans <span>=</span> <span>0</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>int</span> count <span>=</span> <span>0</span><span>;</span>
      <span>if</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>==</span> <span>0</span><span>)</span> <span>{</span>
        <span>continue</span><span>;</span>
      <span>}</span> <span>else</span> <span>{</span>
        <span>while</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>!=</span> <span>0</span><span>)</span> <span>{</span>
          nums<span>[</span>i<span>]</span> <span>/=</span> <span>10</span><span>;</span>
          count<span>++</span><span>;</span>
        <span>}</span>
      <span>}</span>
      <span>if</span> <span>(</span>count <span>%</span> <span>2</span> <span>==</span> <span>0</span><span>)</span> <span>{</span>
        ans<span>++</span><span>;</span>
      <span>}</span>
    <span>}</span>

    <span>return</span> ans<span>;</span>
  <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br></div></div>]]></content>
    <author>
      <name>1295. Find Numbers with Even Number of Digits</name>
    </author>
    <category term="Java"/>
    <contributor>
      <name>1295. Find Numbers with Even Number of Digits</name>
    </contributor>
    <rights>Copyright by 1295. Find Numbers with Even Number of Digits</rights>
  </entry>
  <entry>
    <title type="html">lizncu</title>
    <id>https://leetcode.innenu.com/1295-Find-Numbers-with-Even-Number-of-Digits/lizncu/</id>
    <link href="https://leetcode.innenu.com/1295-Find-Numbers-with-Even-Number-of-Digits/lizncu/"/>
    <updated>2021-02-17T16:18:42.559Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span> <span>findNumbers</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>)</span> <span>{</span>
    <span>int</span> ans <span>=</span> <span>0</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>int</span> count <span>=</span> <span>0</span><span>;</span>
      <span>if</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>==</span> <span>0</span><span>)</span> <span>{</span>
        <span>continue</span><span>;</span>
      <span>}</span> <span>else</span> <span>{</span>
        <span>while</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>!=</span> <span>0</span><span>)</span> <span>{</span>
          nums<span>[</span>i<span>]</span> <span>/=</span> <span>10</span><span>;</span>
          count<span>++</span><span>;</span>
        <span>}</span>
      <span>}</span>
      <span>if</span> <span>(</span>count <span>%</span> <span>2</span> <span>==</span> <span>0</span><span>)</span> <span>{</span>
        ans<span>++</span><span>;</span>
      <span>}</span>
    <span>}</span>

    <span>return</span> ans<span>;</span>
  <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br></div></div>]]></content>
    <author>
      <name>1295. Find Numbers with Even Number of Digits</name>
    </author>
    <category term="lizncu"/>
    <contributor>
      <name>1295. Find Numbers with Even Number of Digits</name>
    </contributor>
    <rights>Copyright by 1295. Find Numbers with Even Number of Digits</rights>
  </entry>
  <entry>
    <title type="html">1295. Find Numbers with Even Number of Digits</title>
    <id>https://leetcode.innenu.com/1295-Find-Numbers-with-Even-Number-of-Digits/</id>
    <link href="https://leetcode.innenu.com/1295-Find-Numbers-with-Even-Number-of-Digits/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_1295-find-numbers-with-even-number-of-digits"> <a href="https://leetcode.com/problems/find-numbers-with-even-number-of-digits/" target="_blank" rel="noopener noreferrer">1295. Find Numbers with Even Number of Digits</a></h1>
<p>Given an array <code>nums</code> of integers, return how many of them contain an <strong>even number</strong> of digits.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> nums = [12,345,2,6,7896]</p>
<p><strong>Output:</strong> 2</p>
<p><strong>Explanation:</strong> 12 contains 2 digits (even number of digits).
345 contains 3 digits (odd number of digits).
2 contains 1 digit (odd number of digits).
6 contains 1 digit (odd number of digits).
7896 contains 4 digits (even number of digits).
Therefore only 12 and 7896 contain an even number of digits.</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> nums = [555,901,482,1771]</p>
<p><strong>Output:</strong> 1</p>
<p><strong>Explanation:</strong>
Only 1771 contains an even number of digits.</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>1 &lt;= nums.length &lt;= 500</code></li>
<li><code>1 &lt;= nums[i] &lt;= 10^5</code></li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">Java</title>
    <id>https://leetcode.innenu.com/1299-Replace-Elements-with-Greatest-Element-on-Right-Side/Java/</id>
    <link href="https://leetcode.innenu.com/1299-Replace-Elements-with-Greatest-Element-on-Right-Side/Java/"/>
    <updated>2021-02-17T16:18:42.560Z</updated>
    <content type="html"><![CDATA[<h2 id="lizncu"> lizncu</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>replaceElements</span><span>(</span><span>int</span><span>[</span><span>]</span> arr<span>)</span> <span>{</span>
    <span>int</span> max <span>=</span> <span>-</span><span>1</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> arr<span>.</span>length <span>-</span> <span>1</span><span>;</span> i <span>>=</span> <span>0</span><span>;</span> i<span>--</span><span>)</span> <span>{</span>
      <span>int</span> temp <span>=</span> arr<span>[</span>i<span>]</span><span>;</span>
      arr<span>[</span>i<span>]</span> <span>=</span> max<span>;</span>
      <span>if</span> <span>(</span>temp <span>></span> max<span>)</span> <span>{</span>
        max <span>=</span> temp<span>;</span>
      <span>}</span>
    <span>}</span>
    <span>return</span> arr<span>;</span>
  <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div>]]></content>
    <author>
      <name>1299. Replace Elements with Greatest Element on Right Side</name>
    </author>
    <category term="Java"/>
    <contributor>
      <name>1299. Replace Elements with Greatest Element on Right Side</name>
    </contributor>
    <rights>Copyright by 1299. Replace Elements with Greatest Element on Right Side</rights>
  </entry>
  <entry>
    <title type="html">lizncu</title>
    <id>https://leetcode.innenu.com/1299-Replace-Elements-with-Greatest-Element-on-Right-Side/lizncu/</id>
    <link href="https://leetcode.innenu.com/1299-Replace-Elements-with-Greatest-Element-on-Right-Side/lizncu/"/>
    <updated>2021-02-17T16:18:42.560Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>replaceElements</span><span>(</span><span>int</span><span>[</span><span>]</span> arr<span>)</span> <span>{</span>
    <span>int</span> max <span>=</span> <span>-</span><span>1</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> arr<span>.</span>length <span>-</span> <span>1</span><span>;</span> i <span>>=</span> <span>0</span><span>;</span> i<span>--</span><span>)</span> <span>{</span>
      <span>int</span> temp <span>=</span> arr<span>[</span>i<span>]</span><span>;</span>
      arr<span>[</span>i<span>]</span> <span>=</span> max<span>;</span>
      <span>if</span> <span>(</span>temp <span>></span> max<span>)</span> <span>{</span>
        max <span>=</span> temp<span>;</span>
      <span>}</span>
    <span>}</span>
    <span>return</span> arr<span>;</span>
  <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div>]]></content>
    <author>
      <name>1299. Replace Elements with Greatest Element on Right Side</name>
    </author>
    <category term="lizncu"/>
    <contributor>
      <name>1299. Replace Elements with Greatest Element on Right Side</name>
    </contributor>
    <rights>Copyright by 1299. Replace Elements with Greatest Element on Right Side</rights>
  </entry>
  <entry>
    <title type="html">1299. Replace Elements with Greatest Element on Right Side</title>
    <id>https://leetcode.innenu.com/1299-Replace-Elements-with-Greatest-Element-on-Right-Side/</id>
    <link href="https://leetcode.innenu.com/1299-Replace-Elements-with-Greatest-Element-on-Right-Side/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_1299-replace-elements-with-greatest-element-on-right-side"> <a href="https://leetcode.com/problems/replace-elements-with-greatest-element-on-right-side/" target="_blank" rel="noopener noreferrer">1299. Replace Elements with Greatest Element on Right Side</a></h1>
<p>Given an array <code>arr</code>, replace every element in that array with the greatest element among the elements to its right, and replace the last element with <code>-1</code>.</p>
<p>After doing so, return the array.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> arr = [17,18,5,4,6,1]</p>
<p><strong>Output:</strong> [18,6,6,6,1,-1]</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>1 &lt;= arr.length &lt;= 10^4</code></li>
<li><code>1 &lt;= arr[i] &lt;= 10^5</code></li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">C++</title>
    <id>https://leetcode.innenu.com/13-roman-to-integer/C++/</id>
    <link href="https://leetcode.innenu.com/13-roman-to-integer/C++/"/>
    <updated>2021-02-17T16:18:42.562Z</updated>
    <content type="html"><![CDATA[<h2 id="virgil"> Virgil</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>
<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>
<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>int</span> <span>romanToInt</span><span>(</span>string s<span>)</span> <span>{</span>
    <span>int</span> m<span>[</span><span>90</span><span>]</span> <span>=</span> <span>{</span><span>}</span><span>;</span>
    m<span>[</span><span>'I'</span><span>]</span> <span>=</span> <span>1</span><span>;</span>
    m<span>[</span><span>'V'</span><span>]</span> <span>=</span> <span>5</span><span>;</span>
    m<span>[</span><span>'X'</span><span>]</span> <span>=</span> <span>10</span><span>;</span>
    m<span>[</span><span>'L'</span><span>]</span> <span>=</span> <span>50</span><span>;</span>
    m<span>[</span><span>'C'</span><span>]</span> <span>=</span> <span>100</span><span>;</span>
    m<span>[</span><span>'D'</span><span>]</span> <span>=</span> <span>500</span><span>;</span>
    m<span>[</span><span>'M'</span><span>]</span> <span>=</span> <span>1000</span><span>;</span>
    <span>int</span> sum <span>=</span> <span>0</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> s<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> <span>++</span>i<span>)</span>
      m<span>[</span>s<span>[</span>i<span>]</span><span>]</span> <span>&lt;</span> m<span>[</span>s<span>[</span>i <span>+</span> <span>1</span><span>]</span><span>]</span> <span>?</span> sum <span>-=</span> m<span>[</span>s<span>[</span>i<span>]</span><span>]</span> <span>:</span> sum <span>+=</span> m<span>[</span>s<span>[</span>i<span>]</span><span>]</span><span>;</span>
    <span>return</span> sum<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br></div></div><h2 id="lmy"> lmy</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>int</span> <span>romanToInt</span><span>(</span>string s<span>)</span> <span>{</span>
    <span>int</span> l <span>=</span> s<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span>
    <span>int</span> m<span>[</span><span>99</span><span>]</span> <span>=</span> <span>{</span><span>}</span><span>;</span>
    m<span>[</span><span>'I'</span><span>]</span> <span>=</span> <span>1</span><span>;</span>
    m<span>[</span><span>'V'</span><span>]</span> <span>=</span> <span>5</span><span>;</span>
    m<span>[</span><span>'X'</span><span>]</span> <span>=</span> <span>10</span><span>;</span>
    m<span>[</span><span>'L'</span><span>]</span> <span>=</span> <span>50</span><span>;</span>
    m<span>[</span><span>'C'</span><span>]</span> <span>=</span> <span>100</span><span>;</span>
    m<span>[</span><span>'D'</span><span>]</span> <span>=</span> <span>500</span><span>;</span>
    m<span>[</span><span>'M'</span><span>]</span> <span>=</span> <span>1000</span><span>;</span>
    <span>int</span> sum <span>=</span> <span>0</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> s<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      m<span>[</span>s<span>[</span>i<span>]</span><span>]</span> <span>&lt;</span> m<span>[</span>s<span>[</span>i <span>+</span> <span>1</span><span>]</span><span>]</span> <span>?</span> sum <span>-=</span> m<span>[</span>s<span>[</span>i<span>]</span><span>]</span> <span>:</span> sum <span>+=</span> m<span>[</span>s<span>[</span>i<span>]</span><span>]</span><span>;</span>
    <span>}</span>
    <span>return</span> sum<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div><h2 id="sqm"> sqm</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>int</span> <span>romanToInt</span><span>(</span>string s<span>)</span> <span>{</span>
    <span>int</span> l <span>=</span> s<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span>
    <span>int</span> m<span>[</span><span>99</span><span>]</span> <span>=</span> <span>{</span><span>}</span><span>;</span>
    m<span>[</span><span>'I'</span><span>]</span> <span>=</span> <span>1</span><span>;</span>
    m<span>[</span><span>'V'</span><span>]</span> <span>=</span> <span>5</span><span>;</span>
    m<span>[</span><span>'X'</span><span>]</span> <span>=</span> <span>10</span><span>;</span>
    m<span>[</span><span>'L'</span><span>]</span> <span>=</span> <span>50</span><span>;</span>
    m<span>[</span><span>'C'</span><span>]</span> <span>=</span> <span>100</span><span>;</span>
    m<span>[</span><span>'D'</span><span>]</span> <span>=</span> <span>500</span><span>;</span>
    m<span>[</span><span>'M'</span><span>]</span> <span>=</span> <span>1000</span><span>;</span>
    <span>int</span> sum <span>=</span> <span>0</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> s<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      m<span>[</span>s<span>[</span>i<span>]</span><span>]</span> <span>&lt;</span> m<span>[</span>s<span>[</span>i <span>+</span> <span>1</span><span>]</span><span>]</span> <span>?</span> sum <span>-=</span> m<span>[</span>s<span>[</span>i<span>]</span><span>]</span> <span>:</span> sum <span>+=</span> m<span>[</span>s<span>[</span>i<span>]</span><span>]</span><span>;</span>
    <span>}</span>
    <span>return</span> sum<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br></div></div>]]></content>
    <author>
      <name>13. Roman to Integer</name>
    </author>
    <category term="C++"/>
    <contributor>
      <name>13. Roman to Integer</name>
    </contributor>
    <rights>Copyright by 13. Roman to Integer</rights>
  </entry>
  <entry>
    <title type="html">Java</title>
    <id>https://leetcode.innenu.com/13-roman-to-integer/Java/</id>
    <link href="https://leetcode.innenu.com/13-roman-to-integer/Java/"/>
    <updated>2021-02-17T16:18:42.570Z</updated>
    <content type="html"><![CDATA[<h2 id="lizncu"> lizncu</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span> <span>romanToInt</span><span>(</span><span>String</span> s<span>)</span> <span>{</span>
    <span>int</span> n <span>=</span> s<span>.</span><span>length</span><span>(</span><span>)</span><span>;</span>
    <span>int</span> number <span>=</span> <span>0</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> n<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>switch</span> <span>(</span>s<span>.</span><span>charAt</span><span>(</span>i<span>)</span><span>)</span> <span>{</span>
        <span>case</span> <span>'I'</span><span>:</span>
          number <span>=</span> number <span>+</span> <span>1</span><span>;</span>
          <span>break</span><span>;</span>
        <span>case</span> <span>'V'</span><span>:</span>
          number <span>=</span> number <span>+</span> <span>5</span><span>;</span>
          <span>break</span><span>;</span>
        <span>case</span> <span>'X'</span><span>:</span>
          number <span>=</span> number <span>+</span> <span>10</span><span>;</span>
          <span>break</span><span>;</span>
        <span>case</span> <span>'L'</span><span>:</span>
          number <span>=</span> number <span>+</span> <span>50</span><span>;</span>
          <span>break</span><span>;</span>
        <span>case</span> <span>'C'</span><span>:</span>
          number <span>=</span> number <span>+</span> <span>100</span><span>;</span>
          <span>break</span><span>;</span>
        <span>case</span> <span>'D'</span><span>:</span>
          number <span>=</span> number <span>+</span> <span>500</span><span>;</span>
          <span>break</span><span>;</span>
        <span>case</span> <span>'M'</span><span>:</span>
          number <span>=</span> number <span>+</span> <span>1000</span><span>;</span>
          <span>break</span><span>;</span>
        <span>default</span><span>:</span>
          <span>System</span><span>.</span>out<span>.</span><span>println</span><span>(</span><span>"default"</span><span>)</span><span>;</span>
          <span>break</span><span>;</span>
      <span>}</span>

      <span>if</span> <span>(</span>i <span>></span> <span>0</span><span>)</span> <span>{</span>
        <span>if</span> <span>(</span><span>(</span>s<span>.</span><span>charAt</span><span>(</span>i<span>)</span> <span>==</span> <span>'V'</span> <span>||</span> s<span>.</span><span>charAt</span><span>(</span>i<span>)</span> <span>==</span> <span>'X'</span><span>)</span> <span>&amp;&amp;</span> s<span>.</span><span>charAt</span><span>(</span>i <span>-</span> <span>1</span><span>)</span> <span>==</span> <span>'I'</span><span>)</span> <span>{</span>
          number <span>-=</span> <span>2</span><span>;</span>
        <span>}</span>
        <span>if</span> <span>(</span><span>(</span>s<span>.</span><span>charAt</span><span>(</span>i<span>)</span> <span>==</span> <span>'L'</span> <span>||</span> s<span>.</span><span>charAt</span><span>(</span>i<span>)</span> <span>==</span> <span>'C'</span><span>)</span> <span>&amp;&amp;</span> s<span>.</span><span>charAt</span><span>(</span>i <span>-</span> <span>1</span><span>)</span> <span>==</span> <span>'X'</span><span>)</span> <span>{</span>
          number <span>-=</span> <span>20</span><span>;</span>
        <span>}</span>
        <span>if</span> <span>(</span><span>(</span>s<span>.</span><span>charAt</span><span>(</span>i<span>)</span> <span>==</span> <span>'D'</span> <span>||</span> s<span>.</span><span>charAt</span><span>(</span>i<span>)</span> <span>==</span> <span>'M'</span><span>)</span> <span>&amp;&amp;</span> s<span>.</span><span>charAt</span><span>(</span>i <span>-</span> <span>1</span><span>)</span> <span>==</span> <span>'C'</span><span>)</span> <span>{</span>
          number <span>-=</span> <span>200</span><span>;</span>
        <span>}</span>
      <span>}</span>
    <span>}</span>
    <span>return</span> number<span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br></div></div>]]></content>
    <author>
      <name>13. Roman to Integer</name>
    </author>
    <category term="Java"/>
    <contributor>
      <name>13. Roman to Integer</name>
    </contributor>
    <rights>Copyright by 13. Roman to Integer</rights>
  </entry>
  <entry>
    <title type="html">JavaScript</title>
    <id>https://leetcode.innenu.com/13-roman-to-integer/JavaScript/</id>
    <link href="https://leetcode.innenu.com/13-roman-to-integer/JavaScript/"/>
    <updated>2021-02-17T16:18:42.571Z</updated>
    <content type="html"><![CDATA[<h2 id="mister-hope"> Mister-Hope</h2>
<div><pre><code><span>/**
 * Runtime: 160 ms, faster than 80.43% of JavaScript online submissions for Roman to Integer.
 *
 * Memory Usage: 43.6 MB, less than 5.78% of JavaScript online submissions for Roman to Integer.
 */</span>

<span>const</span> <span>romanToInt</span> <span>=</span> <span>(</span><span>s</span><span>)</span> <span>=></span> <span>{</span>
  <span>let</span> result <span>=</span> <span>0</span><span>,</span>
    map <span>=</span> <span>{</span> <span>I</span><span>:</span> <span>1</span><span>,</span> <span>V</span><span>:</span> <span>5</span><span>,</span> <span>X</span><span>:</span> <span>10</span><span>,</span> <span>L</span><span>:</span> <span>50</span><span>,</span> <span>C</span><span>:</span> <span>100</span><span>,</span> <span>D</span><span>:</span> <span>500</span><span>,</span> <span>M</span><span>:</span> <span>1000</span> <span>}</span><span>;</span>
  <span>for</span> <span>(</span><span>let</span> i <span>=</span> s<span>.</span>length <span>-</span> <span>1</span><span>;</span> i <span>>=</span> <span>0</span><span>;</span> i<span>--</span><span>)</span> <span>{</span>
    <span>let</span> val <span>=</span> map<span>[</span>s<span>.</span><span>charAt</span><span>(</span>i<span>)</span><span>]</span><span>;</span>
    <span>if</span> <span>(</span>i <span>&lt;</span> s<span>.</span>length <span>-</span> <span>1</span> <span>&amp;&amp;</span> val <span>&lt;</span> map<span>[</span>s<span>.</span><span>charAt</span><span>(</span>i <span>+</span> <span>1</span><span>)</span><span>]</span><span>)</span> val <span>=</span> <span>-</span>val<span>;</span>
    result <span>+=</span> val<span>;</span>
  <span>}</span>
  <span>return</span> result<span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div>]]></content>
    <author>
      <name>13. Roman to Integer</name>
    </author>
    <category term="JavaScript"/>
    <contributor>
      <name>13. Roman to Integer</name>
    </contributor>
    <rights>Copyright by 13. Roman to Integer</rights>
  </entry>
  <entry>
    <title type="html">Mister-Hope</title>
    <id>https://leetcode.innenu.com/13-roman-to-integer/Mister-Hope/</id>
    <link href="https://leetcode.innenu.com/13-roman-to-integer/Mister-Hope/"/>
    <updated>2021-02-17T16:18:42.572Z</updated>
    <content type="html"><![CDATA[<h2 id="javascript"> JavaScript</h2>
<div><pre><code><span>/**
 * Runtime: 160 ms, faster than 80.43% of JavaScript online submissions for Roman to Integer.
 *
 * Memory Usage: 43.6 MB, less than 5.78% of JavaScript online submissions for Roman to Integer.
 */</span>

<span>const</span> <span>romanToInt</span> <span>=</span> <span>(</span><span>s</span><span>)</span> <span>=></span> <span>{</span>
  <span>let</span> result <span>=</span> <span>0</span><span>,</span>
    map <span>=</span> <span>{</span> <span>I</span><span>:</span> <span>1</span><span>,</span> <span>V</span><span>:</span> <span>5</span><span>,</span> <span>X</span><span>:</span> <span>10</span><span>,</span> <span>L</span><span>:</span> <span>50</span><span>,</span> <span>C</span><span>:</span> <span>100</span><span>,</span> <span>D</span><span>:</span> <span>500</span><span>,</span> <span>M</span><span>:</span> <span>1000</span> <span>}</span><span>;</span>
  <span>for</span> <span>(</span><span>let</span> i <span>=</span> s<span>.</span>length <span>-</span> <span>1</span><span>;</span> i <span>>=</span> <span>0</span><span>;</span> i<span>--</span><span>)</span> <span>{</span>
    <span>let</span> val <span>=</span> map<span>[</span>s<span>.</span><span>charAt</span><span>(</span>i<span>)</span><span>]</span><span>;</span>
    <span>if</span> <span>(</span>i <span>&lt;</span> s<span>.</span>length <span>-</span> <span>1</span> <span>&amp;&amp;</span> val <span>&lt;</span> map<span>[</span>s<span>.</span><span>charAt</span><span>(</span>i <span>+</span> <span>1</span><span>)</span><span>]</span><span>)</span> val <span>=</span> <span>-</span>val<span>;</span>
    result <span>+=</span> val<span>;</span>
  <span>}</span>
  <span>return</span> result<span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div><h2 id="typescript"> TypeScript</h2>
<div><pre><code><span>/*
 * Runtime: 184 ms, faster than 27.46% of TypeScript online submissions for Roman to Integer.
 *
 * Memory Usage: 45.8 MB, less than 5.18% of TypeScript online submissions for Roman to Integer.
 */</span>

<span>const</span> romanToInt <span>=</span> <span>(</span>s<span>:</span> <span>string</span><span>)</span><span>:</span> <span>number</span> <span>=></span> <span>{</span>
  <span>let</span> result <span>=</span> <span>0</span><span>;</span>
  <span>const</span> map<span>:</span> Record<span>&lt;</span><span>string</span><span>,</span> <span>number</span><span>></span> <span>=</span> <span>{</span>
    <span>I</span><span>:</span> <span>1</span><span>,</span>
    <span>V</span><span>:</span> <span>5</span><span>,</span>
    <span>X</span><span>:</span> <span>10</span><span>,</span>
    <span>L</span><span>:</span> <span>50</span><span>,</span>
    <span>C</span><span>:</span> <span>100</span><span>,</span>
    <span>D</span><span>:</span> <span>500</span><span>,</span>
    <span>M</span><span>:</span> <span>1000</span><span>,</span>
  <span>}</span><span>;</span>

  <span>for</span> <span>(</span><span>let</span> i <span>=</span> s<span>.</span>length <span>-</span> <span>1</span><span>;</span> i <span>>=</span> <span>0</span><span>;</span> i<span>--</span><span>)</span> <span>{</span>
    <span>let</span> val <span>=</span> map<span>[</span>s<span>.</span><span>charAt</span><span>(</span>i<span>)</span><span>]</span><span>;</span>
    <span>if</span> <span>(</span>i <span>&lt;</span> s<span>.</span>length <span>-</span> <span>1</span> <span>&amp;&amp;</span> val <span>&lt;</span> map<span>[</span>s<span>.</span><span>charAt</span><span>(</span>i <span>+</span> <span>1</span><span>)</span><span>]</span><span>)</span> val <span>=</span> <span>-</span>val<span>;</span>
    result <span>+=</span> val<span>;</span>
  <span>}</span>
  <span>return</span> result<span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br></div></div>]]></content>
    <author>
      <name>13. Roman to Integer</name>
    </author>
    <category term="Mister-Hope"/>
    <contributor>
      <name>13. Roman to Integer</name>
    </contributor>
    <rights>Copyright by 13. Roman to Integer</rights>
  </entry>
  <entry>
    <title type="html">TypeScript</title>
    <id>https://leetcode.innenu.com/13-roman-to-integer/TypeScript/</id>
    <link href="https://leetcode.innenu.com/13-roman-to-integer/TypeScript/"/>
    <updated>2021-02-17T16:18:42.572Z</updated>
    <content type="html"><![CDATA[<h2 id="mister-hope"> Mister-Hope</h2>
<div><pre><code><span>/*
 * Runtime: 184 ms, faster than 27.46% of TypeScript online submissions for Roman to Integer.
 *
 * Memory Usage: 45.8 MB, less than 5.18% of TypeScript online submissions for Roman to Integer.
 */</span>

<span>const</span> romanToInt <span>=</span> <span>(</span>s<span>:</span> <span>string</span><span>)</span><span>:</span> <span>number</span> <span>=></span> <span>{</span>
  <span>let</span> result <span>=</span> <span>0</span><span>;</span>
  <span>const</span> map<span>:</span> Record<span>&lt;</span><span>string</span><span>,</span> <span>number</span><span>></span> <span>=</span> <span>{</span>
    <span>I</span><span>:</span> <span>1</span><span>,</span>
    <span>V</span><span>:</span> <span>5</span><span>,</span>
    <span>X</span><span>:</span> <span>10</span><span>,</span>
    <span>L</span><span>:</span> <span>50</span><span>,</span>
    <span>C</span><span>:</span> <span>100</span><span>,</span>
    <span>D</span><span>:</span> <span>500</span><span>,</span>
    <span>M</span><span>:</span> <span>1000</span><span>,</span>
  <span>}</span><span>;</span>

  <span>for</span> <span>(</span><span>let</span> i <span>=</span> s<span>.</span>length <span>-</span> <span>1</span><span>;</span> i <span>>=</span> <span>0</span><span>;</span> i<span>--</span><span>)</span> <span>{</span>
    <span>let</span> val <span>=</span> map<span>[</span>s<span>.</span><span>charAt</span><span>(</span>i<span>)</span><span>]</span><span>;</span>
    <span>if</span> <span>(</span>i <span>&lt;</span> s<span>.</span>length <span>-</span> <span>1</span> <span>&amp;&amp;</span> val <span>&lt;</span> map<span>[</span>s<span>.</span><span>charAt</span><span>(</span>i <span>+</span> <span>1</span><span>)</span><span>]</span><span>)</span> val <span>=</span> <span>-</span>val<span>;</span>
    result <span>+=</span> val<span>;</span>
  <span>}</span>
  <span>return</span> result<span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br></div></div>]]></content>
    <author>
      <name>13. Roman to Integer</name>
    </author>
    <category term="TypeScript"/>
    <contributor>
      <name>13. Roman to Integer</name>
    </contributor>
    <rights>Copyright by 13. Roman to Integer</rights>
  </entry>
  <entry>
    <title type="html">Virgil</title>
    <id>https://leetcode.innenu.com/13-roman-to-integer/Virgil/</id>
    <link href="https://leetcode.innenu.com/13-roman-to-integer/Virgil/"/>
    <updated>2021-02-17T16:18:42.572Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>
<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>
<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>int</span> <span>romanToInt</span><span>(</span>string s<span>)</span> <span>{</span>
    <span>int</span> m<span>[</span><span>90</span><span>]</span> <span>=</span> <span>{</span><span>}</span><span>;</span>
    m<span>[</span><span>'I'</span><span>]</span> <span>=</span> <span>1</span><span>;</span>
    m<span>[</span><span>'V'</span><span>]</span> <span>=</span> <span>5</span><span>;</span>
    m<span>[</span><span>'X'</span><span>]</span> <span>=</span> <span>10</span><span>;</span>
    m<span>[</span><span>'L'</span><span>]</span> <span>=</span> <span>50</span><span>;</span>
    m<span>[</span><span>'C'</span><span>]</span> <span>=</span> <span>100</span><span>;</span>
    m<span>[</span><span>'D'</span><span>]</span> <span>=</span> <span>500</span><span>;</span>
    m<span>[</span><span>'M'</span><span>]</span> <span>=</span> <span>1000</span><span>;</span>
    <span>int</span> sum <span>=</span> <span>0</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> s<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> <span>++</span>i<span>)</span>
      m<span>[</span>s<span>[</span>i<span>]</span><span>]</span> <span>&lt;</span> m<span>[</span>s<span>[</span>i <span>+</span> <span>1</span><span>]</span><span>]</span> <span>?</span> sum <span>-=</span> m<span>[</span>s<span>[</span>i<span>]</span><span>]</span> <span>:</span> sum <span>+=</span> m<span>[</span>s<span>[</span>i<span>]</span><span>]</span><span>;</span>
    <span>return</span> sum<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br></div></div>]]></content>
    <author>
      <name>13. Roman to Integer</name>
    </author>
    <category term="Virgil"/>
    <contributor>
      <name>13. Roman to Integer</name>
    </contributor>
    <rights>Copyright by 13. Roman to Integer</rights>
  </entry>
  <entry>
    <title type="html">lizncu</title>
    <id>https://leetcode.innenu.com/13-roman-to-integer/lizncu/</id>
    <link href="https://leetcode.innenu.com/13-roman-to-integer/lizncu/"/>
    <updated>2021-02-17T16:18:42.573Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span> <span>romanToInt</span><span>(</span><span>String</span> s<span>)</span> <span>{</span>
    <span>int</span> n <span>=</span> s<span>.</span><span>length</span><span>(</span><span>)</span><span>;</span>
    <span>int</span> number <span>=</span> <span>0</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> n<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>switch</span> <span>(</span>s<span>.</span><span>charAt</span><span>(</span>i<span>)</span><span>)</span> <span>{</span>
        <span>case</span> <span>'I'</span><span>:</span>
          number <span>=</span> number <span>+</span> <span>1</span><span>;</span>
          <span>break</span><span>;</span>
        <span>case</span> <span>'V'</span><span>:</span>
          number <span>=</span> number <span>+</span> <span>5</span><span>;</span>
          <span>break</span><span>;</span>
        <span>case</span> <span>'X'</span><span>:</span>
          number <span>=</span> number <span>+</span> <span>10</span><span>;</span>
          <span>break</span><span>;</span>
        <span>case</span> <span>'L'</span><span>:</span>
          number <span>=</span> number <span>+</span> <span>50</span><span>;</span>
          <span>break</span><span>;</span>
        <span>case</span> <span>'C'</span><span>:</span>
          number <span>=</span> number <span>+</span> <span>100</span><span>;</span>
          <span>break</span><span>;</span>
        <span>case</span> <span>'D'</span><span>:</span>
          number <span>=</span> number <span>+</span> <span>500</span><span>;</span>
          <span>break</span><span>;</span>
        <span>case</span> <span>'M'</span><span>:</span>
          number <span>=</span> number <span>+</span> <span>1000</span><span>;</span>
          <span>break</span><span>;</span>
        <span>default</span><span>:</span>
          <span>System</span><span>.</span>out<span>.</span><span>println</span><span>(</span><span>"default"</span><span>)</span><span>;</span>
          <span>break</span><span>;</span>
      <span>}</span>

      <span>if</span> <span>(</span>i <span>></span> <span>0</span><span>)</span> <span>{</span>
        <span>if</span> <span>(</span><span>(</span>s<span>.</span><span>charAt</span><span>(</span>i<span>)</span> <span>==</span> <span>'V'</span> <span>||</span> s<span>.</span><span>charAt</span><span>(</span>i<span>)</span> <span>==</span> <span>'X'</span><span>)</span> <span>&amp;&amp;</span> s<span>.</span><span>charAt</span><span>(</span>i <span>-</span> <span>1</span><span>)</span> <span>==</span> <span>'I'</span><span>)</span> <span>{</span>
          number <span>-=</span> <span>2</span><span>;</span>
        <span>}</span>
        <span>if</span> <span>(</span><span>(</span>s<span>.</span><span>charAt</span><span>(</span>i<span>)</span> <span>==</span> <span>'L'</span> <span>||</span> s<span>.</span><span>charAt</span><span>(</span>i<span>)</span> <span>==</span> <span>'C'</span><span>)</span> <span>&amp;&amp;</span> s<span>.</span><span>charAt</span><span>(</span>i <span>-</span> <span>1</span><span>)</span> <span>==</span> <span>'X'</span><span>)</span> <span>{</span>
          number <span>-=</span> <span>20</span><span>;</span>
        <span>}</span>
        <span>if</span> <span>(</span><span>(</span>s<span>.</span><span>charAt</span><span>(</span>i<span>)</span> <span>==</span> <span>'D'</span> <span>||</span> s<span>.</span><span>charAt</span><span>(</span>i<span>)</span> <span>==</span> <span>'M'</span><span>)</span> <span>&amp;&amp;</span> s<span>.</span><span>charAt</span><span>(</span>i <span>-</span> <span>1</span><span>)</span> <span>==</span> <span>'C'</span><span>)</span> <span>{</span>
          number <span>-=</span> <span>200</span><span>;</span>
        <span>}</span>
      <span>}</span>
    <span>}</span>
    <span>return</span> number<span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br></div></div>]]></content>
    <author>
      <name>13. Roman to Integer</name>
    </author>
    <category term="lizncu"/>
    <contributor>
      <name>13. Roman to Integer</name>
    </contributor>
    <rights>Copyright by 13. Roman to Integer</rights>
  </entry>
  <entry>
    <title type="html">lmy</title>
    <id>https://leetcode.innenu.com/13-roman-to-integer/lmy/</id>
    <link href="https://leetcode.innenu.com/13-roman-to-integer/lmy/"/>
    <updated>2021-02-17T16:18:42.573Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>int</span> <span>romanToInt</span><span>(</span>string s<span>)</span> <span>{</span>
    <span>int</span> l <span>=</span> s<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span>
    <span>int</span> m<span>[</span><span>99</span><span>]</span> <span>=</span> <span>{</span><span>}</span><span>;</span>
    m<span>[</span><span>'I'</span><span>]</span> <span>=</span> <span>1</span><span>;</span>
    m<span>[</span><span>'V'</span><span>]</span> <span>=</span> <span>5</span><span>;</span>
    m<span>[</span><span>'X'</span><span>]</span> <span>=</span> <span>10</span><span>;</span>
    m<span>[</span><span>'L'</span><span>]</span> <span>=</span> <span>50</span><span>;</span>
    m<span>[</span><span>'C'</span><span>]</span> <span>=</span> <span>100</span><span>;</span>
    m<span>[</span><span>'D'</span><span>]</span> <span>=</span> <span>500</span><span>;</span>
    m<span>[</span><span>'M'</span><span>]</span> <span>=</span> <span>1000</span><span>;</span>
    <span>int</span> sum <span>=</span> <span>0</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> s<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      m<span>[</span>s<span>[</span>i<span>]</span><span>]</span> <span>&lt;</span> m<span>[</span>s<span>[</span>i <span>+</span> <span>1</span><span>]</span><span>]</span> <span>?</span> sum <span>-=</span> m<span>[</span>s<span>[</span>i<span>]</span><span>]</span> <span>:</span> sum <span>+=</span> m<span>[</span>s<span>[</span>i<span>]</span><span>]</span><span>;</span>
    <span>}</span>
    <span>return</span> sum<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div>]]></content>
    <author>
      <name>13. Roman to Integer</name>
    </author>
    <category term="lmy"/>
    <contributor>
      <name>13. Roman to Integer</name>
    </contributor>
    <rights>Copyright by 13. Roman to Integer</rights>
  </entry>
  <entry>
    <title type="html">13. Roman to Integer</title>
    <id>https://leetcode.innenu.com/13-roman-to-integer/</id>
    <link href="https://leetcode.innenu.com/13-roman-to-integer/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_13-roman-to-integer"> <a href="https://leetcode.com/problems/roman-to-integer/" target="_blank" rel="noopener noreferrer">13. Roman to Integer</a></h1>
<p>Roman numerals are represented by seven different symbols: <code>I</code>, <code>V</code>, <code>X</code>, <code>L</code>, <code>C</code>, <code>D</code> and <code>M</code>.</p>
<table>
<thead>
<tr>
<th>Symbol</th>
<th>Value</th>
</tr>
</thead>
<tbody>
<tr>
<td>I</td>
<td>1</td>
</tr>
<tr>
<td>V</td>
<td>5</td>
</tr>
<tr>
<td>X</td>
<td>10</td>
</tr>
<tr>
<td>L</td>
<td>50</td>
</tr>
<tr>
<td>C</td>
<td>100</td>
</tr>
<tr>
<td>D</td>
<td>500</td>
</tr>
<tr>
<td>M</td>
<td>1000</td>
</tr>
</tbody>
</table>
<p>For example, <code>2</code> is written as <code>II</code> in Roman numeral, just two one's added together. <code>12</code> is written as <code>XII</code>, which is simply <code>X + II</code>. The number <code>27</code> is written as <code>XXVII</code>, which is <code>XX + V + II</code>.</p>
<p>Roman numerals are usually written largest to smallest from left to right. However, the numeral for four is not <code>IIII</code>. Instead, the number four is written as <code>IV</code>. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as <code>IX</code>. There are six instances where subtraction is used:</p>
<ul>
<li><code>I</code> can be placed before <code>V</code> (5) and <code>X</code> (10) to make 4 and 9.</li>
<li><code>X</code> can be placed before <code>L</code> (50) and <code>C</code> (100) to make 40 and 90.</li>
<li><code>C</code> can be placed before <code>D</code> (500) and <code>M</code> (1000) to make 400 and 900.</li>
</ul>
<p>Given a roman numeral, convert it to an integer.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> s = &quot;III&quot;</p>
<p><strong>Output:</strong> 3</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> s = &quot;IV&quot;</p>
<p><strong>Output:</strong> 4</p>
<p><strong>Example 3:</strong></p>
<p><strong>Input:</strong> s = &quot;IX&quot;</p>
<p><strong>Output:</strong> 9</p>
<p><strong>Example 4:</strong></p>
<p><strong>Input:</strong> s = &quot;LVIII&quot;</p>
<p><strong>Output:</strong> 58</p>
<p><strong>Explanation:</strong> L = 50, V= 5, III = 3.</p>
<p><strong>Example 5:</strong></p>
<p><strong>Input:</strong> s = &quot;MCMXCIV&quot;</p>
<p><strong>Output:</strong> 1994</p>
<p><strong>Explanation:</strong> M = 1000, CM = 900, XC = 90 and IV = 4.</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>1 &lt;= s.length &lt;= 15</code></li>
<li><code>s</code> contains only the characters <code>('I', 'V', 'X', 'L', 'C', 'D', 'M')</code>.</li>
<li>It is <strong>guaranteed</strong> that <code>s</code> is a valid roman numeral in the range <code>[1, 3999]</code>.</li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">sqm</title>
    <id>https://leetcode.innenu.com/13-roman-to-integer/sqm/</id>
    <link href="https://leetcode.innenu.com/13-roman-to-integer/sqm/"/>
    <updated>2021-02-17T16:18:42.576Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>int</span> <span>romanToInt</span><span>(</span>string s<span>)</span> <span>{</span>
    <span>int</span> l <span>=</span> s<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span>
    <span>int</span> m<span>[</span><span>99</span><span>]</span> <span>=</span> <span>{</span><span>}</span><span>;</span>
    m<span>[</span><span>'I'</span><span>]</span> <span>=</span> <span>1</span><span>;</span>
    m<span>[</span><span>'V'</span><span>]</span> <span>=</span> <span>5</span><span>;</span>
    m<span>[</span><span>'X'</span><span>]</span> <span>=</span> <span>10</span><span>;</span>
    m<span>[</span><span>'L'</span><span>]</span> <span>=</span> <span>50</span><span>;</span>
    m<span>[</span><span>'C'</span><span>]</span> <span>=</span> <span>100</span><span>;</span>
    m<span>[</span><span>'D'</span><span>]</span> <span>=</span> <span>500</span><span>;</span>
    m<span>[</span><span>'M'</span><span>]</span> <span>=</span> <span>1000</span><span>;</span>
    <span>int</span> sum <span>=</span> <span>0</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> s<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      m<span>[</span>s<span>[</span>i<span>]</span><span>]</span> <span>&lt;</span> m<span>[</span>s<span>[</span>i <span>+</span> <span>1</span><span>]</span><span>]</span> <span>?</span> sum <span>-=</span> m<span>[</span>s<span>[</span>i<span>]</span><span>]</span> <span>:</span> sum <span>+=</span> m<span>[</span>s<span>[</span>i<span>]</span><span>]</span><span>;</span>
    <span>}</span>
    <span>return</span> sum<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br></div></div>]]></content>
    <author>
      <name>13. Roman to Integer</name>
    </author>
    <category term="sqm"/>
    <contributor>
      <name>13. Roman to Integer</name>
    </contributor>
    <rights>Copyright by 13. Roman to Integer</rights>
  </entry>
  <entry>
    <title type="html">Java</title>
    <id>https://leetcode.innenu.com/1313-Decompress-Run-Length-Encoded-List/Java/</id>
    <link href="https://leetcode.innenu.com/1313-Decompress-Run-Length-Encoded-List/Java/"/>
    <updated>2021-02-17T16:18:42.576Z</updated>
    <content type="html"><![CDATA[<h2 id="lizncu"> lizncu</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>decompressRLElist</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>)</span> <span>{</span>
    <span>int</span> mount <span>=</span> <span>0</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i <span>=</span> i <span>+</span> <span>2</span><span>)</span> <span>{</span>
      mount <span>+=</span> nums<span>[</span>i<span>]</span><span>;</span>
    <span>}</span>

    <span>int</span><span>[</span><span>]</span> ans <span>=</span> <span>new</span> <span>int</span><span>[</span>mount<span>]</span><span>;</span>

    <span>int</span> count <span>=</span> <span>0</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>+</span> <span>1</span> <span>&lt;</span> nums<span>.</span>length<span>;</span> i <span>=</span> i <span>+</span> <span>2</span><span>)</span> <span>{</span>
      <span>for</span> <span>(</span><span>int</span> j <span>=</span> nums<span>[</span>i<span>]</span><span>;</span> j <span>></span> <span>0</span><span>;</span> j<span>--</span><span>)</span> <span>{</span>
        ans<span>[</span>count<span>++</span><span>]</span> <span>=</span> nums<span>[</span>i <span>+</span> <span>1</span><span>]</span><span>;</span>
      <span>}</span>
    <span>}</span>

    <span>return</span> ans<span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br></div></div>]]></content>
    <author>
      <name>1313. Decompress Run Length Encoded List</name>
    </author>
    <category term="Java"/>
    <contributor>
      <name>1313. Decompress Run Length Encoded List</name>
    </contributor>
    <rights>Copyright by 1313. Decompress Run Length Encoded List</rights>
  </entry>
  <entry>
    <title type="html">lizncu</title>
    <id>https://leetcode.innenu.com/1313-Decompress-Run-Length-Encoded-List/lizncu/</id>
    <link href="https://leetcode.innenu.com/1313-Decompress-Run-Length-Encoded-List/lizncu/"/>
    <updated>2021-02-17T16:18:42.577Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>decompressRLElist</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>)</span> <span>{</span>
    <span>int</span> mount <span>=</span> <span>0</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i <span>=</span> i <span>+</span> <span>2</span><span>)</span> <span>{</span>
      mount <span>+=</span> nums<span>[</span>i<span>]</span><span>;</span>
    <span>}</span>

    <span>int</span><span>[</span><span>]</span> ans <span>=</span> <span>new</span> <span>int</span><span>[</span>mount<span>]</span><span>;</span>

    <span>int</span> count <span>=</span> <span>0</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>+</span> <span>1</span> <span>&lt;</span> nums<span>.</span>length<span>;</span> i <span>=</span> i <span>+</span> <span>2</span><span>)</span> <span>{</span>
      <span>for</span> <span>(</span><span>int</span> j <span>=</span> nums<span>[</span>i<span>]</span><span>;</span> j <span>></span> <span>0</span><span>;</span> j<span>--</span><span>)</span> <span>{</span>
        ans<span>[</span>count<span>++</span><span>]</span> <span>=</span> nums<span>[</span>i <span>+</span> <span>1</span><span>]</span><span>;</span>
      <span>}</span>
    <span>}</span>

    <span>return</span> ans<span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br></div></div>]]></content>
    <author>
      <name>1313. Decompress Run Length Encoded List</name>
    </author>
    <category term="lizncu"/>
    <contributor>
      <name>1313. Decompress Run Length Encoded List</name>
    </contributor>
    <rights>Copyright by 1313. Decompress Run Length Encoded List</rights>
  </entry>
  <entry>
    <title type="html">1313. Decompress Run-Length Encoded List</title>
    <id>https://leetcode.innenu.com/1313-Decompress-Run-Length-Encoded-List/</id>
    <link href="https://leetcode.innenu.com/1313-Decompress-Run-Length-Encoded-List/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_1313-decompress-run-length-encoded-list"> <a href="https://leetcode.com/problems/decompress-run-length-encoded-list/" target="_blank" rel="noopener noreferrer">1313. Decompress Run-Length Encoded List</a></h1>
<p>We are given a list <code>nums</code> of integers representing a list compressed with run-length encoding.</p>
<p>Consider each adjacent pair of elements <code>[freq, val] = [nums[2*i], nums[2*i+1]]</code> (with <code>i &gt;= 0</code>). For each such pair, there are <code>freq</code> elements with value <code>val</code> concatenated in a sublist. Concatenate all the sublists from left to right to generate the decompressed list.</p>
<p>Return the decompressed list.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> nums = [1,2,3,4]</p>
<p><strong>Output:</strong> [2,4,4,4]</p>
<p><strong>Explanation:</strong> The first pair [1,2] means we have freq = 1 and val = 2 so we generate the array [2].
The second pair [3,4] means we have freq = 3 and val = 4 so we generate [4,4,4].
At the end the concatenation [2] + [4,4,4] is [2,4,4,4].</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> nums = [1,1,2,3]</p>
<p><strong>Output:</strong> [1,3,3]</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>2 &lt;= nums.length &lt;= 100</code></li>
<li><code>nums.length % 2 == 0</code></li>
<li><code>1 &lt;= nums[i] &lt;= 100</code></li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">Java</title>
    <id>https://leetcode.innenu.com/1317-Convert-Integer-to-the-Sum-of-Two-No-Zero-Integers/Java/</id>
    <link href="https://leetcode.innenu.com/1317-Convert-Integer-to-the-Sum-of-Two-No-Zero-Integers/Java/"/>
    <updated>2021-02-17T16:18:42.578Z</updated>
    <content type="html"><![CDATA[<h2 id="lizncu"> lizncu</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>getNoZeroIntegers</span><span>(</span><span>int</span> n<span>)</span> <span>{</span>
    <span>int</span> i <span>=</span> <span>1</span><span>;</span>
    <span>int</span> j <span>=</span> n <span>-</span> i<span>;</span>
    <span>while</span> <span>(</span><span>true</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span><span>!</span><span>String</span><span>.</span><span>valueOf</span><span>(</span>i<span>)</span><span>.</span><span>contains</span><span>(</span><span>"0"</span><span>)</span> <span>&amp;&amp;</span> <span>!</span><span>String</span><span>.</span><span>valueOf</span><span>(</span>j<span>)</span><span>.</span><span>contains</span><span>(</span><span>"0"</span><span>)</span><span>)</span>
        <span>return</span> <span>new</span> <span>int</span><span>[</span><span>]</span> <span>{</span>i<span>,</span> j<span>}</span><span>;</span>
      i <span>+=</span> <span>1</span><span>;</span>
      j <span>=</span> n <span>-</span> i<span>;</span>
    <span>}</span>
  <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div>]]></content>
    <author>
      <name>1317. Convert Integer to the Sum of Two No Zero Integers</name>
    </author>
    <category term="Java"/>
    <contributor>
      <name>1317. Convert Integer to the Sum of Two No Zero Integers</name>
    </contributor>
    <rights>Copyright by 1317. Convert Integer to the Sum of Two No Zero Integers</rights>
  </entry>
  <entry>
    <title type="html">lizncu</title>
    <id>https://leetcode.innenu.com/1317-Convert-Integer-to-the-Sum-of-Two-No-Zero-Integers/lizncu/</id>
    <link href="https://leetcode.innenu.com/1317-Convert-Integer-to-the-Sum-of-Two-No-Zero-Integers/lizncu/"/>
    <updated>2021-02-17T16:18:42.578Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>getNoZeroIntegers</span><span>(</span><span>int</span> n<span>)</span> <span>{</span>
    <span>int</span> i <span>=</span> <span>1</span><span>;</span>
    <span>int</span> j <span>=</span> n <span>-</span> i<span>;</span>
    <span>while</span> <span>(</span><span>true</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span><span>!</span><span>String</span><span>.</span><span>valueOf</span><span>(</span>i<span>)</span><span>.</span><span>contains</span><span>(</span><span>"0"</span><span>)</span> <span>&amp;&amp;</span> <span>!</span><span>String</span><span>.</span><span>valueOf</span><span>(</span>j<span>)</span><span>.</span><span>contains</span><span>(</span><span>"0"</span><span>)</span><span>)</span>
        <span>return</span> <span>new</span> <span>int</span><span>[</span><span>]</span> <span>{</span>i<span>,</span> j<span>}</span><span>;</span>
      i <span>+=</span> <span>1</span><span>;</span>
      j <span>=</span> n <span>-</span> i<span>;</span>
    <span>}</span>
  <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div>]]></content>
    <author>
      <name>1317. Convert Integer to the Sum of Two No Zero Integers</name>
    </author>
    <category term="lizncu"/>
    <contributor>
      <name>1317. Convert Integer to the Sum of Two No Zero Integers</name>
    </contributor>
    <rights>Copyright by 1317. Convert Integer to the Sum of Two No Zero Integers</rights>
  </entry>
  <entry>
    <title type="html">1317. Convert Integer to the Sum of Two No-Zero Integers</title>
    <id>https://leetcode.innenu.com/1317-Convert-Integer-to-the-Sum-of-Two-No-Zero-Integers/</id>
    <link href="https://leetcode.innenu.com/1317-Convert-Integer-to-the-Sum-of-Two-No-Zero-Integers/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_1317-convert-integer-to-the-sum-of-two-no-zero-integers"> <a href="https://leetcode.com/problems/convert-integer-to-the-sum-of-two-no-zero-integers/" target="_blank" rel="noopener noreferrer">1317. Convert Integer to the Sum of Two No-Zero Integers</a></h1>
<p>Given an integer <code>n</code>. No-Zero integer is a positive integer which <strong>doesn't contain any 0</strong> in its decimal representation.</p>
<p>Return <em>a list of two integers</em> <code>[A, B]</code> where:</p>
<ul>
<li><code>A</code> and <code>B</code> are No-Zero integers.</li>
<li><span><span><i>Not supported content</i></span><span aria-hidden="true"><span><span style="height:0.76666em;vertical-align:-0.08333em;"></span><span>A</span><span style="margin-right:0.2222222222222222em;"></span><span>+</span><span style="margin-right:0.2222222222222222em;"></span></span><span><span style="height:0.68333em;vertical-align:0em;"></span><span style="margin-right:0.05017em;">B</span><span style="margin-right:0.2777777777777778em;"></span><span>=</span><span style="margin-right:0.2777777777777778em;"></span></span><span><span style="height:0.43056em;vertical-align:0em;"></span><span>n</span></span></span></span></li>
</ul>
<p>It's guarateed that there is at least one valid solution. If there are many valid solutions you can return any of them.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> n = 2</p>
<p><strong>Output:</strong> [1,1]</p>
<p><strong>Explanation:</strong> <span><span><i>Not supported content</i></span><span aria-hidden="true"><span><span style="height:0.68333em;vertical-align:0em;"></span><span>A</span><span style="margin-right:0.2777777777777778em;"></span><span>=</span><span style="margin-right:0.2777777777777778em;"></span></span><span><span style="height:0.64444em;vertical-align:0em;"></span><span>1</span></span></span></span>, $B = 1. <span><span><i>Not supported content</i></span><span aria-hidden="true"><span><span style="height:0.76666em;vertical-align:-0.08333em;"></span><span>A</span><span style="margin-right:0.2222222222222222em;"></span><span>+</span><span style="margin-right:0.2222222222222222em;"></span></span><span><span style="height:0.68333em;vertical-align:0em;"></span><span style="margin-right:0.05017em;">B</span><span style="margin-right:0.2777777777777778em;"></span><span>=</span><span style="margin-right:0.2777777777777778em;"></span></span><span><span style="height:0.43056em;vertical-align:0em;"></span><span>n</span></span></span></span> and both <span><span><i>Not supported content</i></span><span aria-hidden="true"><span><span style="height:0.68333em;vertical-align:0em;"></span><span>A</span></span></span></span> and <span><span><i>Not supported content</i></span><span aria-hidden="true"><span><span style="height:0.68333em;vertical-align:0em;"></span><span style="margin-right:0.05017em;">B</span></span></span></span> don't contain any <span><span><i>Not supported content</i></span><span aria-hidden="true"><span><span style="height:0.64444em;vertical-align:0em;"></span><span>0</span></span></span></span> in their decimal representation.</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> n = 11</p>
<p><strong>Output:</strong> [2,9]</p>
<p><strong>Example 3:</strong></p>
<p><strong>Input:</strong> n = 10000</p>
<p><strong>Output:</strong> [1,9999]</p>
<p><strong>Example 4:</strong></p>
<p><strong>Input:</strong> n = 69</p>
<p><strong>Output:</strong> [1,68]</p>
<p><strong>Example 5:</strong></p>
<p><strong>Input:</strong> n = 1010</p>
<p><strong>Output:</strong> [11,999]</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><span><span><i>Not supported content</i></span><span aria-hidden="true"><span><span style="height:0.78041em;vertical-align:-0.13597em;"></span><span>2</span><span style="margin-right:0.2777777777777778em;"></span><span>≤</span><span style="margin-right:0.2777777777777778em;"></span></span><span><span style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span>n</span><span style="margin-right:0.2777777777777778em;"></span><span>≤</span><span style="margin-right:0.2777777777777778em;"></span></span><span><span style="height:0.8141079999999999em;vertical-align:0em;"></span><span>1</span><span><span>0</span><span><span><span><span style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>4</span></span></span></span></span></span></span></span></span></span></span></li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">Java</title>
    <id>https://leetcode.innenu.com/1323-Maximum-69-Number/Java/</id>
    <link href="https://leetcode.innenu.com/1323-Maximum-69-Number/Java/"/>
    <updated>2021-02-17T16:18:42.588Z</updated>
    <content type="html"><![CDATA[<h2 id="lizncu"> lizncu</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span> <span>maximum69Number</span><span>(</span><span>int</span> num<span>)</span> <span>{</span>
    <span>return</span> <span>Integer</span><span>.</span><span>valueOf</span><span>(</span><span>String</span><span>.</span><span>valueOf</span><span>(</span>num<span>)</span><span>.</span><span>replaceFirst</span><span>(</span><span>"6"</span><span>,</span> <span>"9"</span><span>)</span><span>)</span><span>;</span>
  <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div>]]></content>
    <author>
      <name>1323. Maximum 69 Number</name>
    </author>
    <category term="Java"/>
    <contributor>
      <name>1323. Maximum 69 Number</name>
    </contributor>
    <rights>Copyright by 1323. Maximum 69 Number</rights>
  </entry>
  <entry>
    <title type="html">lizncu</title>
    <id>https://leetcode.innenu.com/1323-Maximum-69-Number/lizncu/</id>
    <link href="https://leetcode.innenu.com/1323-Maximum-69-Number/lizncu/"/>
    <updated>2021-02-17T16:18:42.588Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span> <span>maximum69Number</span><span>(</span><span>int</span> num<span>)</span> <span>{</span>
    <span>return</span> <span>Integer</span><span>.</span><span>valueOf</span><span>(</span><span>String</span><span>.</span><span>valueOf</span><span>(</span>num<span>)</span><span>.</span><span>replaceFirst</span><span>(</span><span>"6"</span><span>,</span> <span>"9"</span><span>)</span><span>)</span><span>;</span>
  <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div>]]></content>
    <author>
      <name>1323. Maximum 69 Number</name>
    </author>
    <category term="lizncu"/>
    <contributor>
      <name>1323. Maximum 69 Number</name>
    </contributor>
    <rights>Copyright by 1323. Maximum 69 Number</rights>
  </entry>
  <entry>
    <title type="html">1323. Maximum 69 Number</title>
    <id>https://leetcode.innenu.com/1323-Maximum-69-Number/</id>
    <link href="https://leetcode.innenu.com/1323-Maximum-69-Number/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_1323-maximum-69-number"> <a href="https://leetcode.com/problems/maximum-69-number/" target="_blank" rel="noopener noreferrer">1323. Maximum 69 Number</a></h1>
<p>Given a positive integer <code>num</code> consisting only of digits 6 and 9.</p>
<p>Return the maximum number you can get by changing <strong>at most</strong> one digit (6 becomes 9, and 9 becomes 6).</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> num = 9669</p>
<p><strong>Output:</strong> 9969</p>
<p><strong>Explanation:</strong></p>
<p>Changing the first digit results in 6669.</p>
<p>Changing the second digit results in 9969.</p>
<p>Changing the third digit results in 9699.</p>
<p>Changing the fourth digit results in 9666.</p>
<p>The maximum number is 9969.</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> num = 9996</p>
<p><strong>Output:</strong> 9999</p>
<p><strong>Explanation:</strong> Changing the last digit 6 to 9 results in the maximum number.</p>
<p><strong>Example 3:</strong></p>
<p><strong>Input:</strong> num = 9999</p>
<p><strong>Output:</strong> 9999</p>
<p><strong>Explanation:</strong> It is better not to apply any change.</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li>1 &lt;= num &lt;= 10<sup>4</sup></li>
<li><code>num</code>'s digits are 6 or 9.</li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">Java</title>
    <id>https://leetcode.innenu.com/1342-Number-of-Steps-to-Reduce-a-Number-to-Zero/Java/</id>
    <link href="https://leetcode.innenu.com/1342-Number-of-Steps-to-Reduce-a-Number-to-Zero/Java/"/>
    <updated>2021-02-17T16:18:42.589Z</updated>
    <content type="html"><![CDATA[<h2 id="lizncu"> lizncu</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span> <span>numberOfSteps</span><span>(</span><span>int</span> num<span>)</span> <span>{</span>
    <span>int</span> count <span>=</span> <span>0</span><span>;</span>

    <span>while</span> <span>(</span>num <span>!=</span> <span>0</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>num <span>%</span> <span>2</span> <span>==</span> <span>0</span><span>)</span> <span>{</span>
        num <span>/=</span> <span>2</span><span>;</span>
      <span>}</span> <span>else</span> <span>{</span>
        num<span>--</span><span>;</span>
      <span>}</span>
      count<span>++</span><span>;</span>
    <span>}</span>

    <span>return</span> count<span>;</span>
  <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>]]></content>
    <author>
      <name>1342. Number of Steps to Reduce a Number to Zero</name>
    </author>
    <category term="Java"/>
    <contributor>
      <name>1342. Number of Steps to Reduce a Number to Zero</name>
    </contributor>
    <rights>Copyright by 1342. Number of Steps to Reduce a Number to Zero</rights>
  </entry>
  <entry>
    <title type="html">lizncu</title>
    <id>https://leetcode.innenu.com/1342-Number-of-Steps-to-Reduce-a-Number-to-Zero/lizncu/</id>
    <link href="https://leetcode.innenu.com/1342-Number-of-Steps-to-Reduce-a-Number-to-Zero/lizncu/"/>
    <updated>2021-02-17T16:18:42.589Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span> <span>numberOfSteps</span><span>(</span><span>int</span> num<span>)</span> <span>{</span>
    <span>int</span> count <span>=</span> <span>0</span><span>;</span>

    <span>while</span> <span>(</span>num <span>!=</span> <span>0</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>num <span>%</span> <span>2</span> <span>==</span> <span>0</span><span>)</span> <span>{</span>
        num <span>/=</span> <span>2</span><span>;</span>
      <span>}</span> <span>else</span> <span>{</span>
        num<span>--</span><span>;</span>
      <span>}</span>
      count<span>++</span><span>;</span>
    <span>}</span>

    <span>return</span> count<span>;</span>
  <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>]]></content>
    <author>
      <name>1342. Number of Steps to Reduce a Number to Zero</name>
    </author>
    <category term="lizncu"/>
    <contributor>
      <name>1342. Number of Steps to Reduce a Number to Zero</name>
    </contributor>
    <rights>Copyright by 1342. Number of Steps to Reduce a Number to Zero</rights>
  </entry>
  <entry>
    <title type="html">1342. Number of Steps to Reduce a Number to Zero</title>
    <id>https://leetcode.innenu.com/1342-Number-of-Steps-to-Reduce-a-Number-to-Zero/</id>
    <link href="https://leetcode.innenu.com/1342-Number-of-Steps-to-Reduce-a-Number-to-Zero/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_1342-number-of-steps-to-reduce-a-number-to-zero"> <a href="https://leetcode.com/problems/number-of-steps-to-reduce-a-number-to-zero/" target="_blank" rel="noopener noreferrer">1342. Number of Steps to Reduce a Number to Zero</a></h1>
<p>Given a non-negative integer <code>num</code>, return the number of steps to reduce it to zero. If the current number is even, you have to divide it by 2, otherwise, you have to subtract 1 from it.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> num = 14</p>
<p><strong>Output:</strong> 6</p>
<p><strong>Explanation:</strong></p>
<p>Step 1: 14 is even; divide by 2 and obtain 7.</p>
<p>Step 2: 7 is odd; subtract 1 and obtain 6.</p>
<p>Step 3: 6 is even; divide by 2 and obtain 3.</p>
<p>Step 4: 3 is odd; subtract 1 and obtain 2.</p>
<p>Step 5: 2 is even; divide by 2 and obtain 1.</p>
<p>Step 6: 1 is odd; subtract 1 and obtain 0.</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> num = 8</p>
<p><strong>Output:</strong> 4</p>
<p><strong>Explanation:</strong></p>
<p>Step 1: 8 is even; divide by 2 and obtain 4.</p>
<p>Step 2: 4 is even; divide by 2 and obtain 2.</p>
<p>Step 3: 2 is even; divide by 2 and obtain 1.</p>
<p>Step 4: 1 is odd; subtract 1 and obtain 0.</p>
<p><strong>Example 3:</strong></p>
<p><strong>Input:</strong> num = 123</p>
<p><strong>Output:</strong> 12</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>0 &lt;= num &lt;= 10^6</code></li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">C++</title>
    <id>https://leetcode.innenu.com/136-Single-Number/C++/</id>
    <link href="https://leetcode.innenu.com/136-Single-Number/C++/"/>
    <updated>2021-02-17T16:18:42.590Z</updated>
    <content type="html"><![CDATA[<h2 id="sqm"> sqm</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>
<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>int</span> <span>singleNumber</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums<span>)</span> <span>{</span>
    <span>sort</span><span>(</span>nums<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> nums<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>
    <span>int</span> tmp<span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i <span>+=</span> <span>2</span><span>)</span> <span>{</span>
      tmp <span>=</span> nums<span>[</span>i<span>]</span><span>;</span>
      <span>if</span> <span>(</span>i <span>==</span> nums<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>)</span> <span>return</span> tmp<span>;</span>
      <span>if</span> <span>(</span>tmp <span>!=</span> nums<span>[</span>i <span>+</span> <span>1</span><span>]</span><span>)</span> <span>return</span> tmp<span>;</span>
    <span>}</span>
    <span>return</span> <span>-</span><span>1</span><span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br></div></div>]]></content>
    <author>
      <name>136. Single Number</name>
    </author>
    <category term="C++"/>
    <contributor>
      <name>136. Single Number</name>
    </contributor>
    <rights>Copyright by 136. Single Number</rights>
  </entry>
  <entry>
    <title type="html">136. Single Number</title>
    <id>https://leetcode.innenu.com/136-Single-Number/</id>
    <link href="https://leetcode.innenu.com/136-Single-Number/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_136-single-number"> <a href="https://leetcode.com/problems/single-number/" target="_blank" rel="noopener noreferrer">136. Single Number</a></h1>
<p>Given a <strong>non-empty</strong> array of integers <code>nums</code>, every element appears <em>twice</em> except for one. Find that single one.</p>
<p><strong>Follow up:</strong> Could you implement a solution with a linear runtime complexity and without using extra memory?</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> nums = [2,2,1]</p>
<p><strong>Output:</strong> 1</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> nums = [4,1,2,1,2]</p>
<p><strong>Output:</strong> 4</p>
<p><strong>Example 3:</strong></p>
<p><strong>Input:</strong> nums = [1]</p>
<p><strong>Output:</strong> 1</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>1 &lt;= nums.length &lt;= 3 * 104</code></li>
<li><code>-3 * 104 &lt;= nums[i] &lt;= 3 * 104</code></li>
<li>Each element in the array appears twice except for one element which appears only once.</li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">sqm</title>
    <id>https://leetcode.innenu.com/136-Single-Number/sqm/</id>
    <link href="https://leetcode.innenu.com/136-Single-Number/sqm/"/>
    <updated>2021-02-17T16:18:42.591Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>
<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>int</span> <span>singleNumber</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums<span>)</span> <span>{</span>
    <span>sort</span><span>(</span>nums<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> nums<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>
    <span>int</span> tmp<span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i <span>+=</span> <span>2</span><span>)</span> <span>{</span>
      tmp <span>=</span> nums<span>[</span>i<span>]</span><span>;</span>
      <span>if</span> <span>(</span>i <span>==</span> nums<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>)</span> <span>return</span> tmp<span>;</span>
      <span>if</span> <span>(</span>tmp <span>!=</span> nums<span>[</span>i <span>+</span> <span>1</span><span>]</span><span>)</span> <span>return</span> tmp<span>;</span>
    <span>}</span>
    <span>return</span> <span>-</span><span>1</span><span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br></div></div>]]></content>
    <author>
      <name>136. Single Number</name>
    </author>
    <category term="sqm"/>
    <contributor>
      <name>136. Single Number</name>
    </contributor>
    <rights>Copyright by 136. Single Number</rights>
  </entry>
  <entry>
    <title type="html">C++</title>
    <id>https://leetcode.innenu.com/1365-How-Many-Numbers-Are-Smaller-Than-the-Current-Number/C++/</id>
    <link href="https://leetcode.innenu.com/1365-How-Many-Numbers-Are-Smaller-Than-the-Current-Number/C++/"/>
    <updated>2021-02-17T16:18:42.591Z</updated>
    <content type="html"><![CDATA[<h2 id="sqm"> sqm</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>
<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  vector<span>&lt;</span><span>int</span><span>></span> <span>smallerNumbersThanCurrent</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums<span>)</span> <span>{</span>
    vector<span>&lt;</span><span>int</span><span>></span> ans<span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>int</span> count <span>=</span> <span>0</span><span>;</span>
      <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>0</span><span>;</span> j <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> j<span>++</span><span>)</span> <span>{</span>
        <span>if</span> <span>(</span>nums<span>[</span>j<span>]</span> <span>&lt;</span> nums<span>[</span>i<span>]</span><span>)</span> count<span>++</span><span>;</span>
      <span>}</span>
      ans<span>.</span><span>push_back</span><span>(</span>count<span>)</span><span>;</span>
    <span>}</span>
    <span>return</span> ans<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div>]]></content>
    <author>
      <name>1365. How Many Numbers Are Smaller Than the Current Number</name>
    </author>
    <category term="C++"/>
    <contributor>
      <name>1365. How Many Numbers Are Smaller Than the Current Number</name>
    </contributor>
    <rights>Copyright by 1365. How Many Numbers Are Smaller Than the Current Number</rights>
  </entry>
  <entry>
    <title type="html">Java</title>
    <id>https://leetcode.innenu.com/1365-How-Many-Numbers-Are-Smaller-Than-the-Current-Number/Java/</id>
    <link href="https://leetcode.innenu.com/1365-How-Many-Numbers-Are-Smaller-Than-the-Current-Number/Java/"/>
    <updated>2021-02-17T16:18:42.592Z</updated>
    <content type="html"><![CDATA[<h2 id="lizncu"> lizncu</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>smallerNumbersThanCurrent</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>)</span> <span>{</span>
    <span>int</span><span>[</span><span>]</span> count <span>=</span> <span>new</span> <span>int</span><span>[</span>nums<span>.</span>length<span>]</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>0</span><span>;</span> j <span>&lt;</span> nums<span>.</span>length<span>;</span> j<span>++</span><span>)</span> <span>{</span>
        <span>if</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>></span> nums<span>[</span>j<span>]</span><span>)</span> <span>{</span>
          count<span>[</span>i<span>]</span><span>++</span><span>;</span>
        <span>}</span>
      <span>}</span>
    <span>}</span>

    <span>return</span> count<span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>]]></content>
    <author>
      <name>1365. How Many Numbers Are Smaller Than the Current Number</name>
    </author>
    <category term="Java"/>
    <contributor>
      <name>1365. How Many Numbers Are Smaller Than the Current Number</name>
    </contributor>
    <rights>Copyright by 1365. How Many Numbers Are Smaller Than the Current Number</rights>
  </entry>
  <entry>
    <title type="html">lizncu</title>
    <id>https://leetcode.innenu.com/1365-How-Many-Numbers-Are-Smaller-Than-the-Current-Number/lizncu/</id>
    <link href="https://leetcode.innenu.com/1365-How-Many-Numbers-Are-Smaller-Than-the-Current-Number/lizncu/"/>
    <updated>2021-02-17T16:18:42.592Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>smallerNumbersThanCurrent</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>)</span> <span>{</span>
    <span>int</span><span>[</span><span>]</span> count <span>=</span> <span>new</span> <span>int</span><span>[</span>nums<span>.</span>length<span>]</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>0</span><span>;</span> j <span>&lt;</span> nums<span>.</span>length<span>;</span> j<span>++</span><span>)</span> <span>{</span>
        <span>if</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>></span> nums<span>[</span>j<span>]</span><span>)</span> <span>{</span>
          count<span>[</span>i<span>]</span><span>++</span><span>;</span>
        <span>}</span>
      <span>}</span>
    <span>}</span>

    <span>return</span> count<span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>]]></content>
    <author>
      <name>1365. How Many Numbers Are Smaller Than the Current Number</name>
    </author>
    <category term="lizncu"/>
    <contributor>
      <name>1365. How Many Numbers Are Smaller Than the Current Number</name>
    </contributor>
    <rights>Copyright by 1365. How Many Numbers Are Smaller Than the Current Number</rights>
  </entry>
  <entry>
    <title type="html">1365. How Many Numbers Are Smaller Than the Current Number</title>
    <id>https://leetcode.innenu.com/1365-How-Many-Numbers-Are-Smaller-Than-the-Current-Number/</id>
    <link href="https://leetcode.innenu.com/1365-How-Many-Numbers-Are-Smaller-Than-the-Current-Number/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_1365-how-many-numbers-are-smaller-than-the-current-number"> <a href="https://leetcode.com/problems/how-many-numbers-are-smaller-than-the-current-number/" target="_blank" rel="noopener noreferrer">1365. How Many Numbers Are Smaller Than the Current Number</a></h1>
<p>Given the array <code>nums</code>, for each <code>nums[i]</code> find out how many numbers in the array are smaller than it. That is, for each <code>nums[i]</code> you have to count the number of valid <code>j's</code> such that <code>j != i</code> <strong>and</strong> <code>nums[j] &lt; nums[i]</code>.</p>
<p>Return the answer in an array.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> nums = [8,1,2,2,3]</p>
<p><strong>Output:</strong> [4,0,1,1,3]</p>
<p><strong>Explanation:</strong></p>
<ul>
<li>
<p>For nums[0]=8 there exist four smaller numbers than it (1, 2, 2 and 3).</p>
</li>
<li>
<p>For nums[1]=1 does not exist any smaller number than it.</p>
</li>
<li>
<p>For nums[2]=2 there exist one smaller number than it (1).</p>
</li>
<li>
<p>For nums[3]=2 there exist one smaller number than it (1).</p>
</li>
<li>
<p>For nums[4]=3 there exist three smaller numbers than it (1, 2 and 2).</p>
</li>
</ul>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> nums = [6,5,4,8]</p>
<p><strong>Output:</strong> [2,1,0,3]</p>
<p><strong>Example 3:</strong></p>
<p><strong>Input:</strong> nums = [7,7,7,7]</p>
<p><strong>Output:</strong> [0,0,0,0]</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>2 &lt;= nums.length &lt;= 500</code></li>
<li><code>0 &lt;= nums[i] &lt;= 100</code></li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">sqm</title>
    <id>https://leetcode.innenu.com/1365-How-Many-Numbers-Are-Smaller-Than-the-Current-Number/sqm/</id>
    <link href="https://leetcode.innenu.com/1365-How-Many-Numbers-Are-Smaller-Than-the-Current-Number/sqm/"/>
    <updated>2021-02-17T16:18:42.593Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>
<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  vector<span>&lt;</span><span>int</span><span>></span> <span>smallerNumbersThanCurrent</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums<span>)</span> <span>{</span>
    vector<span>&lt;</span><span>int</span><span>></span> ans<span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>int</span> count <span>=</span> <span>0</span><span>;</span>
      <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>0</span><span>;</span> j <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> j<span>++</span><span>)</span> <span>{</span>
        <span>if</span> <span>(</span>nums<span>[</span>j<span>]</span> <span>&lt;</span> nums<span>[</span>i<span>]</span><span>)</span> count<span>++</span><span>;</span>
      <span>}</span>
      ans<span>.</span><span>push_back</span><span>(</span>count<span>)</span><span>;</span>
    <span>}</span>
    <span>return</span> ans<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div>]]></content>
    <author>
      <name>1365. How Many Numbers Are Smaller Than the Current Number</name>
    </author>
    <category term="sqm"/>
    <contributor>
      <name>1365. How Many Numbers Are Smaller Than the Current Number</name>
    </contributor>
    <rights>Copyright by 1365. How Many Numbers Are Smaller Than the Current Number</rights>
  </entry>
  <entry>
    <title type="html">Java</title>
    <id>https://leetcode.innenu.com/1389-Create-Target-Array-in-the-Given-Order/Java/</id>
    <link href="https://leetcode.innenu.com/1389-Create-Target-Array-in-the-Given-Order/Java/"/>
    <updated>2021-02-17T16:18:42.593Z</updated>
    <content type="html"><![CDATA[<h2 id="lizncu"> lizncu</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>createTargetArray</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>,</span> <span>int</span><span>[</span><span>]</span> index<span>)</span> <span>{</span>
    <span>int</span><span>[</span><span>]</span> target <span>=</span> <span>new</span> <span>int</span><span>[</span>index<span>.</span>length<span>]</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> index<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>index<span>[</span>i<span>]</span> <span>>=</span> i<span>)</span> <span>{</span>
        target<span>[</span>index<span>[</span>i<span>]</span><span>]</span> <span>=</span> nums<span>[</span>i<span>]</span><span>;</span>
      <span>}</span> <span>else</span> <span>{</span>
        <span>for</span> <span>(</span><span>int</span> j <span>=</span> nums<span>.</span>length <span>-</span> <span>1</span><span>;</span> j <span>></span> index<span>[</span>i<span>]</span><span>;</span> j<span>--</span><span>)</span> <span>{</span>
          target<span>[</span>j<span>]</span> <span>=</span> target<span>[</span>j <span>-</span> <span>1</span><span>]</span><span>;</span>
        <span>}</span>
        target<span>[</span>index<span>[</span>i<span>]</span><span>]</span> <span>=</span> nums<span>[</span>i<span>]</span><span>;</span>
      <span>}</span>
    <span>}</span>

    <span>return</span> target<span>;</span>
  <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div>]]></content>
    <author>
      <name>1389. Create Target Array in the Given Order</name>
    </author>
    <category term="Java"/>
    <contributor>
      <name>1389. Create Target Array in the Given Order</name>
    </contributor>
    <rights>Copyright by 1389. Create Target Array in the Given Order</rights>
  </entry>
  <entry>
    <title type="html">lizncu</title>
    <id>https://leetcode.innenu.com/1389-Create-Target-Array-in-the-Given-Order/lizncu/</id>
    <link href="https://leetcode.innenu.com/1389-Create-Target-Array-in-the-Given-Order/lizncu/"/>
    <updated>2021-02-17T16:18:42.594Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>createTargetArray</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>,</span> <span>int</span><span>[</span><span>]</span> index<span>)</span> <span>{</span>
    <span>int</span><span>[</span><span>]</span> target <span>=</span> <span>new</span> <span>int</span><span>[</span>index<span>.</span>length<span>]</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> index<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>index<span>[</span>i<span>]</span> <span>>=</span> i<span>)</span> <span>{</span>
        target<span>[</span>index<span>[</span>i<span>]</span><span>]</span> <span>=</span> nums<span>[</span>i<span>]</span><span>;</span>
      <span>}</span> <span>else</span> <span>{</span>
        <span>for</span> <span>(</span><span>int</span> j <span>=</span> nums<span>.</span>length <span>-</span> <span>1</span><span>;</span> j <span>></span> index<span>[</span>i<span>]</span><span>;</span> j<span>--</span><span>)</span> <span>{</span>
          target<span>[</span>j<span>]</span> <span>=</span> target<span>[</span>j <span>-</span> <span>1</span><span>]</span><span>;</span>
        <span>}</span>
        target<span>[</span>index<span>[</span>i<span>]</span><span>]</span> <span>=</span> nums<span>[</span>i<span>]</span><span>;</span>
      <span>}</span>
    <span>}</span>

    <span>return</span> target<span>;</span>
  <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div>]]></content>
    <author>
      <name>1389. Create Target Array in the Given Order</name>
    </author>
    <category term="lizncu"/>
    <contributor>
      <name>1389. Create Target Array in the Given Order</name>
    </contributor>
    <rights>Copyright by 1389. Create Target Array in the Given Order</rights>
  </entry>
  <entry>
    <title type="html">1389. Create Target Array in the Given Order</title>
    <id>https://leetcode.innenu.com/1389-Create-Target-Array-in-the-Given-Order/</id>
    <link href="https://leetcode.innenu.com/1389-Create-Target-Array-in-the-Given-Order/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_1389-create-target-array-in-the-given-order"> <a href="https://leetcode.com/problems/create-target-array-in-the-given-order/" target="_blank" rel="noopener noreferrer">1389. Create Target Array in the Given Order</a></h1>
<p>Given two arrays of integers <code>nums</code> and <code>index</code>. Your task is to create <em>target</em> array under the following rules:</p>
<ul>
<li>Initially <em>target</em> array is empty.</li>
<li>From left to right read nums[i] and index[i], insert at index <code>index[i]</code> the value <code>nums[i]</code> in <em>target</em> array.</li>
<li>Repeat the previous step until there are no elements to read in <code>nums</code> and <code>index.</code></li>
</ul>
<p>Return the <em>target</em> array.</p>
<p>It is guaranteed that the insertion operations will be valid.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> nums = [0,1,2,3,4], index = [0,1,2,2,1]</p>
<p><strong>Output:</strong> [0,4,1,3,2]</p>
<p><strong>Explanation:</strong></p>
<table>
<thead>
<tr>
<th>nums</th>
<th>index</th>
<th>target</th>
</tr>
</thead>
<tbody>
<tr>
<td>0</td>
<td>0</td>
<td>[0]</td>
</tr>
<tr>
<td>1</td>
<td>1</td>
<td>[0,1]</td>
</tr>
<tr>
<td>2</td>
<td>2</td>
<td>[0,1,2]</td>
</tr>
<tr>
<td>3</td>
<td>2</td>
<td>[0,1,3,2]</td>
</tr>
<tr>
<td>4</td>
<td>1</td>
<td>[0,4,1,3,2]</td>
</tr>
</tbody>
</table>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> nums = [1,2,3,4,0], index = [0,1,2,3,0]</p>
<p><strong>Output:</strong> [0,1,2,3,4]</p>
<p><strong>Explanation:</strong></p>
<table>
<thead>
<tr>
<th>nums</th>
<th>index</th>
<th>target</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>0</td>
<td>[1]</td>
</tr>
<tr>
<td>2</td>
<td>1</td>
<td>[1,2]</td>
</tr>
<tr>
<td>3</td>
<td>2</td>
<td>[1,2,3]</td>
</tr>
<tr>
<td>4</td>
<td>3</td>
<td>[1,2,3,4]</td>
</tr>
<tr>
<td>0</td>
<td>0</td>
<td>[0,1,2,3,4]</td>
</tr>
</tbody>
</table>
<p><strong>Example 3:</strong></p>
<p><strong>Input:</strong> nums = [1], index = [0]</p>
<p><strong>Output:</strong> [1]</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>1 &lt;= nums.length, index.length &lt;= 100</code></li>
<li><code>nums.length == index.length</code></li>
<li><code>0 &lt;= nums[i] &lt;= 100</code></li>
<li><code>0 &lt;= index[i] &lt;= i</code></li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">C++</title>
    <id>https://leetcode.innenu.com/1431-Kids-With-the-Greatest-Number-of-Candies/C++/</id>
    <link href="https://leetcode.innenu.com/1431-Kids-With-the-Greatest-Number-of-Candies/C++/"/>
    <updated>2021-02-17T16:18:42.595Z</updated>
    <content type="html"><![CDATA[<h2 id="lmy"> lmy</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  vector<span>&lt;</span><span>bool</span><span>></span> <span>kidsWithCandies</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> candies<span>,</span> <span>int</span> extraCandies<span>)</span> <span>{</span>
    vector<span>&lt;</span><span>bool</span><span>></span> ans<span>;</span>
    <span>int</span> n <span>=</span> candies<span>[</span><span>0</span><span>]</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> candies<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> n <span>=</span> <span>max</span><span>(</span>n<span>,</span> candies<span>[</span>i<span>]</span><span>)</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> candies<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>candies<span>[</span>i<span>]</span> <span>+</span> extraCandies <span>>=</span> n<span>)</span>
        ans<span>.</span><span>push_back</span><span>(</span><span>true</span><span>)</span><span>;</span>
      <span>else</span>
        ans<span>.</span><span>push_back</span><span>(</span><span>false</span><span>)</span><span>;</span>
    <span>}</span>
    <span>return</span> ans<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div>]]></content>
    <author>
      <name>1431. Kids With the Greatest Number of Candies</name>
    </author>
    <category term="C++"/>
    <contributor>
      <name>1431. Kids With the Greatest Number of Candies</name>
    </contributor>
    <rights>Copyright by 1431. Kids With the Greatest Number of Candies</rights>
  </entry>
  <entry>
    <title type="html">Java</title>
    <id>https://leetcode.innenu.com/1431-Kids-With-the-Greatest-Number-of-Candies/Java/</id>
    <link href="https://leetcode.innenu.com/1431-Kids-With-the-Greatest-Number-of-Candies/Java/"/>
    <updated>2021-02-17T16:18:42.596Z</updated>
    <content type="html"><![CDATA[<h2 id="lizncu"> lizncu</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>List</span><span><span>&lt;</span><span>Boolean</span><span>></span></span> <span>kidsWithCandies</span><span>(</span><span>int</span><span>[</span><span>]</span> candies<span>,</span> <span>int</span> extraCandies<span>)</span> <span>{</span>
    <span>int</span> max <span>=</span> candies<span>[</span><span>0</span><span>]</span><span>;</span>

    <span>List</span><span><span>&lt;</span><span>Boolean</span><span>></span></span> answer <span>=</span> <span>new</span> <span>ArrayList</span><span><span>&lt;</span><span>Boolean</span><span>></span></span><span>(</span><span>)</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>1</span><span>;</span> i <span>&lt;</span> candies<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>max <span>&lt;</span> candies<span>[</span>i<span>]</span><span>)</span> <span>{</span>
        max <span>=</span> candies<span>[</span>i<span>]</span><span>;</span>
      <span>}</span>
    <span>}</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> candies<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>max <span>-</span> candies<span>[</span>i<span>]</span> <span>&lt;=</span> extraCandies<span>)</span> <span>{</span>
        answer<span>.</span><span>add</span><span>(</span><span>true</span><span>)</span><span>;</span>
      <span>}</span> <span>else</span> <span>{</span>
        answer<span>.</span><span>add</span><span>(</span><span>false</span><span>)</span><span>;</span>
      <span>}</span>
    <span>}</span>

    <span>return</span> answer<span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br></div></div>]]></content>
    <author>
      <name>1431. Kids With the Greatest Number of Candies</name>
    </author>
    <category term="Java"/>
    <contributor>
      <name>1431. Kids With the Greatest Number of Candies</name>
    </contributor>
    <rights>Copyright by 1431. Kids With the Greatest Number of Candies</rights>
  </entry>
  <entry>
    <title type="html">lizncu</title>
    <id>https://leetcode.innenu.com/1431-Kids-With-the-Greatest-Number-of-Candies/lizncu/</id>
    <link href="https://leetcode.innenu.com/1431-Kids-With-the-Greatest-Number-of-Candies/lizncu/"/>
    <updated>2021-02-17T16:18:42.596Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>List</span><span><span>&lt;</span><span>Boolean</span><span>></span></span> <span>kidsWithCandies</span><span>(</span><span>int</span><span>[</span><span>]</span> candies<span>,</span> <span>int</span> extraCandies<span>)</span> <span>{</span>
    <span>int</span> max <span>=</span> candies<span>[</span><span>0</span><span>]</span><span>;</span>

    <span>List</span><span><span>&lt;</span><span>Boolean</span><span>></span></span> answer <span>=</span> <span>new</span> <span>ArrayList</span><span><span>&lt;</span><span>Boolean</span><span>></span></span><span>(</span><span>)</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>1</span><span>;</span> i <span>&lt;</span> candies<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>max <span>&lt;</span> candies<span>[</span>i<span>]</span><span>)</span> <span>{</span>
        max <span>=</span> candies<span>[</span>i<span>]</span><span>;</span>
      <span>}</span>
    <span>}</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> candies<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>max <span>-</span> candies<span>[</span>i<span>]</span> <span>&lt;=</span> extraCandies<span>)</span> <span>{</span>
        answer<span>.</span><span>add</span><span>(</span><span>true</span><span>)</span><span>;</span>
      <span>}</span> <span>else</span> <span>{</span>
        answer<span>.</span><span>add</span><span>(</span><span>false</span><span>)</span><span>;</span>
      <span>}</span>
    <span>}</span>

    <span>return</span> answer<span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br></div></div>]]></content>
    <author>
      <name>1431. Kids With the Greatest Number of Candies</name>
    </author>
    <category term="lizncu"/>
    <contributor>
      <name>1431. Kids With the Greatest Number of Candies</name>
    </contributor>
    <rights>Copyright by 1431. Kids With the Greatest Number of Candies</rights>
  </entry>
  <entry>
    <title type="html">lmy</title>
    <id>https://leetcode.innenu.com/1431-Kids-With-the-Greatest-Number-of-Candies/lmy/</id>
    <link href="https://leetcode.innenu.com/1431-Kids-With-the-Greatest-Number-of-Candies/lmy/"/>
    <updated>2021-02-17T16:18:42.597Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  vector<span>&lt;</span><span>bool</span><span>></span> <span>kidsWithCandies</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> candies<span>,</span> <span>int</span> extraCandies<span>)</span> <span>{</span>
    vector<span>&lt;</span><span>bool</span><span>></span> ans<span>;</span>
    <span>int</span> n <span>=</span> candies<span>[</span><span>0</span><span>]</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> candies<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> n <span>=</span> <span>max</span><span>(</span>n<span>,</span> candies<span>[</span>i<span>]</span><span>)</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> candies<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>candies<span>[</span>i<span>]</span> <span>+</span> extraCandies <span>>=</span> n<span>)</span>
        ans<span>.</span><span>push_back</span><span>(</span><span>true</span><span>)</span><span>;</span>
      <span>else</span>
        ans<span>.</span><span>push_back</span><span>(</span><span>false</span><span>)</span><span>;</span>
    <span>}</span>
    <span>return</span> ans<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div>]]></content>
    <author>
      <name>1431. Kids With the Greatest Number of Candies</name>
    </author>
    <category term="lmy"/>
    <contributor>
      <name>1431. Kids With the Greatest Number of Candies</name>
    </contributor>
    <rights>Copyright by 1431. Kids With the Greatest Number of Candies</rights>
  </entry>
  <entry>
    <title type="html">1431. Kids With the Greatest Number of Candies</title>
    <id>https://leetcode.innenu.com/1431-Kids-With-the-Greatest-Number-of-Candies/</id>
    <link href="https://leetcode.innenu.com/1431-Kids-With-the-Greatest-Number-of-Candies/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_1431-kids-with-the-greatest-number-of-candies"> <a href="https://leetcode.com/problems/kids-with-the-greatest-number-of-candies/" target="_blank" rel="noopener noreferrer">1431. Kids With the Greatest Number of Candies</a></h1>
<p>Given the array <code>candies</code> and the integer <code>extraCandies</code>, where <code>candies[i]</code> represents the number of candies that the <strong><em>ith</em></strong> kid has.</p>
<p>For each kid check if there is a way to distribute <code>extraCandies</code> among the kids such that he or she can have the <strong>greatest</strong> number of candies among them. Notice that multiple kids can have the <strong>greatest</strong> number of candies.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> candies = [2,3,5,1,3], extraCandies = 3</p>
<p><strong>Output:</strong> [true,true,true,false,true]</p>
<p><strong>Explanation:</strong></p>
<ul>
<li>Kid 1 has 2 candies and if he or she receives all extra candies (3) will have 5 candies --- the greatest number of candies among the kids.</li>
<li>Kid 2 has 3 candies and if he or she receives at least 2 extra candies will have the greatest number of candies among the kids.</li>
<li>Kid 3 has 5 candies and this is already the greatest number of candies among the kids.</li>
<li>Kid 4 has 1 candy and even if he or she receives all extra candies will only have 4 candies.</li>
<li>Kid 5 has 3 candies and if he or she receives at least 2 extra candies will have the greatest number of candies among the kids.</li>
</ul>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> candies = [4,2,1,1,2], extraCandies = 1</p>
<p><strong>Output:</strong> [true,false,false,false,false]</p>
<p><strong>Explanation:</strong> There is only 1 extra candy, therefore only kid 1 will have the greatest number of candies among the kids regardless of who takes the extra candy.</p>
<p><strong>Example 3:</strong></p>
<p><strong>Input:</strong> candies = [12,1,12], extraCandies = 10</p>
<p><strong>Output:</strong> [true,false,true]</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>2 &lt;= candies.length &lt;= 100</code></li>
<li><code>1 &lt;= candies[i] &lt;= 100</code></li>
<li><code>1 &lt;= extraCandies &lt;= 50</code></li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">Java</title>
    <id>https://leetcode.innenu.com/1450-Number-of-Students-Doing-Homework-at-a-Given-Time/Java/</id>
    <link href="https://leetcode.innenu.com/1450-Number-of-Students-Doing-Homework-at-a-Given-Time/Java/"/>
    <updated>2021-02-17T16:18:42.598Z</updated>
    <content type="html"><![CDATA[<h2 id="lizncu"> lizncu</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span> <span>busyStudent</span><span>(</span><span>int</span><span>[</span><span>]</span> startTime<span>,</span> <span>int</span><span>[</span><span>]</span> endTime<span>,</span> <span>int</span> queryTime<span>)</span> <span>{</span>
    <span>int</span> count <span>=</span> <span>0</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> startTime<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      count <span>+=</span> startTime<span>[</span>i<span>]</span> <span>&lt;=</span> queryTime <span>&amp;&amp;</span> queryTime <span>&lt;=</span> endTime<span>[</span>i<span>]</span> <span>?</span> <span>1</span> <span>:</span> <span>0</span><span>;</span>
    <span>}</span>

    <span>return</span> count<span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div>]]></content>
    <author>
      <name>1450. Number of Students Doing Homework at a Given Time</name>
    </author>
    <category term="Java"/>
    <contributor>
      <name>1450. Number of Students Doing Homework at a Given Time</name>
    </contributor>
    <rights>Copyright by 1450. Number of Students Doing Homework at a Given Time</rights>
  </entry>
  <entry>
    <title type="html">lizncu</title>
    <id>https://leetcode.innenu.com/1450-Number-of-Students-Doing-Homework-at-a-Given-Time/lizncu/</id>
    <link href="https://leetcode.innenu.com/1450-Number-of-Students-Doing-Homework-at-a-Given-Time/lizncu/"/>
    <updated>2021-02-17T16:18:42.599Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span> <span>busyStudent</span><span>(</span><span>int</span><span>[</span><span>]</span> startTime<span>,</span> <span>int</span><span>[</span><span>]</span> endTime<span>,</span> <span>int</span> queryTime<span>)</span> <span>{</span>
    <span>int</span> count <span>=</span> <span>0</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> startTime<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      count <span>+=</span> startTime<span>[</span>i<span>]</span> <span>&lt;=</span> queryTime <span>&amp;&amp;</span> queryTime <span>&lt;=</span> endTime<span>[</span>i<span>]</span> <span>?</span> <span>1</span> <span>:</span> <span>0</span><span>;</span>
    <span>}</span>

    <span>return</span> count<span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div>]]></content>
    <author>
      <name>1450. Number of Students Doing Homework at a Given Time</name>
    </author>
    <category term="lizncu"/>
    <contributor>
      <name>1450. Number of Students Doing Homework at a Given Time</name>
    </contributor>
    <rights>Copyright by 1450. Number of Students Doing Homework at a Given Time</rights>
  </entry>
  <entry>
    <title type="html">1450. Number of Students Doing Homework at a Given Time</title>
    <id>https://leetcode.innenu.com/1450-Number-of-Students-Doing-Homework-at-a-Given-Time/</id>
    <link href="https://leetcode.innenu.com/1450-Number-of-Students-Doing-Homework-at-a-Given-Time/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_1450-number-of-students-doing-homework-at-a-given-time"> <a href="https://leetcode.com/problems/number-of-students-doing-homework-at-a-given-time/" target="_blank" rel="noopener noreferrer">1450. Number of Students Doing Homework at a Given Time</a></h1>
<p>Given two integer arrays <code>startTime</code> and <code>endTime</code> and given an integer <code>queryTime</code>.</p>
<p>The <code>ith</code> student started doing their homework at the time <code>startTime[i]</code> and finished it at time <code>endTime[i]</code>.</p>
<p>Return <em>the number of students</em> doing their homework at time <code>queryTime</code>. More formally, return the number of students where <code>queryTime</code> lays in the interval <code>[startTime[i], endTime[i]]</code> inclusive.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> startTime = [1,2,3], endTime = [3,2,7], queryTime = 4</p>
<p><strong>Output:</strong> 1</p>
<p><strong>Explanation:</strong> We have 3 students where:</p>
<ul>
<li>The first student started doing homework at time 1 and finished at time 3 and wasn't doing anything at time 4.</li>
<li>The second student started doing homework at time 2 and finished at time 2 and also wasn't doing anything at time 4.</li>
<li>The third student started doing homework at time 3 and finished at time 7 and was the only student doing homework at time 4.</li>
</ul>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> startTime = [4], endTime = [4], queryTime = 4</p>
<p><strong>Output:</strong> 1</p>
<p><strong>Explanation:</strong> The only student was doing their homework at the queryTime.</p>
<p><strong>Example 3:</strong></p>
<p><strong>Input:</strong> startTime = [4], endTime = [4], queryTime = 5</p>
<p><strong>Output:</strong> 0</p>
<p><strong>Example 4:</strong></p>
<p><strong>Input:</strong> startTime = [1,1,1,1], endTime = [1,3,2,4], queryTime = 7</p>
<p><strong>Output:</strong> 0</p>
<p><strong>Example 5:</strong></p>
<p><strong>Input:</strong> startTime = [9,8,7,6,5,4,3,2,1], endTime = [10,10,10,10,10,10,10,10,10], queryTime = 5</p>
<p><strong>Output:</strong> 5</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>startTime.length == endTime.length</code></li>
<li><code>1 &lt;= startTime.length &lt;= 100</code></li>
<li><code>1 &lt;= startTime[i] &lt;= endTime[i] &lt;= 1000</code></li>
<li><code>1 &lt;= queryTime &lt;= 1000</code></li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">Java</title>
    <id>https://leetcode.innenu.com/1470-Shuffle-the-Array/Java/</id>
    <link href="https://leetcode.innenu.com/1470-Shuffle-the-Array/Java/"/>
    <updated>2021-02-17T16:18:42.600Z</updated>
    <content type="html"><![CDATA[<h2 id="lizncu"> lizncu</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>shuffle</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>,</span> <span>int</span> n<span>)</span> <span>{</span>
    <span>int</span><span>[</span><span>]</span> ans <span>=</span> <span>new</span> <span>int</span><span>[</span>nums<span>.</span>length<span>]</span><span>;</span>
    <span>int</span> count <span>=</span> <span>0</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> n<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      ans<span>[</span>count<span>++</span><span>]</span> <span>=</span> nums<span>[</span>i<span>]</span><span>;</span>

      ans<span>[</span>count<span>++</span><span>]</span> <span>=</span> nums<span>[</span>i <span>+</span> n<span>]</span><span>;</span>
    <span>}</span>

    <span>return</span> ans<span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div>]]></content>
    <author>
      <name>1470. Shuffle the Array</name>
    </author>
    <category term="Java"/>
    <contributor>
      <name>1470. Shuffle the Array</name>
    </contributor>
    <rights>Copyright by 1470. Shuffle the Array</rights>
  </entry>
  <entry>
    <title type="html">lizncu</title>
    <id>https://leetcode.innenu.com/1470-Shuffle-the-Array/lizncu/</id>
    <link href="https://leetcode.innenu.com/1470-Shuffle-the-Array/lizncu/"/>
    <updated>2021-02-17T16:18:42.600Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>shuffle</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>,</span> <span>int</span> n<span>)</span> <span>{</span>
    <span>int</span><span>[</span><span>]</span> ans <span>=</span> <span>new</span> <span>int</span><span>[</span>nums<span>.</span>length<span>]</span><span>;</span>
    <span>int</span> count <span>=</span> <span>0</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> n<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      ans<span>[</span>count<span>++</span><span>]</span> <span>=</span> nums<span>[</span>i<span>]</span><span>;</span>

      ans<span>[</span>count<span>++</span><span>]</span> <span>=</span> nums<span>[</span>i <span>+</span> n<span>]</span><span>;</span>
    <span>}</span>

    <span>return</span> ans<span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div>]]></content>
    <author>
      <name>1470. Shuffle the Array</name>
    </author>
    <category term="lizncu"/>
    <contributor>
      <name>1470. Shuffle the Array</name>
    </contributor>
    <rights>Copyright by 1470. Shuffle the Array</rights>
  </entry>
  <entry>
    <title type="html">1470. Shuffle the Array</title>
    <id>https://leetcode.innenu.com/1470-Shuffle-the-Array/</id>
    <link href="https://leetcode.innenu.com/1470-Shuffle-the-Array/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_1470-shuffle-the-array"> <a href="https://leetcode.com/problems/shuffle-the-array/" target="_blank" rel="noopener noreferrer">1470. Shuffle the Array</a></h1>
<p>Given the array <code>nums</code> consisting of <code>2n</code> elements in the form <code>[x1,x2,...,xn,y1,y2,...,yn]</code>.</p>
<p><em>Return the array in the form</em> <code>[x1,y1,x2,y2,...,xn,yn]</code>.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> nums = [2,5,1,3,4,7], n = 3</p>
<p><strong>Output:</strong> [2,3,5,4,1,7]</p>
<p><strong>Explanation:</strong> Since x1=2, x2=5, x3=1, y1=3, y2=4, y3=7 then the answer is [2,3,5,4,1,7].</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> nums = [1,2,3,4,4,3,2,1], n = 4</p>
<p><strong>Output:</strong> [1,4,2,3,3,2,4,1]</p>
<p><strong>Example 3:</strong></p>
<p><strong>Input:</strong> nums = [1,1,2,2], n = 2</p>
<p><strong>Output:</strong> [1,2,1,2]</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>1 &lt;= n &lt;= 500</code></li>
<li><code>nums.length == 2n</code></li>
<li><code>1 &lt;= nums[i] &lt;= 10^3</code></li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">Java</title>
    <id>https://leetcode.innenu.com/1480-Running-Sum-of-1d-Array/Java/</id>
    <link href="https://leetcode.innenu.com/1480-Running-Sum-of-1d-Array/Java/"/>
    <updated>2021-02-17T16:18:42.601Z</updated>
    <content type="html"><![CDATA[<h2 id="lizncu"> lizncu</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>runningSum</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>)</span> <span>{</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>1</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      nums<span>[</span>i<span>]</span> <span>+=</span> nums<span>[</span>i <span>-</span> <span>1</span><span>]</span><span>;</span>
    <span>}</span>

    <span>return</span> nums<span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div>]]></content>
    <author>
      <name>1480. Running Sum of 1d Array</name>
    </author>
    <category term="Java"/>
    <contributor>
      <name>1480. Running Sum of 1d Array</name>
    </contributor>
    <rights>Copyright by 1480. Running Sum of 1d Array</rights>
  </entry>
  <entry>
    <title type="html">lizncu</title>
    <id>https://leetcode.innenu.com/1480-Running-Sum-of-1d-Array/lizncu/</id>
    <link href="https://leetcode.innenu.com/1480-Running-Sum-of-1d-Array/lizncu/"/>
    <updated>2021-02-17T16:18:42.601Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>runningSum</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>)</span> <span>{</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>1</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      nums<span>[</span>i<span>]</span> <span>+=</span> nums<span>[</span>i <span>-</span> <span>1</span><span>]</span><span>;</span>
    <span>}</span>

    <span>return</span> nums<span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div>]]></content>
    <author>
      <name>1480. Running Sum of 1d Array</name>
    </author>
    <category term="lizncu"/>
    <contributor>
      <name>1480. Running Sum of 1d Array</name>
    </contributor>
    <rights>Copyright by 1480. Running Sum of 1d Array</rights>
  </entry>
  <entry>
    <title type="html">1480. Running Sum of 1d Array</title>
    <id>https://leetcode.innenu.com/1480-Running-Sum-of-1d-Array/</id>
    <link href="https://leetcode.innenu.com/1480-Running-Sum-of-1d-Array/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_1480-running-sum-of-1d-array"> <a href="https://leetcode.com/problems/running-sum-of-1d-array/" target="_blank" rel="noopener noreferrer">1480. Running Sum of 1d Array</a></h1>
<p>Given an array <code>nums</code>. We define a running sum of an array as <code>runningSum[i] = sum(nums[0]…nums[i])</code>.</p>
<p>Return the running sum of <code>nums</code>.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> nums = [1,2,3,4]</p>
<p><strong>Output:</strong> [1,3,6,10]</p>
<p><strong>Explanation:</strong> Running sum is obtained as follows: [1, 1+2, 1+2+3, 1+2+3+4].</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> nums = [1,1,1,1,1]</p>
<p><strong>Output:</strong> [1,2,3,4,5]</p>
<p><strong>Explanation:</strong> Running sum is obtained as follows: [1, 1+1, 1+1+1, 1+1+1+1, 1+1+1+1+1].</p>
<p><strong>Example 3:</strong></p>
<p><strong>Input:</strong> nums = [3,1,2,10,1]</p>
<p><strong>Output:</strong> [3,4,6,16,17]</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>1 &lt;= nums.length &lt;= 1000</code></li>
<li><code>-10^6 &lt;= nums[i] &lt;= 10^6</code></li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">Java</title>
    <id>https://leetcode.innenu.com/1486-XOR-Operation-in-an-Array/Java/</id>
    <link href="https://leetcode.innenu.com/1486-XOR-Operation-in-an-Array/Java/"/>
    <updated>2021-02-17T16:18:42.620Z</updated>
    <content type="html"><![CDATA[<h2 id="lizncu"> lizncu</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span> <span>xorOperation</span><span>(</span><span>int</span> n<span>,</span> <span>int</span> start<span>)</span> <span>{</span>
    <span>int</span> result <span>=</span> start<span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>1</span><span>;</span> i <span>&lt;</span> n<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      result <span>=</span> result <span>^</span> <span>(</span>start <span>+</span> i <span>*</span> <span>2</span><span>)</span><span>;</span>
    <span>}</span>

    <span>return</span> result<span>;</span>
  <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div>]]></content>
    <author>
      <name>1486. Xor Operation in An Array</name>
    </author>
    <category term="Java"/>
    <contributor>
      <name>1486. Xor Operation in An Array</name>
    </contributor>
    <rights>Copyright by 1486. Xor Operation in An Array</rights>
  </entry>
  <entry>
    <title type="html">lizncu</title>
    <id>https://leetcode.innenu.com/1486-XOR-Operation-in-an-Array/lizncu/</id>
    <link href="https://leetcode.innenu.com/1486-XOR-Operation-in-an-Array/lizncu/"/>
    <updated>2021-02-17T16:18:42.620Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span> <span>xorOperation</span><span>(</span><span>int</span> n<span>,</span> <span>int</span> start<span>)</span> <span>{</span>
    <span>int</span> result <span>=</span> start<span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>1</span><span>;</span> i <span>&lt;</span> n<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      result <span>=</span> result <span>^</span> <span>(</span>start <span>+</span> i <span>*</span> <span>2</span><span>)</span><span>;</span>
    <span>}</span>

    <span>return</span> result<span>;</span>
  <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div>]]></content>
    <author>
      <name>1486. Xor Operation in An Array</name>
    </author>
    <category term="lizncu"/>
    <contributor>
      <name>1486. Xor Operation in An Array</name>
    </contributor>
    <rights>Copyright by 1486. Xor Operation in An Array</rights>
  </entry>
  <entry>
    <title type="html">1486. XOR Operation in an Array</title>
    <id>https://leetcode.innenu.com/1486-XOR-Operation-in-an-Array/</id>
    <link href="https://leetcode.innenu.com/1486-XOR-Operation-in-an-Array/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_1486-xor-operation-in-an-array"> <a href="https://leetcode.com/problems/xor-operation-in-an-array/" target="_blank" rel="noopener noreferrer">1486. XOR Operation in an Array</a></h1>
<p>Given an integer <code>n</code> and an integer <code>start</code>.</p>
<p>Define an array <code>nums</code> where <code>nums[i] = start + 2*i</code> (0-indexed) and <code>n == nums.length</code>.</p>
<p>Return the bitwise XOR of all elements of <code>nums</code>.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> n = 5, start = 0</p>
<p><strong>Output:</strong> 8</p>
<p><strong>Explanation:</strong> Array nums is equal to [0, 2, 4, 6, 8] where (0 ^ 2 ^ 4 ^ 6 ^ 8) = 8.
Where &quot;^&quot; corresponds to bitwise XOR operator.</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> n = 4, start = 3</p>
<p><strong>Output:</strong> 8</p>
<p><strong>Explanation:</strong> Array nums is equal to [3, 5, 7, 9] where (3 ^ 5 ^ 7 ^ 9) = 8.</p>
<p><strong>Example 3:</strong></p>
<p><strong>Input:</strong> n = 1, start = 7</p>
<p><strong>Output:</strong> 7</p>
<p><strong>Example 4:</strong></p>
<p><strong>Input:</strong> n = 10, start = 5</p>
<p><strong>Output:</strong> 2</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>1 &lt;= n &lt;= 1000</code></li>
<li><code>0 &lt;= start &lt;= 1000</code></li>
<li><code>n == nums.length</code></li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">C++</title>
    <id>https://leetcode.innenu.com/1491-average-salary-excluding-the-minimum-and-maximum-salary/C++/</id>
    <link href="https://leetcode.innenu.com/1491-average-salary-excluding-the-minimum-and-maximum-salary/C++/"/>
    <updated>2021-02-17T16:18:42.621Z</updated>
    <content type="html"><![CDATA[<h2 id="lmy"> lmy</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>double</span> <span>average</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> salary<span>)</span> <span>{</span>
    <span>int</span> min <span>=</span> salary<span>[</span><span>0</span><span>]</span><span>,</span> max <span>=</span> salary<span>[</span><span>0</span><span>]</span><span>;</span>
    <span>int</span> sum <span>=</span> <span>0</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> salary<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>salary<span>[</span>i<span>]</span> <span>&lt;</span> min<span>)</span> min <span>=</span> salary<span>[</span>i<span>]</span><span>;</span>
      <span>if</span> <span>(</span>salary<span>[</span>i<span>]</span> <span>></span> max<span>)</span> max <span>=</span> salary<span>[</span>i<span>]</span><span>;</span>
      sum <span>+=</span> salary<span>[</span>i<span>]</span><span>;</span>
    <span>}</span>
    <span>return</span> <span>(</span><span>double</span><span>)</span><span>(</span>sum <span>-</span> min <span>-</span> max<span>)</span> <span>/</span> <span>(</span><span>double</span><span>)</span><span>(</span>salary<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>2</span><span>)</span><span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div>]]></content>
    <author>
      <name>1491. Average Salary Excluding the Minimum And Maximum Salary</name>
    </author>
    <category term="C++"/>
    <contributor>
      <name>1491. Average Salary Excluding the Minimum And Maximum Salary</name>
    </contributor>
    <rights>Copyright by 1491. Average Salary Excluding the Minimum And Maximum Salary</rights>
  </entry>
  <entry>
    <title type="html">lmy</title>
    <id>https://leetcode.innenu.com/1491-average-salary-excluding-the-minimum-and-maximum-salary/lmy/</id>
    <link href="https://leetcode.innenu.com/1491-average-salary-excluding-the-minimum-and-maximum-salary/lmy/"/>
    <updated>2021-02-17T16:18:42.622Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>double</span> <span>average</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> salary<span>)</span> <span>{</span>
    <span>int</span> min <span>=</span> salary<span>[</span><span>0</span><span>]</span><span>,</span> max <span>=</span> salary<span>[</span><span>0</span><span>]</span><span>;</span>
    <span>int</span> sum <span>=</span> <span>0</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> salary<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>salary<span>[</span>i<span>]</span> <span>&lt;</span> min<span>)</span> min <span>=</span> salary<span>[</span>i<span>]</span><span>;</span>
      <span>if</span> <span>(</span>salary<span>[</span>i<span>]</span> <span>></span> max<span>)</span> max <span>=</span> salary<span>[</span>i<span>]</span><span>;</span>
      sum <span>+=</span> salary<span>[</span>i<span>]</span><span>;</span>
    <span>}</span>
    <span>return</span> <span>(</span><span>double</span><span>)</span><span>(</span>sum <span>-</span> min <span>-</span> max<span>)</span> <span>/</span> <span>(</span><span>double</span><span>)</span><span>(</span>salary<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>2</span><span>)</span><span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div>]]></content>
    <author>
      <name>1491. Average Salary Excluding the Minimum And Maximum Salary</name>
    </author>
    <category term="lmy"/>
    <contributor>
      <name>1491. Average Salary Excluding the Minimum And Maximum Salary</name>
    </contributor>
    <rights>Copyright by 1491. Average Salary Excluding the Minimum And Maximum Salary</rights>
  </entry>
  <entry>
    <title type="html">1491. Average Salary Excluding the Minimum and Maximum Salary</title>
    <id>https://leetcode.innenu.com/1491-average-salary-excluding-the-minimum-and-maximum-salary/</id>
    <link href="https://leetcode.innenu.com/1491-average-salary-excluding-the-minimum-and-maximum-salary/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_1491-average-salary-excluding-the-minimum-and-maximum-salary"> <a href="https://leetcode.com/problems/average-salary-excluding-the-minimum-and-maximum-salary/" target="_blank" rel="noopener noreferrer">1491. Average Salary Excluding the Minimum and Maximum Salary</a></h1>
<p>Given an array of <strong>unique</strong> integers <code>salary</code> where <code>salary[i]</code> is the salary of the employee <code>i</code>.</p>
<p>Return the average salary of employees excluding the minimum and maximum salary.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> salary = [4000,3000,1000,2000]</p>
<p><strong>Output:</strong> 2500.00000</p>
<p><strong>Explanation:</strong></p>
<p>Minimum salary and maximum salary are 1000 and 4000 respectively.</p>
<p>Average salary excluding minimum and maximum salary is (2000+3000)/2= 2500</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> salary = [1000,2000,3000]</p>
<p><strong>Output:</strong> 2000.00000</p>
<p><strong>Explanation:</strong> Minimum salary and maximum salary are 1000 and 3000 respectively.
Average salary excluding minimum and maximum salary is (2000)/1= 2000</p>
<p><strong>Example 3:</strong></p>
<p><strong>Input:</strong> salary = [6000,5000,4000,3000,2000,1000]</p>
<p><strong>Output:</strong> 3500.00000</p>
<p><strong>Example 4:</strong></p>
<p><strong>Input:</strong> salary = [8000,9000,2000,3000,6000,1000]</p>
<p><strong>Output:</strong> 4750.00000</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>3 &lt;= salary.length &lt;= 100</code></li>
<li><code>10^3 &lt;= salary[i] &lt;= 10^6</code></li>
<li><code>salary[i]</code> is unique.</li>
<li>Answers within <code>10^-5</code> of the actual value will be accepted as correct.</li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">JavaScript</title>
    <id>https://leetcode.innenu.com/15-3sum/JavaScript/</id>
    <link href="https://leetcode.innenu.com/15-3sum/JavaScript/"/>
    <updated>2021-02-17T16:18:42.623Z</updated>
    <content type="html"><![CDATA[<h2 id="mister-hope"> Mister-Hope</h2>
<div><pre><code><span>/**
 * Runtime: 140 ms, faster than 90.82% of JavaScript online submissions for 3Sum.
 *
 * Memory Usage: 48.9 MB, less than 5.15% of JavaScript online submissions for 3Sum.
 */</span>
<span>const</span> <span>threeSum</span> <span>=</span> <span>(</span><span>nums</span><span>)</span> <span>=></span> <span>{</span>
  <span>const</span> result <span>=</span> <span>[</span><span>]</span><span>;</span>

  <span>if</span> <span>(</span>nums<span>.</span>length <span>&lt;</span> <span>3</span><span>)</span> <span>return</span> result<span>;</span>

  nums<span>.</span><span>sort</span><span>(</span><span>(</span><span>a<span>,</span> b</span><span>)</span> <span>=></span> a <span>-</span> b<span>)</span><span>;</span>

  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length <span>-</span> <span>2</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
    <span>let</span> big <span>=</span> i <span>+</span> <span>1</span><span>;</span>
    <span>let</span> small <span>=</span> nums<span>.</span>length <span>-</span> <span>1</span><span>;</span>
    <span>let</span> sum <span>=</span> <span>0</span> <span>-</span> nums<span>[</span>i<span>]</span><span>;</span>

    <span>if</span> <span>(</span>i <span>>=</span> <span>0</span> <span>&amp;&amp;</span> nums<span>[</span>i<span>]</span> <span>!==</span> nums<span>[</span>i <span>-</span> <span>1</span><span>]</span><span>)</span>
      <span>while</span> <span>(</span>big <span>&lt;</span> small<span>)</span>
        <span>if</span> <span>(</span>nums<span>[</span>big<span>]</span> <span>+</span> nums<span>[</span>small<span>]</span> <span>&lt;</span> sum<span>)</span> big<span>++</span><span>;</span>
        <span>else</span> <span>if</span> <span>(</span>nums<span>[</span>big<span>]</span> <span>+</span> nums<span>[</span>small<span>]</span> <span>></span> sum<span>)</span> small<span>--</span><span>;</span>
        <span>else</span> <span>{</span>
          result<span>.</span><span>push</span><span>(</span><span>[</span>nums<span>[</span>i<span>]</span><span>,</span> nums<span>[</span>big<span>]</span><span>,</span> nums<span>[</span>small<span>]</span><span>]</span><span>)</span><span>;</span>
          <span>while</span> <span>(</span>big <span>&lt;</span> small <span>&amp;&amp;</span> nums<span>[</span>big<span>]</span> <span>===</span> nums<span>[</span>big <span>+</span> <span>1</span><span>]</span><span>)</span> big<span>++</span><span>;</span>
          <span>while</span> <span>(</span>big <span>&lt;</span> small <span>&amp;&amp;</span> nums<span>[</span>small<span>]</span> <span>===</span> nums<span>[</span>small <span>-</span> <span>1</span><span>]</span><span>)</span> small<span>--</span><span>;</span>
          big<span>++</span><span>;</span>
          small<span>--</span><span>;</span>
        <span>}</span>
  <span>}</span>

  <span>return</span> result<span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br></div></div>]]></content>
    <author>
      <name>15. 3sum</name>
    </author>
    <category term="JavaScript"/>
    <contributor>
      <name>15. 3sum</name>
    </contributor>
    <rights>Copyright by 15. 3sum</rights>
  </entry>
  <entry>
    <title type="html">Mister-Hope</title>
    <id>https://leetcode.innenu.com/15-3sum/Mister-Hope/</id>
    <link href="https://leetcode.innenu.com/15-3sum/Mister-Hope/"/>
    <updated>2021-02-17T16:18:42.624Z</updated>
    <content type="html"><![CDATA[<h2 id="javascript"> JavaScript</h2>
<div><pre><code><span>/**
 * Runtime: 140 ms, faster than 90.82% of JavaScript online submissions for 3Sum.
 *
 * Memory Usage: 48.9 MB, less than 5.15% of JavaScript online submissions for 3Sum.
 */</span>
<span>const</span> <span>threeSum</span> <span>=</span> <span>(</span><span>nums</span><span>)</span> <span>=></span> <span>{</span>
  <span>const</span> result <span>=</span> <span>[</span><span>]</span><span>;</span>

  <span>if</span> <span>(</span>nums<span>.</span>length <span>&lt;</span> <span>3</span><span>)</span> <span>return</span> result<span>;</span>

  nums<span>.</span><span>sort</span><span>(</span><span>(</span><span>a<span>,</span> b</span><span>)</span> <span>=></span> a <span>-</span> b<span>)</span><span>;</span>

  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length <span>-</span> <span>2</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
    <span>let</span> big <span>=</span> i <span>+</span> <span>1</span><span>;</span>
    <span>let</span> small <span>=</span> nums<span>.</span>length <span>-</span> <span>1</span><span>;</span>
    <span>let</span> sum <span>=</span> <span>0</span> <span>-</span> nums<span>[</span>i<span>]</span><span>;</span>

    <span>if</span> <span>(</span>i <span>>=</span> <span>0</span> <span>&amp;&amp;</span> nums<span>[</span>i<span>]</span> <span>!==</span> nums<span>[</span>i <span>-</span> <span>1</span><span>]</span><span>)</span>
      <span>while</span> <span>(</span>big <span>&lt;</span> small<span>)</span>
        <span>if</span> <span>(</span>nums<span>[</span>big<span>]</span> <span>+</span> nums<span>[</span>small<span>]</span> <span>&lt;</span> sum<span>)</span> big<span>++</span><span>;</span>
        <span>else</span> <span>if</span> <span>(</span>nums<span>[</span>big<span>]</span> <span>+</span> nums<span>[</span>small<span>]</span> <span>></span> sum<span>)</span> small<span>--</span><span>;</span>
        <span>else</span> <span>{</span>
          result<span>.</span><span>push</span><span>(</span><span>[</span>nums<span>[</span>i<span>]</span><span>,</span> nums<span>[</span>big<span>]</span><span>,</span> nums<span>[</span>small<span>]</span><span>]</span><span>)</span><span>;</span>
          <span>while</span> <span>(</span>big <span>&lt;</span> small <span>&amp;&amp;</span> nums<span>[</span>big<span>]</span> <span>===</span> nums<span>[</span>big <span>+</span> <span>1</span><span>]</span><span>)</span> big<span>++</span><span>;</span>
          <span>while</span> <span>(</span>big <span>&lt;</span> small <span>&amp;&amp;</span> nums<span>[</span>small<span>]</span> <span>===</span> nums<span>[</span>small <span>-</span> <span>1</span><span>]</span><span>)</span> small<span>--</span><span>;</span>
          big<span>++</span><span>;</span>
          small<span>--</span><span>;</span>
        <span>}</span>
  <span>}</span>

  <span>return</span> result<span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br></div></div><h2 id="typescript"> TypeScript</h2>
<div><pre><code><span>/**
 * Runtime: 156 ms, faster than 82.24% of TypeScript online submissions for 3Sum.
 *
 *  Memory Usage: 49.3 MB, less than 5.26% of TypeScript online submissions for 3Sum.
 */</span>

<span>const</span> threeSum <span>=</span> <span>(</span>nums<span>:</span> <span>number</span><span>[</span><span>]</span><span>)</span><span>:</span> <span>number</span><span>[</span><span>]</span><span>[</span><span>]</span> <span>=></span> <span>{</span>
  <span>const</span> result<span>:</span> <span>number</span><span>[</span><span>]</span><span>[</span><span>]</span> <span>=</span> <span>[</span><span>]</span><span>;</span>

  <span>if</span> <span>(</span>nums<span>.</span>length <span>&lt;</span> <span>3</span><span>)</span> <span>return</span> result<span>;</span>

  nums<span>.</span><span>sort</span><span>(</span><span>(</span>a<span>,</span> b<span>)</span> <span>=></span> a <span>-</span> b<span>)</span><span>;</span>

  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length <span>-</span> <span>2</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
    <span>let</span> big <span>=</span> i <span>+</span> <span>1</span><span>;</span>
    <span>let</span> small <span>=</span> nums<span>.</span>length <span>-</span> <span>1</span><span>;</span>
    <span>let</span> sum <span>=</span> <span>0</span> <span>-</span> nums<span>[</span>i<span>]</span><span>;</span>

    <span>if</span> <span>(</span>i <span>>=</span> <span>0</span> <span>&amp;&amp;</span> nums<span>[</span>i<span>]</span> <span>!==</span> nums<span>[</span>i <span>-</span> <span>1</span><span>]</span><span>)</span>
      <span>while</span> <span>(</span>big <span>&lt;</span> small<span>)</span>
        <span>if</span> <span>(</span>nums<span>[</span>big<span>]</span> <span>+</span> nums<span>[</span>small<span>]</span> <span>&lt;</span> sum<span>)</span> big<span>++</span><span>;</span>
        <span>else</span> <span>if</span> <span>(</span>nums<span>[</span>big<span>]</span> <span>+</span> nums<span>[</span>small<span>]</span> <span>></span> sum<span>)</span> small<span>--</span><span>;</span>
        <span>else</span> <span>{</span>
          result<span>.</span><span>push</span><span>(</span><span>[</span>nums<span>[</span>i<span>]</span><span>,</span> nums<span>[</span>big<span>]</span><span>,</span> nums<span>[</span>small<span>]</span><span>]</span><span>)</span><span>;</span>
          <span>while</span> <span>(</span>big <span>&lt;</span> small <span>&amp;&amp;</span> nums<span>[</span>big<span>]</span> <span>===</span> nums<span>[</span>big <span>+</span> <span>1</span><span>]</span><span>)</span> big<span>++</span><span>;</span>
          <span>while</span> <span>(</span>big <span>&lt;</span> small <span>&amp;&amp;</span> nums<span>[</span>small<span>]</span> <span>===</span> nums<span>[</span>small <span>-</span> <span>1</span><span>]</span><span>)</span> small<span>--</span><span>;</span>
          big<span>++</span><span>;</span>
          small<span>--</span><span>;</span>
        <span>}</span>
  <span>}</span>

  <span>return</span> result<span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br></div></div>]]></content>
    <author>
      <name>15. 3sum</name>
    </author>
    <category term="Mister-Hope"/>
    <contributor>
      <name>15. 3sum</name>
    </contributor>
    <rights>Copyright by 15. 3sum</rights>
  </entry>
  <entry>
    <title type="html">TypeScript</title>
    <id>https://leetcode.innenu.com/15-3sum/TypeScript/</id>
    <link href="https://leetcode.innenu.com/15-3sum/TypeScript/"/>
    <updated>2021-02-17T16:18:42.625Z</updated>
    <content type="html"><![CDATA[<h2 id="mister-hope"> Mister-Hope</h2>
<div><pre><code><span>/**
 * Runtime: 156 ms, faster than 82.24% of TypeScript online submissions for 3Sum.
 *
 *  Memory Usage: 49.3 MB, less than 5.26% of TypeScript online submissions for 3Sum.
 */</span>

<span>const</span> threeSum <span>=</span> <span>(</span>nums<span>:</span> <span>number</span><span>[</span><span>]</span><span>)</span><span>:</span> <span>number</span><span>[</span><span>]</span><span>[</span><span>]</span> <span>=></span> <span>{</span>
  <span>const</span> result<span>:</span> <span>number</span><span>[</span><span>]</span><span>[</span><span>]</span> <span>=</span> <span>[</span><span>]</span><span>;</span>

  <span>if</span> <span>(</span>nums<span>.</span>length <span>&lt;</span> <span>3</span><span>)</span> <span>return</span> result<span>;</span>

  nums<span>.</span><span>sort</span><span>(</span><span>(</span>a<span>,</span> b<span>)</span> <span>=></span> a <span>-</span> b<span>)</span><span>;</span>

  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length <span>-</span> <span>2</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
    <span>let</span> big <span>=</span> i <span>+</span> <span>1</span><span>;</span>
    <span>let</span> small <span>=</span> nums<span>.</span>length <span>-</span> <span>1</span><span>;</span>
    <span>let</span> sum <span>=</span> <span>0</span> <span>-</span> nums<span>[</span>i<span>]</span><span>;</span>

    <span>if</span> <span>(</span>i <span>>=</span> <span>0</span> <span>&amp;&amp;</span> nums<span>[</span>i<span>]</span> <span>!==</span> nums<span>[</span>i <span>-</span> <span>1</span><span>]</span><span>)</span>
      <span>while</span> <span>(</span>big <span>&lt;</span> small<span>)</span>
        <span>if</span> <span>(</span>nums<span>[</span>big<span>]</span> <span>+</span> nums<span>[</span>small<span>]</span> <span>&lt;</span> sum<span>)</span> big<span>++</span><span>;</span>
        <span>else</span> <span>if</span> <span>(</span>nums<span>[</span>big<span>]</span> <span>+</span> nums<span>[</span>small<span>]</span> <span>></span> sum<span>)</span> small<span>--</span><span>;</span>
        <span>else</span> <span>{</span>
          result<span>.</span><span>push</span><span>(</span><span>[</span>nums<span>[</span>i<span>]</span><span>,</span> nums<span>[</span>big<span>]</span><span>,</span> nums<span>[</span>small<span>]</span><span>]</span><span>)</span><span>;</span>
          <span>while</span> <span>(</span>big <span>&lt;</span> small <span>&amp;&amp;</span> nums<span>[</span>big<span>]</span> <span>===</span> nums<span>[</span>big <span>+</span> <span>1</span><span>]</span><span>)</span> big<span>++</span><span>;</span>
          <span>while</span> <span>(</span>big <span>&lt;</span> small <span>&amp;&amp;</span> nums<span>[</span>small<span>]</span> <span>===</span> nums<span>[</span>small <span>-</span> <span>1</span><span>]</span><span>)</span> small<span>--</span><span>;</span>
          big<span>++</span><span>;</span>
          small<span>--</span><span>;</span>
        <span>}</span>
  <span>}</span>

  <span>return</span> result<span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br></div></div>]]></content>
    <author>
      <name>15. 3sum</name>
    </author>
    <category term="TypeScript"/>
    <contributor>
      <name>15. 3sum</name>
    </contributor>
    <rights>Copyright by 15. 3sum</rights>
  </entry>
  <entry>
    <title type="html">15. 3Sum</title>
    <id>https://leetcode.innenu.com/15-3sum/</id>
    <link href="https://leetcode.innenu.com/15-3sum/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_15-3sum"> <a href="https://leetcode.com/problems/3sum/" target="_blank" rel="noopener noreferrer">15. 3Sum</a></h1>
<p>Given an array <code>nums</code> of <em>n</em> integers, are there elements <em>a</em>, <em>b</em>, <em>c</em> in <code>nums</code> such that <em>a</em> + <em>b</em> + <em>c</em> = 0? Find all unique triplets in the array which gives the sum of zero.</p>
<p>Notice that the solution set must not contain duplicate triplets.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> nums = [-1,0,1,2,-1,-4]</p>
<p><strong>Output:</strong> [[-1,-1,2],[-1,0,1]]</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> nums = []</p>
<p><strong>Output:</strong> []</p>
<p><strong>Example 3:</strong></p>
<p><strong>Input:</strong> nums = [0]</p>
<p><strong>Output:</strong> []</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>0 &lt;= nums.length &lt;= 3000</code></li>
<li><code>-105 &lt;= nums[i] &lt;= 105</code></li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">C++</title>
    <id>https://leetcode.innenu.com/1502-can-make-arithmetic-progression-from-sequence/C++/</id>
    <link href="https://leetcode.innenu.com/1502-can-make-arithmetic-progression-from-sequence/C++/"/>
    <updated>2021-02-17T16:18:42.626Z</updated>
    <content type="html"><![CDATA[<h2 id="sqm"> sqm</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>
<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>bool</span> <span>canMakeArithmeticProgression</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> arr<span>)</span> <span>{</span>
    <span>sort</span><span>(</span>arr<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> arr<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>1</span><span>;</span> i <span>&lt;</span> arr<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>arr<span>[</span>i <span>+</span> <span>1</span><span>]</span> <span>-</span> arr<span>[</span>i<span>]</span> <span>!=</span> arr<span>[</span>i<span>]</span> <span>-</span> arr<span>[</span>i <span>-</span> <span>1</span><span>]</span><span>)</span> <span>return</span> <span>false</span><span>;</span>
    <span>}</span>
    <span>return</span> <span>true</span><span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>]]></content>
    <author>
      <name>1502. Can Make Arithmetic Progression From Sequence</name>
    </author>
    <category term="C++"/>
    <contributor>
      <name>1502. Can Make Arithmetic Progression From Sequence</name>
    </contributor>
    <rights>Copyright by 1502. Can Make Arithmetic Progression From Sequence</rights>
  </entry>
  <entry>
    <title type="html">1502. Can Make Arithmetic Progression From Sequence</title>
    <id>https://leetcode.innenu.com/1502-can-make-arithmetic-progression-from-sequence/</id>
    <link href="https://leetcode.innenu.com/1502-can-make-arithmetic-progression-from-sequence/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_1502-can-make-arithmetic-progression-from-sequence"> <a href="https://leetcode.com/problems/can-make-arithmetic-progression-from-sequence/" target="_blank" rel="noopener noreferrer">1502. Can Make Arithmetic Progression From Sequence</a></h1>
<p>Given an array of numbers <code>arr</code>. A sequence of numbers is called an arithmetic progression if the difference between any two consecutive elements is the same.</p>
<p>Return <code>true</code> if the array can be rearranged to form an arithmetic progression, otherwise, return <code>false</code>.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> arr = [3,5,1]</p>
<p><strong>Output:</strong> true</p>
<p><strong>Explanation:</strong> We can reorder the elements as [1,3,5] or [5,3,1] with differences 2 and -2 respectively, between each consecutive elements.</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> arr = [1,2,4]</p>
<p><strong>Output:</strong> false</p>
<p><strong>Explanation:</strong> There is no way to reorder the elements to obtain an arithmetic progression.</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>2 &lt;= arr.length &lt;= 1000</code></li>
<li><code>-10^6 &lt;= arr[i] &lt;= 10^6</code></li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">sqm</title>
    <id>https://leetcode.innenu.com/1502-can-make-arithmetic-progression-from-sequence/sqm/</id>
    <link href="https://leetcode.innenu.com/1502-can-make-arithmetic-progression-from-sequence/sqm/"/>
    <updated>2021-02-17T16:18:42.626Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>
<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>bool</span> <span>canMakeArithmeticProgression</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> arr<span>)</span> <span>{</span>
    <span>sort</span><span>(</span>arr<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> arr<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>1</span><span>;</span> i <span>&lt;</span> arr<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>arr<span>[</span>i <span>+</span> <span>1</span><span>]</span> <span>-</span> arr<span>[</span>i<span>]</span> <span>!=</span> arr<span>[</span>i<span>]</span> <span>-</span> arr<span>[</span>i <span>-</span> <span>1</span><span>]</span><span>)</span> <span>return</span> <span>false</span><span>;</span>
    <span>}</span>
    <span>return</span> <span>true</span><span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>]]></content>
    <author>
      <name>1502. Can Make Arithmetic Progression From Sequence</name>
    </author>
    <category term="sqm"/>
    <contributor>
      <name>1502. Can Make Arithmetic Progression From Sequence</name>
    </contributor>
    <rights>Copyright by 1502. Can Make Arithmetic Progression From Sequence</rights>
  </entry>
  <entry>
    <title type="html">C++</title>
    <id>https://leetcode.innenu.com/1512-Number-of-Good-Pairs/C++/</id>
    <link href="https://leetcode.innenu.com/1512-Number-of-Good-Pairs/C++/"/>
    <updated>2021-02-17T16:18:42.627Z</updated>
    <content type="html"><![CDATA[<h2 id="lmy"> lmy</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>int</span> <span>numIdenticalPairs</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums<span>)</span> <span>{</span>
    <span>int</span> ans <span>=</span> <span>0</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>for</span> <span>(</span><span>int</span> j <span>=</span> i <span>+</span> <span>1</span><span>;</span> j <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> j<span>++</span><span>)</span>
        <span>if</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>==</span> nums<span>[</span>j<span>]</span><span>)</span> <span>{</span>
          ans<span>++</span><span>;</span>
        <span>}</span>
    <span>}</span>
    <span>return</span> ans<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div>]]></content>
    <author>
      <name>1512. Number of Good Pairs</name>
    </author>
    <category term="C++"/>
    <contributor>
      <name>1512. Number of Good Pairs</name>
    </contributor>
    <rights>Copyright by 1512. Number of Good Pairs</rights>
  </entry>
  <entry>
    <title type="html">Java</title>
    <id>https://leetcode.innenu.com/1512-Number-of-Good-Pairs/Java/</id>
    <link href="https://leetcode.innenu.com/1512-Number-of-Good-Pairs/Java/"/>
    <updated>2021-02-17T16:18:42.627Z</updated>
    <content type="html"><![CDATA[<h2 id="lizncu"> lizncu</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span> <span>numIdenticalPairs</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>)</span> <span>{</span>
    <span>int</span> count <span>=</span> <span>0</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>for</span> <span>(</span><span>int</span> j <span>=</span> i <span>+</span> <span>1</span><span>;</span> j <span>&lt;</span> nums<span>.</span>length<span>;</span> j<span>++</span><span>)</span> <span>{</span>
        <span>if</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>==</span> nums<span>[</span>j<span>]</span><span>)</span> <span>{</span>
          count<span>++</span><span>;</span>
        <span>}</span>
      <span>}</span>
    <span>}</span>

    <span>return</span> count<span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>]]></content>
    <author>
      <name>1512. Number of Good Pairs</name>
    </author>
    <category term="Java"/>
    <contributor>
      <name>1512. Number of Good Pairs</name>
    </contributor>
    <rights>Copyright by 1512. Number of Good Pairs</rights>
  </entry>
  <entry>
    <title type="html">lizncu</title>
    <id>https://leetcode.innenu.com/1512-Number-of-Good-Pairs/lizncu/</id>
    <link href="https://leetcode.innenu.com/1512-Number-of-Good-Pairs/lizncu/"/>
    <updated>2021-02-17T16:18:42.627Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span> <span>numIdenticalPairs</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>)</span> <span>{</span>
    <span>int</span> count <span>=</span> <span>0</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>for</span> <span>(</span><span>int</span> j <span>=</span> i <span>+</span> <span>1</span><span>;</span> j <span>&lt;</span> nums<span>.</span>length<span>;</span> j<span>++</span><span>)</span> <span>{</span>
        <span>if</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>==</span> nums<span>[</span>j<span>]</span><span>)</span> <span>{</span>
          count<span>++</span><span>;</span>
        <span>}</span>
      <span>}</span>
    <span>}</span>

    <span>return</span> count<span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>]]></content>
    <author>
      <name>1512. Number of Good Pairs</name>
    </author>
    <category term="lizncu"/>
    <contributor>
      <name>1512. Number of Good Pairs</name>
    </contributor>
    <rights>Copyright by 1512. Number of Good Pairs</rights>
  </entry>
  <entry>
    <title type="html">lmy</title>
    <id>https://leetcode.innenu.com/1512-Number-of-Good-Pairs/lmy/</id>
    <link href="https://leetcode.innenu.com/1512-Number-of-Good-Pairs/lmy/"/>
    <updated>2021-02-17T16:18:42.628Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>int</span> <span>numIdenticalPairs</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums<span>)</span> <span>{</span>
    <span>int</span> ans <span>=</span> <span>0</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>for</span> <span>(</span><span>int</span> j <span>=</span> i <span>+</span> <span>1</span><span>;</span> j <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> j<span>++</span><span>)</span>
        <span>if</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>==</span> nums<span>[</span>j<span>]</span><span>)</span> <span>{</span>
          ans<span>++</span><span>;</span>
        <span>}</span>
    <span>}</span>
    <span>return</span> ans<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div>]]></content>
    <author>
      <name>1512. Number of Good Pairs</name>
    </author>
    <category term="lmy"/>
    <contributor>
      <name>1512. Number of Good Pairs</name>
    </contributor>
    <rights>Copyright by 1512. Number of Good Pairs</rights>
  </entry>
  <entry>
    <title type="html">1512. Number of Good Pairs</title>
    <id>https://leetcode.innenu.com/1512-Number-of-Good-Pairs/</id>
    <link href="https://leetcode.innenu.com/1512-Number-of-Good-Pairs/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_1512-number-of-good-pairs"> <a href="https://leetcode.com/problems/number-of-good-pairs/" target="_blank" rel="noopener noreferrer">1512. Number of Good Pairs</a></h1>
<p>Given an array of integers <code>nums</code>.</p>
<p>A pair <code>(i,j)</code> is called <em>good</em> if <code>nums[i]</code> == <code>nums[j]</code> and <code>i</code> &lt; <code>j</code>.</p>
<p>Return the number of <em>good</em> pairs.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> nums = [1,2,3,1,1,3]</p>
<p><strong>Output:</strong> 4</p>
<p><strong>Explanation:</strong> There are 4 good pairs (0,3), (0,4), (3,4), (2,5) 0-indexed.</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> nums = [1,1,1,1]</p>
<p><strong>Output:</strong> 6</p>
<p><strong>Explanation:</strong> Each pair in the array are <em>good</em>.</p>
<p><strong>Example 3:</strong></p>
<p><strong>Input:</strong> nums = [1,2,3]</p>
<p><strong>Output:</strong> 0</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>1 &lt;= nums.length &lt;= 100</code></li>
<li><code>1 &lt;= nums[i] &lt;= 100</code></li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">C++</title>
    <id>https://leetcode.innenu.com/1518-Wate-Bottles/C++/</id>
    <link href="https://leetcode.innenu.com/1518-Wate-Bottles/C++/"/>
    <updated>2021-02-17T16:18:42.628Z</updated>
    <content type="html"><![CDATA[<h2 id="lmy"> lmy</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>int</span> <span>numWaterBottles</span><span>(</span><span>int</span> numBottles<span>,</span> <span>int</span> numExchange<span>)</span> <span>{</span>
    <span>int</span> sum <span>=</span> <span>0</span><span>;</span>
    <span>int</span> emptybottles <span>=</span> numBottles<span>;</span>
    <span>while</span> <span>(</span>numBottles <span>!=</span> <span>0</span><span>)</span> <span>{</span>
      sum <span>+=</span> numBottles<span>;</span>
      numBottles <span>=</span> emptybottles <span>/</span> numExchange<span>;</span>
      emptybottles <span>=</span> emptybottles <span>-</span> numBottles <span>*</span> numExchange <span>+</span> numBottles<span>;</span>
    <span>}</span>
    <span>return</span> sum<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div>]]></content>
    <author>
      <name>1518. Wate Bottles</name>
    </author>
    <category term="C++"/>
    <contributor>
      <name>1518. Wate Bottles</name>
    </contributor>
    <rights>Copyright by 1518. Wate Bottles</rights>
  </entry>
  <entry>
    <title type="html">lizncu</title>
    <id>https://leetcode.innenu.com/1518-Wate-Bottles/lizncu/</id>
    <link href="https://leetcode.innenu.com/1518-Wate-Bottles/lizncu/"/>
    <updated>2021-02-17T16:18:42.629Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span> <span>numWaterBottles</span><span>(</span><span>int</span> numBottles<span>,</span> <span>int</span> numExchange<span>)</span> <span>{</span>
    <span>int</span> ans <span>=</span> numBottles<span>;</span>

    <span>int</span> amount <span>=</span> numBottles <span>/</span> numExchange<span>;</span>

    <span>while</span> <span>(</span>amount <span>!=</span> <span>0</span><span>)</span> <span>{</span>
      ans <span>+=</span> amount<span>;</span>
      numBottles <span>-=</span> <span>(</span>numExchange <span>-</span> <span>1</span><span>)</span> <span>*</span> amount<span>;</span>
      amount <span>=</span> numBottles <span>/</span> numExchange<span>;</span>
    <span>}</span>

    <span>return</span> ans<span>;</span>
  <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div>]]></content>
    <author>
      <name>1518. Wate Bottles</name>
    </author>
    <category term="lizncu"/>
    <contributor>
      <name>1518. Wate Bottles</name>
    </contributor>
    <rights>Copyright by 1518. Wate Bottles</rights>
  </entry>
  <entry>
    <title type="html">1518. Water Bottles</title>
    <id>https://leetcode.innenu.com/1518-Wate-Bottles/</id>
    <link href="https://leetcode.innenu.com/1518-Wate-Bottles/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_1518-water-bottles"> <a href="https://leetcode.com/problems/water-bottles/" target="_blank" rel="noopener noreferrer">1518. Water Bottles</a></h1>
<p>Given <code>numBottles</code> full water bottles, you can exchange <code>numExchange</code> empty water bottles for one full water bottle.</p>
<p>The operation of drinking a full water bottle turns it into an empty bottle.</p>
<p>Return the <strong>maximum</strong> number of water bottles you can drink.</p>
<p><strong>Example 1:</strong></p>
<p><strong><img src="https://assets.leetcode.com/uploads/2020/07/01/sample_1_1875.png" alt="LeetCode Image"></strong></p>
<p><strong>Input:</strong> numBottles = 9, numExchange = 3</p>
<p><strong>Output:</strong> 13</p>
<p><strong>Explanation:</strong> You can exchange 3 empty bottles to get 1 full water bottle.
Number of water bottles you can drink: 9 + 3 + 1 = 13.</p>
<p><strong>Example 2:</strong></p>
<p><img src="https://assets.leetcode.com/uploads/2020/07/01/sample_2_1875.png" alt="LeetCode Image"></p>
<p><strong>Input:</strong> numBottles = 15, numExchange = 4</p>
<p><strong>Output:</strong> 19</p>
<p><strong>Explanation:</strong> You can exchange 4 empty bottles to get 1 full water bottle.
Number of water bottles you can drink: 15 + 3 + 1 = 19.</p>
<p><strong>Example 3:</strong></p>
<p><strong>Input:</strong> numBottles = 5, numExchange = 5</p>
<p><strong>Output:</strong> 6</p>
<p><strong>Example 4:</strong></p>
<p><strong>Input:</strong> numBottles = 2, numExchange = 3</p>
<p><strong>Output:</strong> 2</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>1 &lt;= numBottles &lt;= 100</code></li>
<li><code>2 &lt;= numExchange &lt;= 100</code></li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">C++</title>
    <id>https://leetcode.innenu.com/1528-Shuffle-String/C++/</id>
    <link href="https://leetcode.innenu.com/1528-Shuffle-String/C++/"/>
    <updated>2021-02-17T16:18:42.630Z</updated>
    <content type="html"><![CDATA[<h2 id="lmy"> lmy</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  string <span>restoreString</span><span>(</span>string s<span>,</span> vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> indices<span>)</span> <span>{</span>
    string <span>p</span><span>(</span>s<span>)</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> indices<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      p<span>[</span>indices<span>[</span>i<span>]</span><span>]</span> <span>=</span> s<span>[</span>i<span>]</span><span>;</span>
    <span>}</span>
    <span>return</span> p<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div>]]></content>
    <author>
      <name>1528. Shuffle String</name>
    </author>
    <category term="C++"/>
    <contributor>
      <name>1528. Shuffle String</name>
    </contributor>
    <rights>Copyright by 1528. Shuffle String</rights>
  </entry>
  <entry>
    <title type="html">Java</title>
    <id>https://leetcode.innenu.com/1528-Shuffle-String/Java/</id>
    <link href="https://leetcode.innenu.com/1528-Shuffle-String/Java/"/>
    <updated>2021-02-17T16:18:42.631Z</updated>
    <content type="html"><![CDATA[<h2 id="mister-hope"> Mister-Hope</h2>
<div><pre><code><span>/*
 * Runtime: 1 ms, faster than 99.95% of Java online submissions for Shuffle String.
 *
 * Memory Usage: 39.4 MB, less than 7.86% of Java online submissions for Shuffle String.
 */</span>

<span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>String</span> <span>restoreString</span><span>(</span><span>String</span> s<span>,</span> <span>int</span><span>[</span><span>]</span> indices<span>)</span> <span>{</span>
    <span>char</span><span>[</span><span>]</span> chars <span>=</span> <span>new</span> <span>char</span><span>[</span>s<span>.</span><span>length</span><span>(</span><span>)</span><span>]</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> indices<span>.</span>length<span>;</span> i<span>++</span><span>)</span> chars<span>[</span>indices<span>[</span>i<span>]</span><span>]</span> <span>=</span> s<span>.</span><span>charAt</span><span>(</span>i<span>)</span><span>;</span>

    <span>return</span> <span>new</span> <span>String</span><span>(</span>chars<span>)</span><span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div><h2 id="lizncu"> lizncu</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>String</span> <span>restoreString</span><span>(</span><span>String</span> s<span>,</span> <span>int</span><span>[</span><span>]</span> indices<span>)</span> <span>{</span>
    <span>char</span><span>[</span><span>]</span> chars <span>=</span> <span>new</span> <span>char</span><span>[</span>s<span>.</span><span>length</span><span>(</span><span>)</span><span>]</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> indices<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      chars<span>[</span>indices<span>[</span>i<span>]</span><span>]</span> <span>=</span> s<span>.</span><span>charAt</span><span>(</span>i<span>)</span><span>;</span>
    <span>}</span>

    <span>return</span> <span>new</span> <span>String</span><span>(</span>chars<span>)</span><span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div>]]></content>
    <author>
      <name>1528. Shuffle String</name>
    </author>
    <category term="Java"/>
    <contributor>
      <name>1528. Shuffle String</name>
    </contributor>
    <rights>Copyright by 1528. Shuffle String</rights>
  </entry>
  <entry>
    <title type="html">Mister-Hope</title>
    <id>https://leetcode.innenu.com/1528-Shuffle-String/Mister-Hope/</id>
    <link href="https://leetcode.innenu.com/1528-Shuffle-String/Mister-Hope/"/>
    <updated>2021-02-17T16:18:42.631Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>/*
 * Runtime: 1 ms, faster than 99.95% of Java online submissions for Shuffle String.
 *
 * Memory Usage: 39.4 MB, less than 7.86% of Java online submissions for Shuffle String.
 */</span>

<span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>String</span> <span>restoreString</span><span>(</span><span>String</span> s<span>,</span> <span>int</span><span>[</span><span>]</span> indices<span>)</span> <span>{</span>
    <span>char</span><span>[</span><span>]</span> chars <span>=</span> <span>new</span> <span>char</span><span>[</span>s<span>.</span><span>length</span><span>(</span><span>)</span><span>]</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> indices<span>.</span>length<span>;</span> i<span>++</span><span>)</span> chars<span>[</span>indices<span>[</span>i<span>]</span><span>]</span> <span>=</span> s<span>.</span><span>charAt</span><span>(</span>i<span>)</span><span>;</span>

    <span>return</span> <span>new</span> <span>String</span><span>(</span>chars<span>)</span><span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div><h2 id="javascript"> JavaScript</h2>
<div><pre><code><span>/*
 * Runtime: 84 ms, faster than 87.24% of JavaScript online submissions for Shuffle String.
 *
 * Memory Usage: 40.3 MB, less than 7.04% of JavaScript online submissions for Shuffle String.
 */</span>
<span>const</span> <span>restoreString</span> <span>=</span> <span>(</span><span>s<span>,</span> indices</span><span>)</span> <span>=></span> <span>{</span>
  <span>const</span> result <span>=</span> <span>[</span><span>]</span><span>;</span>

  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> indices<span>.</span>length<span>;</span> i<span>++</span><span>)</span> result<span>[</span>indices<span>[</span>i<span>]</span><span>]</span> <span>=</span> s<span>.</span><span>charAt</span><span>(</span>i<span>)</span><span>;</span>

  <span>return</span> result<span>.</span><span>join</span><span>(</span><span>""</span><span>)</span><span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div><h2 id="typescript"> TypeScript</h2>
<div><pre><code><span>/*
 * Runtime: 92 ms, faster than 72.15% of TypeScript online submissions for Shuffle String.
 *
 * Memory Usage: 40.4 MB, less than 35.44% of TypeScript online submissions for Shuffle String.
 */</span>
<span>const</span> restoreString <span>=</span> <span>(</span>s<span>:</span> <span>string</span><span>,</span> indices<span>:</span> <span>number</span><span>[</span><span>]</span><span>)</span><span>:</span> <span>string</span> <span>=></span> <span>{</span>
  <span>const</span> result<span>:</span> <span>string</span><span>[</span><span>]</span> <span>=</span> <span>[</span><span>]</span><span>;</span>

  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> indices<span>.</span>length<span>;</span> i<span>++</span><span>)</span> result<span>[</span>indices<span>[</span>i<span>]</span><span>]</span> <span>=</span> s<span>.</span><span>charAt</span><span>(</span>i<span>)</span><span>;</span>

  <span>return</span> result<span>.</span><span>join</span><span>(</span><span>""</span><span>)</span><span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div>]]></content>
    <author>
      <name>1528. Shuffle String</name>
    </author>
    <category term="Mister-Hope"/>
    <contributor>
      <name>1528. Shuffle String</name>
    </contributor>
    <rights>Copyright by 1528. Shuffle String</rights>
  </entry>
  <entry>
    <title type="html">JavaScript</title>
    <id>https://leetcode.innenu.com/1528-Shuffle-String/JavaScript/</id>
    <link href="https://leetcode.innenu.com/1528-Shuffle-String/JavaScript/"/>
    <updated>2021-02-17T16:18:42.632Z</updated>
    <content type="html"><![CDATA[<h2 id="mister-hope"> Mister-Hope</h2>
<div><pre><code><span>/*
 * Runtime: 84 ms, faster than 87.24% of JavaScript online submissions for Shuffle String.
 *
 * Memory Usage: 40.3 MB, less than 7.04% of JavaScript online submissions for Shuffle String.
 */</span>
<span>const</span> <span>restoreString</span> <span>=</span> <span>(</span><span>s<span>,</span> indices</span><span>)</span> <span>=></span> <span>{</span>
  <span>const</span> result <span>=</span> <span>[</span><span>]</span><span>;</span>

  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> indices<span>.</span>length<span>;</span> i<span>++</span><span>)</span> result<span>[</span>indices<span>[</span>i<span>]</span><span>]</span> <span>=</span> s<span>.</span><span>charAt</span><span>(</span>i<span>)</span><span>;</span>

  <span>return</span> result<span>.</span><span>join</span><span>(</span><span>""</span><span>)</span><span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div>]]></content>
    <author>
      <name>1528. Shuffle String</name>
    </author>
    <category term="JavaScript"/>
    <contributor>
      <name>1528. Shuffle String</name>
    </contributor>
    <rights>Copyright by 1528. Shuffle String</rights>
  </entry>
  <entry>
    <title type="html">TypeScript</title>
    <id>https://leetcode.innenu.com/1528-Shuffle-String/TypeScript/</id>
    <link href="https://leetcode.innenu.com/1528-Shuffle-String/TypeScript/"/>
    <updated>2021-02-17T16:18:42.632Z</updated>
    <content type="html"><![CDATA[<h2 id="mister-hope"> Mister-Hope</h2>
<div><pre><code><span>/*
 * Runtime: 92 ms, faster than 72.15% of TypeScript online submissions for Shuffle String.
 *
 * Memory Usage: 40.4 MB, less than 35.44% of TypeScript online submissions for Shuffle String.
 */</span>
<span>const</span> restoreString <span>=</span> <span>(</span>s<span>:</span> <span>string</span><span>,</span> indices<span>:</span> <span>number</span><span>[</span><span>]</span><span>)</span><span>:</span> <span>string</span> <span>=></span> <span>{</span>
  <span>const</span> result<span>:</span> <span>string</span><span>[</span><span>]</span> <span>=</span> <span>[</span><span>]</span><span>;</span>

  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> indices<span>.</span>length<span>;</span> i<span>++</span><span>)</span> result<span>[</span>indices<span>[</span>i<span>]</span><span>]</span> <span>=</span> s<span>.</span><span>charAt</span><span>(</span>i<span>)</span><span>;</span>

  <span>return</span> result<span>.</span><span>join</span><span>(</span><span>""</span><span>)</span><span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div>]]></content>
    <author>
      <name>1528. Shuffle String</name>
    </author>
    <category term="TypeScript"/>
    <contributor>
      <name>1528. Shuffle String</name>
    </contributor>
    <rights>Copyright by 1528. Shuffle String</rights>
  </entry>
  <entry>
    <title type="html">lizncu</title>
    <id>https://leetcode.innenu.com/1528-Shuffle-String/lizncu/</id>
    <link href="https://leetcode.innenu.com/1528-Shuffle-String/lizncu/"/>
    <updated>2021-02-17T16:18:42.632Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>String</span> <span>restoreString</span><span>(</span><span>String</span> s<span>,</span> <span>int</span><span>[</span><span>]</span> indices<span>)</span> <span>{</span>
    <span>char</span><span>[</span><span>]</span> chars <span>=</span> <span>new</span> <span>char</span><span>[</span>s<span>.</span><span>length</span><span>(</span><span>)</span><span>]</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> indices<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      chars<span>[</span>indices<span>[</span>i<span>]</span><span>]</span> <span>=</span> s<span>.</span><span>charAt</span><span>(</span>i<span>)</span><span>;</span>
    <span>}</span>

    <span>return</span> <span>new</span> <span>String</span><span>(</span>chars<span>)</span><span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div>]]></content>
    <author>
      <name>1528. Shuffle String</name>
    </author>
    <category term="lizncu"/>
    <contributor>
      <name>1528. Shuffle String</name>
    </contributor>
    <rights>Copyright by 1528. Shuffle String</rights>
  </entry>
  <entry>
    <title type="html">lmy</title>
    <id>https://leetcode.innenu.com/1528-Shuffle-String/lmy/</id>
    <link href="https://leetcode.innenu.com/1528-Shuffle-String/lmy/"/>
    <updated>2021-02-17T16:18:42.633Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  string <span>restoreString</span><span>(</span>string s<span>,</span> vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> indices<span>)</span> <span>{</span>
    string <span>p</span><span>(</span>s<span>)</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> indices<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      p<span>[</span>indices<span>[</span>i<span>]</span><span>]</span> <span>=</span> s<span>[</span>i<span>]</span><span>;</span>
    <span>}</span>
    <span>return</span> p<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div>]]></content>
    <author>
      <name>1528. Shuffle String</name>
    </author>
    <category term="lmy"/>
    <contributor>
      <name>1528. Shuffle String</name>
    </contributor>
    <rights>Copyright by 1528. Shuffle String</rights>
  </entry>
  <entry>
    <title type="html">1528. Shuffle String</title>
    <id>https://leetcode.innenu.com/1528-Shuffle-String/</id>
    <link href="https://leetcode.innenu.com/1528-Shuffle-String/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_1528-shuffle-string"> <a href="https://leetcode.com/problems/shuffle-string/" target="_blank" rel="noopener noreferrer">1528. Shuffle String</a></h1>
<p>Given a string <code>s</code> and an integer array <code>indices</code> of the <strong>same length</strong>.</p>
<p>The string <code>s</code> will be shuffled such that the character at the <code>ith</code> position moves to <code>indices[i]</code> in the shuffled string.</p>
<p>Return <em>the shuffled string</em>.</p>
<p><strong>Example 1:</strong></p>
<p><img src="https://assets.leetcode.com/uploads/2020/07/09/q1.jpg" alt="LeetCode Image"></p>
<p><strong>Input:</strong> s = &quot;codeleet&quot;, <code>indices</code> = [4,5,6,7,0,2,1,3]</p>
<p><strong>Output:</strong> &quot;leetcode&quot;</p>
<p><strong>Explanation:</strong> As shown, &quot;codeleet&quot; becomes &quot;leetcode&quot; after shuffling.</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> s = &quot;abc&quot;, <code>indices</code> = [0,1,2]</p>
<p><strong>Output:</strong> &quot;abc&quot;</p>
<p><strong>Explanation:</strong> After shuffling, each character remains in its position.</p>
<p><strong>Example 3:</strong></p>
<p><strong>Input:</strong> s = &quot;aiohn&quot;, <code>indices</code> = [3,1,4,2,0]</p>
<p><strong>Output:</strong> &quot;nihao&quot;</p>
<p><strong>Example 4:</strong></p>
<p><strong>Input:</strong> s = &quot;aaiougrt&quot;, <code>indices</code> = [4,0,2,6,7,3,1,5]</p>
<p><strong>Output:</strong> &quot;arigatou&quot;</p>
<p><strong>Example 5:</strong></p>
<p><strong>Input:</strong> s = &quot;art&quot;, <code>indices</code> = [1,0,2]</p>
<p><strong>Output:</strong> &quot;rat&quot;</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>s.length == indices.length == n</code></li>
<li><code>1 &lt;= n &lt;= 100</code></li>
<li><code>s</code> contains only lower-case English letters.</li>
<li><code>0 &lt;= indices[i] &lt; n</code></li>
<li>All values of <code>indices</code> are unique (i.e. <code>indices</code> is a permutation of the integers from <code>0</code> to <code>n - 1</code>).</li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">Java</title>
    <id>https://leetcode.innenu.com/1572-Matrix-Diagonal-Sum/Java/</id>
    <link href="https://leetcode.innenu.com/1572-Matrix-Diagonal-Sum/Java/"/>
    <updated>2021-02-17T16:18:42.634Z</updated>
    <content type="html"><![CDATA[<h2 id="lizncu"> lizncu</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span> <span>diagonalSum</span><span>(</span><span>int</span><span>[</span><span>]</span><span>[</span><span>]</span> mat<span>)</span> <span>{</span>
    <span>int</span> sum <span>=</span> <span>0</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> mat<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      sum <span>+=</span> mat<span>[</span>i<span>]</span><span>[</span>i<span>]</span><span>;</span>
      sum <span>+=</span> mat<span>[</span>i<span>]</span><span>[</span>mat<span>.</span>length <span>-</span> <span>1</span> <span>-</span> i<span>]</span><span>;</span>
    <span>}</span>

    <span>if</span> <span>(</span>mat<span>.</span>length <span>%</span> <span>2</span> <span>==</span> <span>0</span><span>)</span> <span>{</span>
      <span>return</span> sum<span>;</span>
    <span>}</span>

    <span>else</span> <span>{</span>
      <span>return</span> <span>(</span>sum <span>-</span> mat<span>[</span>mat<span>.</span>length <span>/</span> <span>2</span><span>]</span><span>[</span>mat<span>.</span>length <span>/</span> <span>2</span><span>]</span><span>)</span><span>;</span>
    <span>}</span>
  <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div>]]></content>
    <author>
      <name>1572. Matrix Diagonal Sum</name>
    </author>
    <category term="Java"/>
    <contributor>
      <name>1572. Matrix Diagonal Sum</name>
    </contributor>
    <rights>Copyright by 1572. Matrix Diagonal Sum</rights>
  </entry>
  <entry>
    <title type="html">lizncu</title>
    <id>https://leetcode.innenu.com/1572-Matrix-Diagonal-Sum/lizncu/</id>
    <link href="https://leetcode.innenu.com/1572-Matrix-Diagonal-Sum/lizncu/"/>
    <updated>2021-02-17T16:18:42.634Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span> <span>diagonalSum</span><span>(</span><span>int</span><span>[</span><span>]</span><span>[</span><span>]</span> mat<span>)</span> <span>{</span>
    <span>int</span> sum <span>=</span> <span>0</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> mat<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      sum <span>+=</span> mat<span>[</span>i<span>]</span><span>[</span>i<span>]</span><span>;</span>
      sum <span>+=</span> mat<span>[</span>i<span>]</span><span>[</span>mat<span>.</span>length <span>-</span> <span>1</span> <span>-</span> i<span>]</span><span>;</span>
    <span>}</span>

    <span>if</span> <span>(</span>mat<span>.</span>length <span>%</span> <span>2</span> <span>==</span> <span>0</span><span>)</span> <span>{</span>
      <span>return</span> sum<span>;</span>
    <span>}</span>

    <span>else</span> <span>{</span>
      <span>return</span> <span>(</span>sum <span>-</span> mat<span>[</span>mat<span>.</span>length <span>/</span> <span>2</span><span>]</span><span>[</span>mat<span>.</span>length <span>/</span> <span>2</span><span>]</span><span>)</span><span>;</span>
    <span>}</span>
  <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div>]]></content>
    <author>
      <name>1572. Matrix Diagonal Sum</name>
    </author>
    <category term="lizncu"/>
    <contributor>
      <name>1572. Matrix Diagonal Sum</name>
    </contributor>
    <rights>Copyright by 1572. Matrix Diagonal Sum</rights>
  </entry>
  <entry>
    <title type="html">1572. Matrix Diagonal Sum</title>
    <id>https://leetcode.innenu.com/1572-Matrix-Diagonal-Sum/</id>
    <link href="https://leetcode.innenu.com/1572-Matrix-Diagonal-Sum/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_1572-matrix-diagonal-sum"> <a href="https://leetcode.com/problems/matrix-diagonal-sum/" target="_blank" rel="noopener noreferrer">1572. Matrix Diagonal Sum</a></h1>
<p>Given a square matrix <code>mat</code>, return the sum of the matrix diagonals.</p>
<p>Only include the sum of all the elements on the primary diagonal and all the elements on the secondary diagonal that are not part of the primary diagonal.</p>
<p><strong>Example 1:</strong></p>
<p><img src="https://assets.leetcode.com/uploads/2020/08/14/sample_1911.png" alt="LeetCode Image"></p>
<p><strong>Input:</strong> mat = [[<strong>1</strong>,2,<strong>3</strong>],
[4,<strong>5</strong>,6],
[<strong>7</strong>,8,<strong>9</strong>]]</p>
<p><strong>Output:</strong> 25</p>
<p><strong>Explanation:</strong> Diagonals sum: 1 + 5 + 9 + 3 + 7 = 25
Notice that element mat[1][1] = 5 is counted only once.</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> mat = [[<strong>1</strong>,1,1,<strong>1</strong>],
[1,<strong>1</strong>,<strong>1</strong>,1],
[1,<strong>1</strong>,<strong>1</strong>,1],
[<strong>1</strong>,1,1,<strong>1</strong>]]</p>
<p><strong>Output:</strong> 8</p>
<p><strong>Example 3:</strong></p>
<p><strong>Input:</strong> mat = [[<strong>5</strong>]]</p>
<p><strong>Output:</strong> 5</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>n == mat.length == mat[i].length</code></li>
<li><code>1 &lt;= n &lt;= 100</code></li>
<li><code>1 &lt;= mat[i][j] &lt;= 100</code></li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">Java</title>
    <id>https://leetcode.innenu.com/1603-Design-Parking-System/Java/</id>
    <link href="https://leetcode.innenu.com/1603-Design-Parking-System/Java/"/>
    <updated>2021-02-17T16:18:42.635Z</updated>
    <content type="html"><![CDATA[<h2 id="lizncu"> lizncu</h2>
<div><pre><code><span>class</span> <span>ParkingSystem</span> <span>{</span>
  <span>int</span> site<span>[</span><span>]</span><span>;</span>

  <span>public</span> <span>ParkingSystem</span><span>(</span><span>int</span> big<span>,</span> <span>int</span> medium<span>,</span> <span>int</span> small<span>)</span> <span>{</span>
    site <span>=</span> <span>new</span> <span>int</span><span>[</span><span>]</span> <span>{</span>big<span>,</span> medium<span>,</span> small<span>}</span><span>;</span>
  <span>}</span>

  <span>public</span> <span>boolean</span> <span>addCar</span><span>(</span><span>int</span> carType<span>)</span> <span>{</span>
    <span>if</span> <span>(</span>site<span>[</span>carType <span>-</span> <span>1</span><span>]</span> <span>></span> <span>0</span><span>)</span> <span>{</span>
      site<span>[</span>carType <span>-</span> <span>1</span><span>]</span><span>--</span><span>;</span>
      <span>return</span> <span>true</span><span>;</span>
    <span>}</span>
    <span>return</span> <span>false</span><span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>]]></content>
    <author>
      <name>1603. Design Parking System</name>
    </author>
    <category term="Java"/>
    <contributor>
      <name>1603. Design Parking System</name>
    </contributor>
    <rights>Copyright by 1603. Design Parking System</rights>
  </entry>
  <entry>
    <title type="html">lizncu</title>
    <id>https://leetcode.innenu.com/1603-Design-Parking-System/lizncu/</id>
    <link href="https://leetcode.innenu.com/1603-Design-Parking-System/lizncu/"/>
    <updated>2021-02-17T16:18:42.635Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>class</span> <span>ParkingSystem</span> <span>{</span>
  <span>int</span> site<span>[</span><span>]</span><span>;</span>

  <span>public</span> <span>ParkingSystem</span><span>(</span><span>int</span> big<span>,</span> <span>int</span> medium<span>,</span> <span>int</span> small<span>)</span> <span>{</span>
    site <span>=</span> <span>new</span> <span>int</span><span>[</span><span>]</span> <span>{</span>big<span>,</span> medium<span>,</span> small<span>}</span><span>;</span>
  <span>}</span>

  <span>public</span> <span>boolean</span> <span>addCar</span><span>(</span><span>int</span> carType<span>)</span> <span>{</span>
    <span>if</span> <span>(</span>site<span>[</span>carType <span>-</span> <span>1</span><span>]</span> <span>></span> <span>0</span><span>)</span> <span>{</span>
      site<span>[</span>carType <span>-</span> <span>1</span><span>]</span><span>--</span><span>;</span>
      <span>return</span> <span>true</span><span>;</span>
    <span>}</span>
    <span>return</span> <span>false</span><span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>]]></content>
    <author>
      <name>1603. Design Parking System</name>
    </author>
    <category term="lizncu"/>
    <contributor>
      <name>1603. Design Parking System</name>
    </contributor>
    <rights>Copyright by 1603. Design Parking System</rights>
  </entry>
  <entry>
    <title type="html">1603. Design Parking System</title>
    <id>https://leetcode.innenu.com/1603-Design-Parking-System/</id>
    <link href="https://leetcode.innenu.com/1603-Design-Parking-System/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_1603-design-parking-system"> <a href="https://leetcode.com/problems/design-parking-system/" target="_blank" rel="noopener noreferrer">1603. Design Parking System</a></h1>
<p>Design a parking system for a parking lot. The parking lot has three kinds of parking spaces: big, medium, and small, with a fixed number of slots for each size.</p>
<p>Implement the <code>ParkingSystem</code> class:</p>
<ul>
<li><code>ParkingSystem(int big, int medium, int small)</code> Initializes object of the <code>ParkingSystem</code> class. The number of slots for each parking space are given as part of the constructor.</li>
<li><code>bool addCar(int carType)</code> Checks whether there is a parking space of <code>carType</code> for the car that wants to get into the parking lot. <code>carType</code> can be of three kinds: big, medium, or small, which are represented by <code>1</code>, <code>2</code>, and <code>3</code> respectively. <strong>A car can only park in a parking space of its</strong> <code>carType</code>. If there is no space available, return <code>false</code>, else park the car in that size space and return <code>true</code>.</li>
</ul>
<p><strong>Example 1:</strong></p>
<p><strong>Input</strong>
[&quot;ParkingSystem&quot;, &quot;addCar&quot;, &quot;addCar&quot;, &quot;addCar&quot;, &quot;addCar&quot;]
[[1, 1, 0], [1], [2], [3], [1]]
<strong>Output</strong>
[null, true, true, false, false]</p>
<p><strong>Explanation</strong>
ParkingSystem parkingSystem = new ParkingSystem(1, 1, 0);
parkingSystem.addCar(1); // return true because there is 1 available slot for a big car
parkingSystem.addCar(2); // return true because there is 1 available slot for a medium car
parkingSystem.addCar(3); // return false because there is no available slot for a small car
parkingSystem.addCar(1); // return false because there is no available slot for a big car. It is already occupied.</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>0 &lt;= big, medium, small &lt;= 1000</code></li>
<li><code>carType</code> is <code>1</code>, <code>2</code>, or <code>3</code></li>
<li>At most <code>1000</code> calls will be made to <code>addCar</code></li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">C++</title>
    <id>https://leetcode.innenu.com/167-two-sum-ii-input-array-is-sorted/C++/</id>
    <link href="https://leetcode.innenu.com/167-two-sum-ii-input-array-is-sorted/C++/"/>
    <updated>2021-02-17T16:18:42.636Z</updated>
    <content type="html"><![CDATA[<h2 id="lmy"> lmy</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  vector<span>&lt;</span><span>int</span><span>></span> <span>twoSum</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> numbers<span>,</span> <span>int</span> target<span>)</span> <span>{</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> numbers<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>int</span> left <span>=</span> i <span>+</span> <span>1</span><span>;</span>
      <span>int</span> deft <span>=</span> numbers<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>;</span>
      <span>while</span> <span>(</span>left <span>&lt;</span> deft<span>)</span> <span>{</span>
        <span>int</span> mid <span>=</span> <span>(</span>left <span>+</span> deft<span>)</span> <span>/</span> <span>2</span><span>;</span>
        <span>int</span> sum <span>=</span> numbers<span>[</span>i<span>]</span> <span>+</span> numbers<span>[</span>mid<span>]</span><span>;</span>
      <span>}</span>
    <span>}</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div>]]></content>
    <author>
      <name>167. Two Sum Ii Input Array Is Sorted</name>
    </author>
    <category term="C++"/>
    <contributor>
      <name>167. Two Sum Ii Input Array Is Sorted</name>
    </contributor>
    <rights>Copyright by 167. Two Sum Ii Input Array Is Sorted</rights>
  </entry>
  <entry>
    <title type="html">lmy</title>
    <id>https://leetcode.innenu.com/167-two-sum-ii-input-array-is-sorted/lmy/</id>
    <link href="https://leetcode.innenu.com/167-two-sum-ii-input-array-is-sorted/lmy/"/>
    <updated>2021-02-17T16:18:42.636Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  vector<span>&lt;</span><span>int</span><span>></span> <span>twoSum</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> numbers<span>,</span> <span>int</span> target<span>)</span> <span>{</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> numbers<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>int</span> left <span>=</span> i <span>+</span> <span>1</span><span>;</span>
      <span>int</span> deft <span>=</span> numbers<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>;</span>
      <span>while</span> <span>(</span>left <span>&lt;</span> deft<span>)</span> <span>{</span>
        <span>int</span> mid <span>=</span> <span>(</span>left <span>+</span> deft<span>)</span> <span>/</span> <span>2</span><span>;</span>
        <span>int</span> sum <span>=</span> numbers<span>[</span>i<span>]</span> <span>+</span> numbers<span>[</span>mid<span>]</span><span>;</span>
      <span>}</span>
    <span>}</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div>]]></content>
    <author>
      <name>167. Two Sum Ii Input Array Is Sorted</name>
    </author>
    <category term="lmy"/>
    <contributor>
      <name>167. Two Sum Ii Input Array Is Sorted</name>
    </contributor>
    <rights>Copyright by 167. Two Sum Ii Input Array Is Sorted</rights>
  </entry>
  <entry>
    <title type="html">167. Two Sum II - Input array is sorted</title>
    <id>https://leetcode.innenu.com/167-two-sum-ii-input-array-is-sorted/</id>
    <link href="https://leetcode.innenu.com/167-two-sum-ii-input-array-is-sorted/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_167-two-sum-ii-input-array-is-sorted"> <a href="https://leetcode.com/problems/two-sum-ii-input-array-is-sorted/" target="_blank" rel="noopener noreferrer">167. Two Sum II - Input array is sorted</a></h1>
<p>Given an array of integers that is already <strong><em>sorted in ascending order</em></strong>, find two numbers such that they add up to a specific target number.</p>
<p>The function twoSum should return indices of the two numbers such that they add up to the target, where index1 must be less than index2.</p>
<p><strong>Note:</strong></p>
<ul>
<li>Your returned answers (both index1 and index2) are not zero-based.</li>
<li>You may assume that each input would have <em>exactly</em> one solution and you may not use the <em>same</em> element twice.</li>
</ul>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> numbers = [2,7,11,15], target = 9</p>
<p><strong>Output:</strong> [1,2]</p>
<p><strong>Explanation:</strong> The sum of 2 and 7 is 9. Therefore index1 = 1, index2 = 2.</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> numbers = [2,3,4], target = 6</p>
<p><strong>Output:</strong> [1,3]</p>
<p><strong>Example 3:</strong></p>
<p><strong>Input:</strong> numbers = [-1,0], target = -1</p>
<p><strong>Output:</strong> [1,2]</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>2 &lt;= nums.length &lt;= 3 * 104</code></li>
<li><code>-1000 &lt;= nums[i] &lt;= 1000</code></li>
<li><code>nums</code> is sorted in <strong>increasing order</strong>.</li>
<li><code>-1000 &lt;= target &lt;= 1000</code></li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">C++</title>
    <id>https://leetcode.innenu.com/198-house-robbe/C++/</id>
    <link href="https://leetcode.innenu.com/198-house-robbe/C++/"/>
    <updated>2021-02-17T16:18:42.638Z</updated>
    <content type="html"><![CDATA[<h2 id="virgil"> Virgil</h2>
<div><pre><code><span>// similar to 17.16 the masseuse Icci</span>
<span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>
<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>
<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>int</span> <span>rob</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums<span>)</span> <span>{</span>
    <span>if</span> <span>(</span>nums<span>.</span><span>size</span><span>(</span><span>)</span> <span>==</span> <span>0</span><span>)</span>
      <span>return</span> <span>0</span><span>;</span>
    <span>else</span> <span>if</span> <span>(</span>nums<span>.</span><span>size</span><span>(</span><span>)</span> <span>==</span> <span>1</span><span>)</span>
      <span>return</span> nums<span>[</span><span>0</span><span>]</span><span>;</span>
    <span>else</span> <span>{</span>
      vector<span>&lt;</span><span>int</span><span>></span> <span>dp</span><span>(</span>nums<span>.</span><span>size</span><span>(</span><span>)</span><span>)</span><span>;</span>
      dp<span>[</span><span>0</span><span>]</span> <span>=</span> nums<span>[</span><span>0</span><span>]</span><span>;</span>
      dp<span>[</span><span>1</span><span>]</span> <span>=</span> <span>max</span><span>(</span>nums<span>[</span><span>0</span><span>]</span><span>,</span> nums<span>[</span><span>1</span><span>]</span><span>)</span><span>;</span>
      <span>int</span> maxn <span>=</span> dp<span>[</span><span>1</span><span>]</span><span>;</span>
      <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>2</span><span>;</span> i <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
        dp<span>[</span>i<span>]</span> <span>=</span> <span>max</span><span>(</span>dp<span>[</span>i <span>-</span> <span>1</span><span>]</span><span>,</span> dp<span>[</span>i <span>-</span> <span>2</span><span>]</span> <span>+</span> nums<span>[</span>i<span>]</span><span>)</span><span>;</span>
        maxn <span>=</span> <span>max</span><span>(</span>dp<span>[</span>i<span>]</span><span>,</span> maxn<span>)</span><span>;</span>
      <span>}</span>
      <span>return</span> maxn<span>;</span>
    <span>}</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br></div></div>]]></content>
    <author>
      <name>198. House Robbe</name>
    </author>
    <category term="C++"/>
    <contributor>
      <name>198. House Robbe</name>
    </contributor>
    <rights>Copyright by 198. House Robbe</rights>
  </entry>
  <entry>
    <title type="html">Virgil</title>
    <id>https://leetcode.innenu.com/198-house-robbe/Virgil/</id>
    <link href="https://leetcode.innenu.com/198-house-robbe/Virgil/"/>
    <updated>2021-02-17T16:18:42.639Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span>// similar to 17.16 the masseuse Icci</span>
<span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>
<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>
<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>int</span> <span>rob</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums<span>)</span> <span>{</span>
    <span>if</span> <span>(</span>nums<span>.</span><span>size</span><span>(</span><span>)</span> <span>==</span> <span>0</span><span>)</span>
      <span>return</span> <span>0</span><span>;</span>
    <span>else</span> <span>if</span> <span>(</span>nums<span>.</span><span>size</span><span>(</span><span>)</span> <span>==</span> <span>1</span><span>)</span>
      <span>return</span> nums<span>[</span><span>0</span><span>]</span><span>;</span>
    <span>else</span> <span>{</span>
      vector<span>&lt;</span><span>int</span><span>></span> <span>dp</span><span>(</span>nums<span>.</span><span>size</span><span>(</span><span>)</span><span>)</span><span>;</span>
      dp<span>[</span><span>0</span><span>]</span> <span>=</span> nums<span>[</span><span>0</span><span>]</span><span>;</span>
      dp<span>[</span><span>1</span><span>]</span> <span>=</span> <span>max</span><span>(</span>nums<span>[</span><span>0</span><span>]</span><span>,</span> nums<span>[</span><span>1</span><span>]</span><span>)</span><span>;</span>
      <span>int</span> maxn <span>=</span> dp<span>[</span><span>1</span><span>]</span><span>;</span>
      <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>2</span><span>;</span> i <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
        dp<span>[</span>i<span>]</span> <span>=</span> <span>max</span><span>(</span>dp<span>[</span>i <span>-</span> <span>1</span><span>]</span><span>,</span> dp<span>[</span>i <span>-</span> <span>2</span><span>]</span> <span>+</span> nums<span>[</span>i<span>]</span><span>)</span><span>;</span>
        maxn <span>=</span> <span>max</span><span>(</span>dp<span>[</span>i<span>]</span><span>,</span> maxn<span>)</span><span>;</span>
      <span>}</span>
      <span>return</span> maxn<span>;</span>
    <span>}</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br></div></div>]]></content>
    <author>
      <name>198. House Robbe</name>
    </author>
    <category term="Virgil"/>
    <contributor>
      <name>198. House Robbe</name>
    </contributor>
    <rights>Copyright by 198. House Robbe</rights>
  </entry>
  <entry>
    <title type="html">198. House Robber</title>
    <id>https://leetcode.innenu.com/198-house-robbe/</id>
    <link href="https://leetcode.innenu.com/198-house-robbe/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_198-house-robber"> <a href="https://leetcode.com/problems/house-robber/" target="_blank" rel="noopener noreferrer">198. House Robber</a></h1>
<p>You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed, the only constraint stopping you from robbing each of them is that adjacent houses have security system connected and <strong>it will automatically contact the police if two adjacent houses were broken into on the same night</strong>.</p>
<p>Given a list of non-negative integers representing the amount of money of each house, determine the maximum amount of money you can rob tonight <strong>without alerting the police</strong>.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> nums = [1,2,3,1]</p>
<p><strong>Output:</strong> 4</p>
<p><strong>Explanation:</strong></p>
<p>Rob house 1 (money = 1) and then rob house 3 (money = 3).</p>
<p>Total amount you can rob = 1 + 3 = 4.</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> nums = [2,7,9,3,1]</p>
<p><strong>Output:</strong> 12</p>
<p><strong>Explanation:</strong></p>
<p>Rob house 1 (money = 2), rob house 3 (money = 9) and rob house 5 (money = 1).</p>
<p>Total amount you can rob = 2 + 9 + 1 = 12.</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>0 &lt;= nums.length &lt;= 100</code></li>
<li><code>0 &lt;= nums[i] &lt;= 400</code></li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">Java</title>
    <id>https://leetcode.innenu.com/2-add-two-numbers/Java/</id>
    <link href="https://leetcode.innenu.com/2-add-two-numbers/Java/"/>
    <updated>2021-02-17T16:18:42.640Z</updated>
    <content type="html"><![CDATA[<h2 id="lizncu"> lizncu</h2>
<div><pre><code><span>/*
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */</span>
<span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>ListNode</span> <span>addTwoNumbers</span><span>(</span><span>ListNode</span> l1<span>,</span> <span>ListNode</span> l2<span>)</span> <span>{</span>
    <span>ListNode</span> s <span>=</span> <span>new</span> <span>ListNode</span><span>(</span><span>-</span><span>1</span><span>)</span><span>;</span>

    <span>ListNode</span> t <span>=</span> s<span>;</span>

    <span>int</span> num <span>=</span> <span>0</span><span>;</span>

    <span>while</span> <span>(</span><span>(</span>l1 <span>!=</span> <span>null</span><span>)</span> <span>||</span> <span>(</span>l2 <span>!=</span> <span>null</span><span>)</span> <span>||</span> <span>(</span>num <span>!=</span> <span>0</span><span>)</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>l1 <span>!=</span> <span>null</span><span>)</span> <span>{</span>
        num <span>+=</span> l1<span>.</span>val<span>;</span>
        l1 <span>=</span> l1<span>.</span>next<span>;</span>
      <span>}</span>

      <span>if</span> <span>(</span>l2 <span>!=</span> <span>null</span><span>)</span> <span>{</span>
        num <span>+=</span> l2<span>.</span>val<span>;</span>
        l2 <span>=</span> l2<span>.</span>next<span>;</span>
      <span>}</span>

      t<span>.</span>next <span>=</span> <span>new</span> <span>ListNode</span><span>(</span>num <span>%</span> <span>10</span><span>)</span><span>;</span>

      num <span>=</span> num <span>/</span> <span>10</span><span>;</span>

      t <span>=</span> t<span>.</span>next<span>;</span>
    <span>}</span>

    <span>return</span> s<span>.</span>next<span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br></div></div>]]></content>
    <author>
      <name>2. Add Two Numbers</name>
    </author>
    <category term="Java"/>
    <contributor>
      <name>2. Add Two Numbers</name>
    </contributor>
    <rights>Copyright by 2. Add Two Numbers</rights>
  </entry>
  <entry>
    <title type="html">JavaScript</title>
    <id>https://leetcode.innenu.com/2-add-two-numbers/JavaScript/</id>
    <link href="https://leetcode.innenu.com/2-add-two-numbers/JavaScript/"/>
    <updated>2021-02-17T16:18:42.640Z</updated>
    <content type="html"><![CDATA[<h2 id="mister-hope"> Mister-Hope</h2>
<div><pre><code><span>/*
 * Runtime: 120 ms, faster than 96.86% of JavaScript online submissions for Add Two Numbers.
 *
 * Memory Usage: 43.7 MB, less than 6.82% of JavaScript online submissions for Add Two Numbers.
 */</span>

<span>const</span> <span>addTwoNumbers</span> <span>=</span> <span>(</span><span>l1<span>,</span> l2</span><span>)</span> <span>=></span> <span>{</span>
  <span>let</span> l1Pointer <span>=</span> l1<span>;</span> <span>// list 1 pointer</span>
  <span>let</span> l2Pointer <span>=</span> l2<span>;</span> <span>// list 2 pointer</span>

  <span>let</span> prev <span>=</span> <span>new</span> <span>ListNode</span><span>(</span><span>0</span><span>)</span><span>;</span>
  <span>let</span> prevPointer <span>=</span> prev<span>;</span> <span>// prev pointer</span>
  <span>let</span> needCarry <span>=</span> <span>false</span><span>;</span>

  <span>while</span> <span>(</span>l1Pointer <span>||</span> l2Pointer<span>)</span> <span>{</span>
    <span>let</span> currentPosition <span>=</span> l1Pointer <span>||</span> l2Pointer<span>;</span>
    <span>let</span> sum <span>=</span>
      <span>(</span>l1Pointer<span>?.</span>val <span>||</span> <span>0</span><span>)</span> <span>+</span> <span>(</span>l2Pointer<span>?.</span>val <span>||</span> <span>0</span><span>)</span> <span>+</span> <span>(</span>needCarry <span>?</span> <span>1</span> <span>:</span> <span>0</span><span>)</span><span>;</span>

    <span>if</span> <span>(</span>sum <span>></span> <span>9</span><span>)</span> <span>{</span>
      sum <span>=</span> sum <span>-</span> <span>10</span><span>;</span>
      needCarry <span>=</span> <span>true</span><span>;</span>
    <span>}</span> <span>else</span> needCarry <span>=</span> <span>false</span><span>;</span>

    currentPosition<span>.</span>val <span>=</span> sum<span>;</span>
    prevPointer<span>.</span>next <span>=</span> currentPosition<span>;</span>
    prevPointer <span>=</span> prevPointer<span>.</span>next<span>;</span>

    <span>if</span> <span>(</span>l1Pointer<span>)</span> l1Pointer <span>=</span> l1Pointer<span>.</span>next<span>;</span>
    <span>if</span> <span>(</span>l2Pointer<span>)</span> l2Pointer <span>=</span> l2Pointer<span>.</span>next<span>;</span>
  <span>}</span>

  <span>if</span> <span>(</span>needCarry<span>)</span> prevPointer<span>.</span>next <span>=</span> <span>new</span> <span>ListNode</span><span>(</span><span>1</span><span>)</span><span>;</span>

  <span>return</span> prev<span>.</span>next<span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br></div></div>]]></content>
    <author>
      <name>2. Add Two Numbers</name>
    </author>
    <category term="JavaScript"/>
    <contributor>
      <name>2. Add Two Numbers</name>
    </contributor>
    <rights>Copyright by 2. Add Two Numbers</rights>
  </entry>
  <entry>
    <title type="html">Mister-Hope</title>
    <id>https://leetcode.innenu.com/2-add-two-numbers/Mister-Hope/</id>
    <link href="https://leetcode.innenu.com/2-add-two-numbers/Mister-Hope/"/>
    <updated>2021-02-17T16:18:42.642Z</updated>
    <content type="html"><![CDATA[<h2 id="javascript"> JavaScript</h2>
<div><pre><code><span>/*
 * Runtime: 120 ms, faster than 96.86% of JavaScript online submissions for Add Two Numbers.
 *
 * Memory Usage: 43.7 MB, less than 6.82% of JavaScript online submissions for Add Two Numbers.
 */</span>

<span>const</span> <span>addTwoNumbers</span> <span>=</span> <span>(</span><span>l1<span>,</span> l2</span><span>)</span> <span>=></span> <span>{</span>
  <span>let</span> l1Pointer <span>=</span> l1<span>;</span> <span>// list 1 pointer</span>
  <span>let</span> l2Pointer <span>=</span> l2<span>;</span> <span>// list 2 pointer</span>

  <span>let</span> prev <span>=</span> <span>new</span> <span>ListNode</span><span>(</span><span>0</span><span>)</span><span>;</span>
  <span>let</span> prevPointer <span>=</span> prev<span>;</span> <span>// prev pointer</span>
  <span>let</span> needCarry <span>=</span> <span>false</span><span>;</span>

  <span>while</span> <span>(</span>l1Pointer <span>||</span> l2Pointer<span>)</span> <span>{</span>
    <span>let</span> currentPosition <span>=</span> l1Pointer <span>||</span> l2Pointer<span>;</span>
    <span>let</span> sum <span>=</span>
      <span>(</span>l1Pointer<span>?.</span>val <span>||</span> <span>0</span><span>)</span> <span>+</span> <span>(</span>l2Pointer<span>?.</span>val <span>||</span> <span>0</span><span>)</span> <span>+</span> <span>(</span>needCarry <span>?</span> <span>1</span> <span>:</span> <span>0</span><span>)</span><span>;</span>

    <span>if</span> <span>(</span>sum <span>></span> <span>9</span><span>)</span> <span>{</span>
      sum <span>=</span> sum <span>-</span> <span>10</span><span>;</span>
      needCarry <span>=</span> <span>true</span><span>;</span>
    <span>}</span> <span>else</span> needCarry <span>=</span> <span>false</span><span>;</span>

    currentPosition<span>.</span>val <span>=</span> sum<span>;</span>
    prevPointer<span>.</span>next <span>=</span> currentPosition<span>;</span>
    prevPointer <span>=</span> prevPointer<span>.</span>next<span>;</span>

    <span>if</span> <span>(</span>l1Pointer<span>)</span> l1Pointer <span>=</span> l1Pointer<span>.</span>next<span>;</span>
    <span>if</span> <span>(</span>l2Pointer<span>)</span> l2Pointer <span>=</span> l2Pointer<span>.</span>next<span>;</span>
  <span>}</span>

  <span>if</span> <span>(</span>needCarry<span>)</span> prevPointer<span>.</span>next <span>=</span> <span>new</span> <span>ListNode</span><span>(</span><span>1</span><span>)</span><span>;</span>

  <span>return</span> prev<span>.</span>next<span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br></div></div><h2 id="typescript"> TypeScript</h2>
<div><pre><code><span>/*
 * Runtime: 132 ms, faster than 87.59% of TypeScript online submissions for Add Two Numbers.
 *
 * Memory Usage: 44.5 MB, less than 5.32% of TypeScript online submissions for Add Two Numbers.
 */</span>

<span>const</span> addTwoNumbers <span>=</span> <span>(</span>
  l1<span>:</span> ListNode <span>|</span> <span>null</span><span>,</span>
  l2<span>:</span> ListNode <span>|</span> <span>null</span>
<span>)</span><span>:</span> ListNode <span>|</span> <span>null</span> <span>=></span> <span>{</span>
  <span>let</span> l1Pointer <span>=</span> l1<span>;</span> <span>// list 1 pointer</span>
  <span>let</span> l2Pointer <span>=</span> l2<span>;</span> <span>// list 2 pointer</span>

  <span>let</span> prev <span>=</span> <span>new</span> <span>ListNode</span><span>(</span><span>0</span><span>)</span><span>;</span>
  <span>let</span> prevPointer <span>=</span> prev<span>;</span> <span>// prev pointer</span>
  <span>let</span> needCarry <span>=</span> <span>false</span><span>;</span>

  <span>let</span> currentPosition <span>=</span> l1Pointer <span>||</span> l2Pointer<span>;</span>

  <span>while</span> <span>(</span>currentPosition<span>)</span> <span>{</span>
    <span>let</span> sum <span>=</span>
      <span>(</span>l1Pointer<span>?.</span>val <span>||</span> <span>0</span><span>)</span> <span>+</span> <span>(</span>l2Pointer<span>?.</span>val <span>||</span> <span>0</span><span>)</span> <span>+</span> <span>(</span>needCarry <span>?</span> <span>1</span> <span>:</span> <span>0</span><span>)</span><span>;</span>

    <span>if</span> <span>(</span>sum <span>></span> <span>9</span><span>)</span> <span>{</span>
      sum <span>=</span> sum <span>-</span> <span>10</span><span>;</span>
      needCarry <span>=</span> <span>true</span><span>;</span>
    <span>}</span> <span>else</span> needCarry <span>=</span> <span>false</span><span>;</span>

    currentPosition<span>.</span>val <span>=</span> sum<span>;</span>
    prevPointer<span>.</span>next <span>=</span> currentPosition<span>;</span>
    prevPointer <span>=</span> prevPointer<span>.</span>next<span>;</span>

    <span>if</span> <span>(</span>l1Pointer<span>)</span> l1Pointer <span>=</span> l1Pointer<span>.</span>next<span>;</span>
    <span>if</span> <span>(</span>l2Pointer<span>)</span> l2Pointer <span>=</span> l2Pointer<span>.</span>next<span>;</span>
    currentPosition <span>=</span> l1Pointer <span>||</span> l2Pointer<span>;</span>
  <span>}</span>

  <span>if</span> <span>(</span>needCarry<span>)</span> prevPointer<span>.</span>next <span>=</span> <span>new</span> <span>ListNode</span><span>(</span><span>1</span><span>)</span><span>;</span>

  <span>return</span> prev<span>.</span>next<span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br></div></div>]]></content>
    <author>
      <name>2. Add Two Numbers</name>
    </author>
    <category term="Mister-Hope"/>
    <contributor>
      <name>2. Add Two Numbers</name>
    </contributor>
    <rights>Copyright by 2. Add Two Numbers</rights>
  </entry>
  <entry>
    <title type="html">TypeScript</title>
    <id>https://leetcode.innenu.com/2-add-two-numbers/TypeScript/</id>
    <link href="https://leetcode.innenu.com/2-add-two-numbers/TypeScript/"/>
    <updated>2021-02-17T16:18:42.642Z</updated>
    <content type="html"><![CDATA[<h2 id="mister-hope"> Mister-Hope</h2>
<div><pre><code><span>/*
 * Runtime: 132 ms, faster than 87.59% of TypeScript online submissions for Add Two Numbers.
 *
 * Memory Usage: 44.5 MB, less than 5.32% of TypeScript online submissions for Add Two Numbers.
 */</span>

<span>const</span> addTwoNumbers <span>=</span> <span>(</span>
  l1<span>:</span> ListNode <span>|</span> <span>null</span><span>,</span>
  l2<span>:</span> ListNode <span>|</span> <span>null</span>
<span>)</span><span>:</span> ListNode <span>|</span> <span>null</span> <span>=></span> <span>{</span>
  <span>let</span> l1Pointer <span>=</span> l1<span>;</span> <span>// list 1 pointer</span>
  <span>let</span> l2Pointer <span>=</span> l2<span>;</span> <span>// list 2 pointer</span>

  <span>let</span> prev <span>=</span> <span>new</span> <span>ListNode</span><span>(</span><span>0</span><span>)</span><span>;</span>
  <span>let</span> prevPointer <span>=</span> prev<span>;</span> <span>// prev pointer</span>
  <span>let</span> needCarry <span>=</span> <span>false</span><span>;</span>

  <span>let</span> currentPosition <span>=</span> l1Pointer <span>||</span> l2Pointer<span>;</span>

  <span>while</span> <span>(</span>currentPosition<span>)</span> <span>{</span>
    <span>let</span> sum <span>=</span>
      <span>(</span>l1Pointer<span>?.</span>val <span>||</span> <span>0</span><span>)</span> <span>+</span> <span>(</span>l2Pointer<span>?.</span>val <span>||</span> <span>0</span><span>)</span> <span>+</span> <span>(</span>needCarry <span>?</span> <span>1</span> <span>:</span> <span>0</span><span>)</span><span>;</span>

    <span>if</span> <span>(</span>sum <span>></span> <span>9</span><span>)</span> <span>{</span>
      sum <span>=</span> sum <span>-</span> <span>10</span><span>;</span>
      needCarry <span>=</span> <span>true</span><span>;</span>
    <span>}</span> <span>else</span> needCarry <span>=</span> <span>false</span><span>;</span>

    currentPosition<span>.</span>val <span>=</span> sum<span>;</span>
    prevPointer<span>.</span>next <span>=</span> currentPosition<span>;</span>
    prevPointer <span>=</span> prevPointer<span>.</span>next<span>;</span>

    <span>if</span> <span>(</span>l1Pointer<span>)</span> l1Pointer <span>=</span> l1Pointer<span>.</span>next<span>;</span>
    <span>if</span> <span>(</span>l2Pointer<span>)</span> l2Pointer <span>=</span> l2Pointer<span>.</span>next<span>;</span>
    currentPosition <span>=</span> l1Pointer <span>||</span> l2Pointer<span>;</span>
  <span>}</span>

  <span>if</span> <span>(</span>needCarry<span>)</span> prevPointer<span>.</span>next <span>=</span> <span>new</span> <span>ListNode</span><span>(</span><span>1</span><span>)</span><span>;</span>

  <span>return</span> prev<span>.</span>next<span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br></div></div>]]></content>
    <author>
      <name>2. Add Two Numbers</name>
    </author>
    <category term="TypeScript"/>
    <contributor>
      <name>2. Add Two Numbers</name>
    </contributor>
    <rights>Copyright by 2. Add Two Numbers</rights>
  </entry>
  <entry>
    <title type="html">lizncu</title>
    <id>https://leetcode.innenu.com/2-add-two-numbers/lizncu/</id>
    <link href="https://leetcode.innenu.com/2-add-two-numbers/lizncu/"/>
    <updated>2021-02-17T16:18:42.648Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>/*
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */</span>
<span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>ListNode</span> <span>addTwoNumbers</span><span>(</span><span>ListNode</span> l1<span>,</span> <span>ListNode</span> l2<span>)</span> <span>{</span>
    <span>ListNode</span> s <span>=</span> <span>new</span> <span>ListNode</span><span>(</span><span>-</span><span>1</span><span>)</span><span>;</span>

    <span>ListNode</span> t <span>=</span> s<span>;</span>

    <span>int</span> num <span>=</span> <span>0</span><span>;</span>

    <span>while</span> <span>(</span><span>(</span>l1 <span>!=</span> <span>null</span><span>)</span> <span>||</span> <span>(</span>l2 <span>!=</span> <span>null</span><span>)</span> <span>||</span> <span>(</span>num <span>!=</span> <span>0</span><span>)</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>l1 <span>!=</span> <span>null</span><span>)</span> <span>{</span>
        num <span>+=</span> l1<span>.</span>val<span>;</span>
        l1 <span>=</span> l1<span>.</span>next<span>;</span>
      <span>}</span>

      <span>if</span> <span>(</span>l2 <span>!=</span> <span>null</span><span>)</span> <span>{</span>
        num <span>+=</span> l2<span>.</span>val<span>;</span>
        l2 <span>=</span> l2<span>.</span>next<span>;</span>
      <span>}</span>

      t<span>.</span>next <span>=</span> <span>new</span> <span>ListNode</span><span>(</span>num <span>%</span> <span>10</span><span>)</span><span>;</span>

      num <span>=</span> num <span>/</span> <span>10</span><span>;</span>

      t <span>=</span> t<span>.</span>next<span>;</span>
    <span>}</span>

    <span>return</span> s<span>.</span>next<span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br></div></div>]]></content>
    <author>
      <name>2. Add Two Numbers</name>
    </author>
    <category term="lizncu"/>
    <contributor>
      <name>2. Add Two Numbers</name>
    </contributor>
    <rights>Copyright by 2. Add Two Numbers</rights>
  </entry>
  <entry>
    <title type="html">2. Add Two Numbers</title>
    <id>https://leetcode.innenu.com/2-add-two-numbers/</id>
    <link href="https://leetcode.innenu.com/2-add-two-numbers/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_2-add-two-numbers"> <a href="https://leetcode.com/problems/add-two-numbers/" target="_blank" rel="noopener noreferrer">2. Add Two Numbers</a></h1>
<p>You are given two <strong>non-empty</strong> linked lists representing two non-negative integers. The digits are stored in <strong>reverse order</strong>, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.</p>
<p>You may assume the two numbers do not contain any leading zero, except the number 0 itself.</p>
<p><strong>Example 1:</strong></p>
<p><img src="https://assets.leetcode.com/uploads/2020/10/02/addtwonumber1.jpg" alt="LeetCode Image"></p>
<p><strong>Input:</strong> l1 = [2,4,3], l2 = [5,6,4]</p>
<p><strong>Output:</strong> [7,0,8]</p>
<p><strong>Explanation:</strong> 342 + 465 = 807.</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> l1 = [0], l2 = [0]</p>
<p><strong>Output:</strong> [0]</p>
<p><strong>Example 3:</strong></p>
<p><strong>Input:</strong> l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]</p>
<p><strong>Output:</strong> [8,9,9,9,0,0,0,1]</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li>The number of nodes in each linked list is in the range <code>[1, 100]</code>.</li>
<li><code>0 &lt;= Node.val &lt;= 9</code></li>
<li>It is guaranteed that the list represents a number that does not have leading zeros.</li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">C++</title>
    <id>https://leetcode.innenu.com/226-invert-binary-tree/C++/</id>
    <link href="https://leetcode.innenu.com/226-invert-binary-tree/C++/"/>
    <updated>2021-02-17T16:18:42.649Z</updated>
    <content type="html"><![CDATA[<h2 id="sqm"> sqm</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>
<span>struct</span> <span>TreeNode</span> <span>{</span>
  <span>int</span> val<span>;</span>
  TreeNode<span>*</span> left<span>;</span>
  TreeNode<span>*</span> right<span>;</span>
  <span>TreeNode</span><span>(</span><span>int</span> x<span>)</span> <span>:</span> <span>val</span><span>(</span>x<span>)</span><span>,</span> <span>left</span><span>(</span><span>NULL</span><span>)</span><span>,</span> <span>right</span><span>(</span><span>NULL</span><span>)</span> <span>{</span><span>}</span>
<span>}</span><span>;</span>
<span>/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */</span>
<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  TreeNode<span>*</span> <span>invertTree</span><span>(</span>TreeNode<span>*</span> root<span>)</span> <span>{</span>
    <span>if</span> <span>(</span>root <span>==</span> <span>NULL</span><span>)</span>
      <span>return</span> root<span>;</span>
    <span>else</span> <span>{</span>
      <span>swap</span><span>(</span>root<span>-></span>left<span>,</span> root<span>-></span>right<span>)</span><span>;</span>
      <span>invertTree</span><span>(</span>root<span>-></span>left<span>)</span><span>;</span>
      <span>invertTree</span><span>(</span>root<span>-></span>right<span>)</span><span>;</span>
      <span>return</span> root<span>;</span>
    <span>}</span>
  <span>}</span>
<span>}</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br></div></div>]]></content>
    <author>
      <name>226. Invert Binary Tree</name>
    </author>
    <category term="C++"/>
    <contributor>
      <name>226. Invert Binary Tree</name>
    </contributor>
    <rights>Copyright by 226. Invert Binary Tree</rights>
  </entry>
  <entry>
    <title type="html">226. Invert Binary Tree</title>
    <id>https://leetcode.innenu.com/226-invert-binary-tree/</id>
    <link href="https://leetcode.innenu.com/226-invert-binary-tree/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_226-invert-binary-tree"> <a href="https://leetcode.com/problems/invert-binary-tree/" target="_blank" rel="noopener noreferrer">226. Invert Binary Tree</a></h1>
<p>Invert a binary tree.</p>
<p><strong>Example:</strong></p>
<p>Input:</p>
<div><pre><code>     4
   /   \\
  2     7
 / \\   / \\
1   3 6   9
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>Output:</p>
<div><pre><code>     4
   /   \\
  7     2
 / \\   / \\
9   6 3   1
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p><strong>Trivia:</strong>
This problem was inspired by <a href="https://twitter.com/mxcl/status/608682016205344768" target="_blank" rel="noopener noreferrer">this original tweet</a> by <a href="https://twitter.com/mxcl" target="_blank" rel="noopener noreferrer">Max Howell</a>:</p>
<blockquote>
<p>Google: 90% of our engineers use the software you wrote (Homebrew), but you can’t invert a binary tree on a whiteboard so f*** off.</p>
</blockquote>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">sqm</title>
    <id>https://leetcode.innenu.com/226-invert-binary-tree/sqm/</id>
    <link href="https://leetcode.innenu.com/226-invert-binary-tree/sqm/"/>
    <updated>2021-02-17T16:18:42.652Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>
<span>struct</span> <span>TreeNode</span> <span>{</span>
  <span>int</span> val<span>;</span>
  TreeNode<span>*</span> left<span>;</span>
  TreeNode<span>*</span> right<span>;</span>
  <span>TreeNode</span><span>(</span><span>int</span> x<span>)</span> <span>:</span> <span>val</span><span>(</span>x<span>)</span><span>,</span> <span>left</span><span>(</span><span>NULL</span><span>)</span><span>,</span> <span>right</span><span>(</span><span>NULL</span><span>)</span> <span>{</span><span>}</span>
<span>}</span><span>;</span>
<span>/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */</span>
<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  TreeNode<span>*</span> <span>invertTree</span><span>(</span>TreeNode<span>*</span> root<span>)</span> <span>{</span>
    <span>if</span> <span>(</span>root <span>==</span> <span>NULL</span><span>)</span>
      <span>return</span> root<span>;</span>
    <span>else</span> <span>{</span>
      <span>swap</span><span>(</span>root<span>-></span>left<span>,</span> root<span>-></span>right<span>)</span><span>;</span>
      <span>invertTree</span><span>(</span>root<span>-></span>left<span>)</span><span>;</span>
      <span>invertTree</span><span>(</span>root<span>-></span>right<span>)</span><span>;</span>
      <span>return</span> root<span>;</span>
    <span>}</span>
  <span>}</span>
<span>}</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br></div></div>]]></content>
    <author>
      <name>226. Invert Binary Tree</name>
    </author>
    <category term="sqm"/>
    <contributor>
      <name>226. Invert Binary Tree</name>
    </contributor>
    <rights>Copyright by 226. Invert Binary Tree</rights>
  </entry>
  <entry>
    <title type="html">C++</title>
    <id>https://leetcode.innenu.com/237-Delete-Node-in-a-Linked-List/C++/</id>
    <link href="https://leetcode.innenu.com/237-Delete-Node-in-a-Linked-List/C++/"/>
    <updated>2021-02-17T16:18:42.652Z</updated>
    <content type="html"><![CDATA[<h2 id="sqm"> sqm</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>
<span>struct</span> <span>ListNode</span> <span>{</span>
  <span>/* data */</span>
  <span>int</span> val<span>;</span>
  ListNode<span>*</span> next<span>;</span>
<span>}</span><span>;</span>

<span>/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */</span>
<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>void</span> <span>deleteNode</span><span>(</span>ListNode<span>*</span> node<span>)</span> <span>{</span>
    node<span>-></span>val <span>=</span> node<span>-></span>next<span>-></span>val<span>;</span>
    node<span>-></span>next <span>=</span> node<span>-></span>next<span>-></span>next<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br></div></div>]]></content>
    <author>
      <name>237. Delete Node in a Linked List</name>
    </author>
    <category term="C++"/>
    <contributor>
      <name>237. Delete Node in a Linked List</name>
    </contributor>
    <rights>Copyright by 237. Delete Node in a Linked List</rights>
  </entry>
  <entry>
    <title type="html">Java</title>
    <id>https://leetcode.innenu.com/237-Delete-Node-in-a-Linked-List/Java/</id>
    <link href="https://leetcode.innenu.com/237-Delete-Node-in-a-Linked-List/Java/"/>
    <updated>2021-02-17T16:18:42.652Z</updated>
    <content type="html"><![CDATA[<h2 id="lizncu"> lizncu</h2>
<div><pre><code><span>/*
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */</span>

<span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>void</span> <span>deleteNode</span><span>(</span><span>ListNode</span> node<span>)</span> <span>{</span>
    node<span>.</span>val <span>=</span> node<span>.</span>next<span>.</span>val<span>;</span>
    node<span>.</span>next <span>=</span> node<span>.</span>next<span>.</span>next<span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>]]></content>
    <author>
      <name>237. Delete Node in a Linked List</name>
    </author>
    <category term="Java"/>
    <contributor>
      <name>237. Delete Node in a Linked List</name>
    </contributor>
    <rights>Copyright by 237. Delete Node in a Linked List</rights>
  </entry>
  <entry>
    <title type="html">lizncu</title>
    <id>https://leetcode.innenu.com/237-Delete-Node-in-a-Linked-List/lizncu/</id>
    <link href="https://leetcode.innenu.com/237-Delete-Node-in-a-Linked-List/lizncu/"/>
    <updated>2021-02-17T16:18:42.652Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>/*
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */</span>

<span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>void</span> <span>deleteNode</span><span>(</span><span>ListNode</span> node<span>)</span> <span>{</span>
    node<span>.</span>val <span>=</span> node<span>.</span>next<span>.</span>val<span>;</span>
    node<span>.</span>next <span>=</span> node<span>.</span>next<span>.</span>next<span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>]]></content>
    <author>
      <name>237. Delete Node in a Linked List</name>
    </author>
    <category term="lizncu"/>
    <contributor>
      <name>237. Delete Node in a Linked List</name>
    </contributor>
    <rights>Copyright by 237. Delete Node in a Linked List</rights>
  </entry>
  <entry>
    <title type="html">237. Delete Node in a Linked List</title>
    <id>https://leetcode.innenu.com/237-Delete-Node-in-a-Linked-List/</id>
    <link href="https://leetcode.innenu.com/237-Delete-Node-in-a-Linked-List/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_237-delete-node-in-a-linked-list"> <a href="https://leetcode.com/problems/delete-node-in-a-linked-list/" target="_blank" rel="noopener noreferrer">237. Delete Node in a Linked List</a></h1>
<p>Write a function to <strong>delete a node</strong> in a singly-linked list. You will <strong>not</strong> be given access to the <code>head</code> of the list, instead you will be given access to <strong>the node to be deleted</strong> directly.</p>
<p>It is <strong>guaranteed</strong> that the node to be deleted is <strong>not a tail node</strong> in the list.</p>
<p><strong>Example 1:</strong></p>
<p><img src="https://assets.leetcode.com/uploads/2020/09/01/node1.jpg" alt="LeetCode Image"></p>
<p><strong>Input:</strong> head = [4,5,1,9], node = 5</p>
<p><strong>Output:</strong> [4,1,9]</p>
<p><strong>Explanation:</strong> You are given the second node with value 5, the linked list should become 4 -&gt; 1 -&gt; 9 after calling your function.</p>
<p><strong>Example 2:</strong></p>
<p><img src="https://assets.leetcode.com/uploads/2020/09/01/node2.jpg" alt="LeetCode Image"></p>
<p><strong>Input:</strong> head = [4,5,1,9], node = 1</p>
<p><strong>Output:</strong> [4,5,9]</p>
<p><strong>Explanation:</strong> You are given the third node with value 1, the linked list should become 4 -&gt; 5 -&gt; 9 after calling your function.</p>
<p><strong>Example 3:</strong></p>
<p><strong>Input:</strong> head = [1,2,3,4], node = 3</p>
<p><strong>Output:</strong> [1,2,4]</p>
<p><strong>Example 4:</strong></p>
<p><strong>Input:</strong> head = [0,1], node = 0</p>
<p><strong>Output:</strong> [1]</p>
<p><strong>Example 5:</strong></p>
<p><strong>Input:</strong> head = [-3,5,-99], node = -3</p>
<p><strong>Output:</strong> [5,-99]</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li>The number of the nodes in the given list is in the range <code>[2, 1000]</code>.</li>
<li><code>-1000 &lt;= Node.val &lt;= 1000</code></li>
<li>The value of each node in the list is <strong>unique</strong>.</li>
<li>The <code>node</code> to be deleted is <strong>in the list</strong> and is <strong>not a tail</strong> node</li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">sqm</title>
    <id>https://leetcode.innenu.com/237-Delete-Node-in-a-Linked-List/sqm/</id>
    <link href="https://leetcode.innenu.com/237-Delete-Node-in-a-Linked-List/sqm/"/>
    <updated>2021-02-17T16:18:42.653Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>
<span>struct</span> <span>ListNode</span> <span>{</span>
  <span>/* data */</span>
  <span>int</span> val<span>;</span>
  ListNode<span>*</span> next<span>;</span>
<span>}</span><span>;</span>

<span>/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */</span>
<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>void</span> <span>deleteNode</span><span>(</span>ListNode<span>*</span> node<span>)</span> <span>{</span>
    node<span>-></span>val <span>=</span> node<span>-></span>next<span>-></span>val<span>;</span>
    node<span>-></span>next <span>=</span> node<span>-></span>next<span>-></span>next<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br></div></div>]]></content>
    <author>
      <name>237. Delete Node in a Linked List</name>
    </author>
    <category term="sqm"/>
    <contributor>
      <name>237. Delete Node in a Linked List</name>
    </contributor>
    <rights>Copyright by 237. Delete Node in a Linked List</rights>
  </entry>
  <entry>
    <title type="html">C++</title>
    <id>https://leetcode.innenu.com/242-valid-anagram/C++/</id>
    <link href="https://leetcode.innenu.com/242-valid-anagram/C++/"/>
    <updated>2021-02-17T16:18:42.654Z</updated>
    <content type="html"><![CDATA[<h2 id="lmy"> lmy</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>bool</span> <span>isAnagram</span><span>(</span>string s<span>,</span> string t<span>)</span> <span>{</span>
    <span>sort</span><span>(</span>s<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> s<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>
    <span>sort</span><span>(</span>t<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> t<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>
    <span>return</span> s <span>==</span> t<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div>]]></content>
    <author>
      <name>242. Valid Anagram</name>
    </author>
    <category term="C++"/>
    <contributor>
      <name>242. Valid Anagram</name>
    </contributor>
    <rights>Copyright by 242. Valid Anagram</rights>
  </entry>
  <entry>
    <title type="html">lmy</title>
    <id>https://leetcode.innenu.com/242-valid-anagram/lmy/</id>
    <link href="https://leetcode.innenu.com/242-valid-anagram/lmy/"/>
    <updated>2021-02-17T16:18:42.654Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>bool</span> <span>isAnagram</span><span>(</span>string s<span>,</span> string t<span>)</span> <span>{</span>
    <span>sort</span><span>(</span>s<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> s<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>
    <span>sort</span><span>(</span>t<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> t<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>
    <span>return</span> s <span>==</span> t<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div>]]></content>
    <author>
      <name>242. Valid Anagram</name>
    </author>
    <category term="lmy"/>
    <contributor>
      <name>242. Valid Anagram</name>
    </contributor>
    <rights>Copyright by 242. Valid Anagram</rights>
  </entry>
  <entry>
    <title type="html">242. Valid Anagram</title>
    <id>https://leetcode.innenu.com/242-valid-anagram/</id>
    <link href="https://leetcode.innenu.com/242-valid-anagram/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_242-valid-anagram"> <a href="https://leetcode.com/problems/valid-anagram/" target="_blank" rel="noopener noreferrer">242. Valid Anagram</a></h1>
<p>Given two strings <em>s</em> and <em>t</em> , write a function to determine if <em>t</em> is an anagram of <em>s</em>.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> <em>s</em> = &quot;anagram&quot;, <em>t</em> = &quot;nagaram&quot;</p>
<p><strong>Output:</strong> true</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> <em>s</em> = &quot;rat&quot;, <em>t</em> = &quot;car&quot;</p>
<p><strong>Output:</strong> false</p>
<p><strong>Note:</strong>
You may assume the string contains only lowercase alphabets.</p>
<p><strong>Follow up:</strong>
What if the inputs contain unicode characters? How would you adapt your solution to such case?</p>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">Java</title>
    <id>https://leetcode.innenu.com/268-Missing-Number/Java/</id>
    <link href="https://leetcode.innenu.com/268-Missing-Number/Java/"/>
    <updated>2021-02-17T16:18:42.654Z</updated>
    <content type="html"><![CDATA[<h2 id="lizncu"> lizncu</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span> <span>missingNumber</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>)</span> <span>{</span>
    <span>int</span> num <span>=</span> nums<span>.</span>length<span>;</span>

    num <span>=</span> <span>(</span><span>0</span> <span>+</span> num<span>)</span> <span>*</span> <span>(</span>num <span>+</span> <span>1</span><span>)</span> <span>/</span> <span>2</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      num <span>-=</span> nums<span>[</span>i<span>]</span><span>;</span>
    <span>}</span>

    <span>return</span> num<span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div>]]></content>
    <author>
      <name>268. Missing Number</name>
    </author>
    <category term="Java"/>
    <contributor>
      <name>268. Missing Number</name>
    </contributor>
    <rights>Copyright by 268. Missing Number</rights>
  </entry>
  <entry>
    <title type="html">lizncu</title>
    <id>https://leetcode.innenu.com/268-Missing-Number/lizncu/</id>
    <link href="https://leetcode.innenu.com/268-Missing-Number/lizncu/"/>
    <updated>2021-02-17T16:18:42.655Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span> <span>missingNumber</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>)</span> <span>{</span>
    <span>int</span> num <span>=</span> nums<span>.</span>length<span>;</span>

    num <span>=</span> <span>(</span><span>0</span> <span>+</span> num<span>)</span> <span>*</span> <span>(</span>num <span>+</span> <span>1</span><span>)</span> <span>/</span> <span>2</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      num <span>-=</span> nums<span>[</span>i<span>]</span><span>;</span>
    <span>}</span>

    <span>return</span> num<span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div>]]></content>
    <author>
      <name>268. Missing Number</name>
    </author>
    <category term="lizncu"/>
    <contributor>
      <name>268. Missing Number</name>
    </contributor>
    <rights>Copyright by 268. Missing Number</rights>
  </entry>
  <entry>
    <title type="html">268. Missing Number</title>
    <id>https://leetcode.innenu.com/268-Missing-Number/</id>
    <link href="https://leetcode.innenu.com/268-Missing-Number/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_268-missing-number"> <a href="https://leetcode.com/problems/missing-number/" target="_blank" rel="noopener noreferrer">268. Missing Number</a></h1>
<p>Given an array <code>nums</code> containing <code>n</code> distinct numbers in the range <code>[0, n]</code>, return <em>the only number in the range that is missing from the array.</em></p>
<p><strong>Follow up:</strong> Could you implement a solution using only <code>O(1)</code> extra space complexity and <code>O(n)</code> runtime complexity?</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> nums = [3,0,1]</p>
<p><strong>Output:</strong> 2</p>
<p><strong>Explanation:</strong> n = 3 since there are 3 numbers, so all numbers are in the range [0,3]. 2 is the missing number in the range since it does not appear in nums.</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> nums = [0,1]</p>
<p><strong>Output:</strong> 2</p>
<p><strong>Explanation:</strong> n = 2 since there are 2 numbers, so all numbers are in the range [0,2]. 2 is the missing number in the range since it does not appear in nums.</p>
<p><strong>Example 3:</strong></p>
<p><strong>Input:</strong> nums = [9,6,4,2,3,5,7,0,1]</p>
<p><strong>Output:</strong> 8</p>
<p><strong>Explanation:</strong> n = 9 since there are 9 numbers, so all numbers are in the range [0,9]. 8 is the missing number in the range since it does not appear in nums.</p>
<p><strong>Example 4:</strong></p>
<p><strong>Input:</strong> nums = [0]</p>
<p><strong>Output:</strong> 1</p>
<p><strong>Explanation:</strong> n = 1 since there is 1 number, so all numbers are in the range [0,1]. 1 is the missing number in the range since it does not appear in nums.</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>n == nums.length</code></li>
<li><code>1 &lt;= n &lt;= 104</code></li>
<li><code>0 &lt;= nums[i] &lt;= n</code></li>
<li>All the numbers of <code>nums</code> are <strong>unique</strong>.</li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">Java</title>
    <id>https://leetcode.innenu.com/283-Move-Zeroes/Java/</id>
    <link href="https://leetcode.innenu.com/283-Move-Zeroes/Java/"/>
    <updated>2021-02-17T16:18:42.656Z</updated>
    <content type="html"><![CDATA[<h2 id="lizncu"> lizncu</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>void</span> <span>moveZeroes</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>)</span> <span>{</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>,</span> count <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>!=</span> <span>0</span><span>)</span> <span>{</span>
        <span>if</span> <span>(</span>count <span>!=</span> i<span>)</span> <span>{</span>
          nums<span>[</span>count<span>]</span> <span>=</span> nums<span>[</span>i<span>]</span><span>;</span>
          nums<span>[</span>i<span>]</span> <span>=</span> <span>0</span><span>;</span>
        <span>}</span>

        count<span>++</span><span>;</span>
      <span>}</span>
    <span>}</span>
  <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div>]]></content>
    <author>
      <name>283. Move Zeroes</name>
    </author>
    <category term="Java"/>
    <contributor>
      <name>283. Move Zeroes</name>
    </contributor>
    <rights>Copyright by 283. Move Zeroes</rights>
  </entry>
  <entry>
    <title type="html">lizncu</title>
    <id>https://leetcode.innenu.com/283-Move-Zeroes/lizncu/</id>
    <link href="https://leetcode.innenu.com/283-Move-Zeroes/lizncu/"/>
    <updated>2021-02-17T16:18:42.656Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>void</span> <span>moveZeroes</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>)</span> <span>{</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>,</span> count <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>!=</span> <span>0</span><span>)</span> <span>{</span>
        <span>if</span> <span>(</span>count <span>!=</span> i<span>)</span> <span>{</span>
          nums<span>[</span>count<span>]</span> <span>=</span> nums<span>[</span>i<span>]</span><span>;</span>
          nums<span>[</span>i<span>]</span> <span>=</span> <span>0</span><span>;</span>
        <span>}</span>

        count<span>++</span><span>;</span>
      <span>}</span>
    <span>}</span>
  <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div>]]></content>
    <author>
      <name>283. Move Zeroes</name>
    </author>
    <category term="lizncu"/>
    <contributor>
      <name>283. Move Zeroes</name>
    </contributor>
    <rights>Copyright by 283. Move Zeroes</rights>
  </entry>
  <entry>
    <title type="html">283. Move Zeroes</title>
    <id>https://leetcode.innenu.com/283-Move-Zeroes/</id>
    <link href="https://leetcode.innenu.com/283-Move-Zeroes/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_283-move-zeroes"> <a href="https://leetcode.com/problems/move-zeroes/" target="_blank" rel="noopener noreferrer">283. Move Zeroes</a></h1>
<p>Given an array <code>nums</code>, write a function to move all <code>0</code>'s to the end of it while maintaining the relative order of the non-zero elements.</p>
<p><strong>Example:</strong></p>
<p><strong>Input:</strong> <code>[0,1,0,3,12]</code></p>
<p><strong>Output:</strong> <code>[1,3,12,0,0]</code></p>
<p><strong>Note</strong>:</p>
<ol>
<li>You must do this <strong>in-place</strong> without making a copy of the array.</li>
<li>Minimize the total number of operations.</li>
</ol>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">C++</title>
    <id>https://leetcode.innenu.com/292-Nim-Game/C++/</id>
    <link href="https://leetcode.innenu.com/292-Nim-Game/C++/"/>
    <updated>2021-02-17T16:18:42.656Z</updated>
    <content type="html"><![CDATA[<h2 id="mister-hope"> Mister-Hope</h2>
<div><pre><code><span>/**
 * Your runtime beats 100 % of cpp submissions
 * Your memory usage beats 100 % of cpp submissions (6 MB)
 */</span>
<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>bool</span> <span>canWinNim</span><span>(</span><span>int</span> n<span>)</span> <span>{</span> <span>return</span> n <span>%</span> <span>4</span> <span>!=</span> <span>0</span><span>;</span> <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div>]]></content>
    <author>
      <name>292. Nim Game</name>
    </author>
    <category term="C++"/>
    <contributor>
      <name>292. Nim Game</name>
    </contributor>
    <rights>Copyright by 292. Nim Game</rights>
  </entry>
  <entry>
    <title type="html">Java</title>
    <id>https://leetcode.innenu.com/292-Nim-Game/Java/</id>
    <link href="https://leetcode.innenu.com/292-Nim-Game/Java/"/>
    <updated>2021-02-17T16:18:42.657Z</updated>
    <content type="html"><![CDATA[<h2 id="mister-hope"> Mister-Hope</h2>
<div><pre><code><span>/*
 * Your runtime beats 100 % of java submissions
 *
 * Your memory usage beats 10.33 % of java submissions (35.4 MB)
 */</span>
<span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>boolean</span> <span>canWinNim</span><span>(</span><span>int</span> n<span>)</span> <span>{</span>
    <span>return</span> n <span>%</span> <span>4</span> <span>!=</span> <span>0</span><span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><h2 id="lizncu"> lizncu</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>boolean</span> <span>canWinNim</span><span>(</span><span>int</span> n<span>)</span> <span>{</span>
    <span>return</span> n <span>%</span> <span>4</span> <span>==</span> <span>0</span> <span>?</span> <span>false</span> <span>:</span> <span>true</span><span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div>]]></content>
    <author>
      <name>292. Nim Game</name>
    </author>
    <category term="Java"/>
    <contributor>
      <name>292. Nim Game</name>
    </contributor>
    <rights>Copyright by 292. Nim Game</rights>
  </entry>
  <entry>
    <title type="html">JavaScript</title>
    <id>https://leetcode.innenu.com/292-Nim-Game/JavaScript/</id>
    <link href="https://leetcode.innenu.com/292-Nim-Game/JavaScript/"/>
    <updated>2021-02-17T16:18:42.657Z</updated>
    <content type="html"><![CDATA[<h2 id="mister-hope"> Mister-Hope</h2>
<div><pre><code><span>/*
 * Your runtime beats 60.95 % of javascript submissions
 *
 * Your memory usage beats 24.26 % of javascript submissions (38.4 MB)
 */</span>

<span>const</span> <span>canWinNim</span> <span>=</span> <span>(</span><span>n</span><span>)</span> <span>=></span> n <span>%</span> <span>4</span> <span>!==</span> <span>0</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h3 id="simple"> simple</h3>
<div><pre><code><span>/*
 * Your runtime beats 60.95 % of javascript submissions
 *
 * Your memory usage beats 24.26 % of javascript submissions (38.4 MB)
 */</span>

<span>const</span> <span>canWinNim</span> <span>=</span> <span>(</span><span>n</span><span>)</span> <span>=></span> <span>Boolean</span><span>(</span>n <span>%</span> <span>4</span><span>)</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div>]]></content>
    <author>
      <name>292. Nim Game</name>
    </author>
    <category term="JavaScript"/>
    <contributor>
      <name>292. Nim Game</name>
    </contributor>
    <rights>Copyright by 292. Nim Game</rights>
  </entry>
  <entry>
    <title type="html">Mister-Hope</title>
    <id>https://leetcode.innenu.com/292-Nim-Game/Mister-Hope/</id>
    <link href="https://leetcode.innenu.com/292-Nim-Game/Mister-Hope/"/>
    <updated>2021-02-17T16:18:42.658Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span>/**
 * Your runtime beats 100 % of cpp submissions
 * Your memory usage beats 100 % of cpp submissions (6 MB)
 */</span>
<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>bool</span> <span>canWinNim</span><span>(</span><span>int</span> n<span>)</span> <span>{</span> <span>return</span> n <span>%</span> <span>4</span> <span>!=</span> <span>0</span><span>;</span> <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><h2 id="java"> Java</h2>
<div><pre><code><span>/*
 * Your runtime beats 100 % of java submissions
 *
 * Your memory usage beats 10.33 % of java submissions (35.4 MB)
 */</span>
<span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>boolean</span> <span>canWinNim</span><span>(</span><span>int</span> n<span>)</span> <span>{</span>
    <span>return</span> n <span>%</span> <span>4</span> <span>!=</span> <span>0</span><span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><h2 id="javascript"> JavaScript</h2>
<div><pre><code><span>/*
 * Your runtime beats 60.95 % of javascript submissions
 *
 * Your memory usage beats 24.26 % of javascript submissions (38.4 MB)
 */</span>

<span>const</span> <span>canWinNim</span> <span>=</span> <span>(</span><span>n</span><span>)</span> <span>=></span> n <span>%</span> <span>4</span> <span>!==</span> <span>0</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h3 id="simple"> simple</h3>
<div><pre><code><span>/*
 * Your runtime beats 60.95 % of javascript submissions
 *
 * Your memory usage beats 24.26 % of javascript submissions (38.4 MB)
 */</span>

<span>const</span> <span>canWinNim</span> <span>=</span> <span>(</span><span>n</span><span>)</span> <span>=></span> <span>Boolean</span><span>(</span>n <span>%</span> <span>4</span><span>)</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h2 id="php"> PHP</h2>
<div><pre><code><span>/**
 * Your runtime beats 80 % of php submissions
 *
 * Your memory usage beats 100 % of php submissions (15.6 MB)
 */</span>
<span>class</span> <span>Solution</span> <span>{</span>
  <span>/**
   * @param Integer $n
   * @return Boolean
   */</span>
  <span>function</span> <span>canWinNim</span><span>(</span><span>$n</span><span>)</span> <span>{</span>
    <span>return</span> <span>$n</span> $ <span>4</span><span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div><h2 id="python3"> Python3</h2>
<div><pre><code><span># Your runtime beats 90.8 % of python3 submissions</span>
<span>#</span>
<span># Your memory usage beats 100 % of python3 submissions(14.2 MB)</span>

<span>class</span> <span>Solution</span><span>:</span>
    <span>def</span> <span>canWinNim</span><span>(</span>self<span>,</span> n<span>:</span> <span>int</span><span>)</span> <span>-</span><span>></span> <span>bool</span><span>:</span>
        <span>return</span> n <span>%</span> <span>4</span> <span>!=</span> <span>0</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h2 id="typescript"> TypeScript</h2>
<div><pre><code><span>/*
 * Your runtime beats 100 % of typescript submissions
 *
 * Your memory usage beats 88.89 % of typescript submissions (38.8 MB)
 */</span>

<span>const</span> canWinNim <span>=</span> <span>(</span>n<span>:</span> <span>number</span><span>)</span><span>:</span> <span>boolean</span> <span>=></span> n <span>%</span> <span>4</span> <span>!==</span> <span>0</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h3 id="simple-2"> simple</h3>
<div><pre><code><span>/*
 * Your runtime beats 100 % of typescript submissions
 *
 * Your memory usage beats 88.89 % of typescript submissions (38.8 MB)
 */</span>

<span>const</span> canWinNim <span>=</span> <span>(</span>n<span>:</span> <span>number</span><span>)</span><span>:</span> <span>boolean</span> <span>=></span> <span>Boolean</span><span>(</span>n <span>%</span> <span>4</span><span>)</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div>]]></content>
    <author>
      <name>292. Nim Game</name>
    </author>
    <category term="Mister-Hope"/>
    <contributor>
      <name>292. Nim Game</name>
    </contributor>
    <rights>Copyright by 292. Nim Game</rights>
  </entry>
  <entry>
    <title type="html">PHP</title>
    <id>https://leetcode.innenu.com/292-Nim-Game/PHP/</id>
    <link href="https://leetcode.innenu.com/292-Nim-Game/PHP/"/>
    <updated>2021-02-17T16:18:42.658Z</updated>
    <content type="html"><![CDATA[<h2 id="mister-hope"> Mister-Hope</h2>
<div><pre><code><span>/**
 * Your runtime beats 80 % of php submissions
 *
 * Your memory usage beats 100 % of php submissions (15.6 MB)
 */</span>
<span>class</span> <span>Solution</span> <span>{</span>
  <span>/**
   * @param Integer $n
   * @return Boolean
   */</span>
  <span>function</span> <span>canWinNim</span><span>(</span><span>$n</span><span>)</span> <span>{</span>
    <span>return</span> <span>$n</span> $ <span>4</span><span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div>]]></content>
    <author>
      <name>292. Nim Game</name>
    </author>
    <category term="PHP"/>
    <contributor>
      <name>292. Nim Game</name>
    </contributor>
    <rights>Copyright by 292. Nim Game</rights>
  </entry>
  <entry>
    <title type="html">Python3</title>
    <id>https://leetcode.innenu.com/292-Nim-Game/Python3/</id>
    <link href="https://leetcode.innenu.com/292-Nim-Game/Python3/"/>
    <updated>2021-02-17T16:18:42.658Z</updated>
    <content type="html"><![CDATA[<h2 id="mister-hope"> Mister-Hope</h2>
<div><pre><code><span># Your runtime beats 90.8 % of python3 submissions</span>
<span>#</span>
<span># Your memory usage beats 100 % of python3 submissions(14.2 MB)</span>

<span>class</span> <span>Solution</span><span>:</span>
    <span>def</span> <span>canWinNim</span><span>(</span>self<span>,</span> n<span>:</span> <span>int</span><span>)</span> <span>-</span><span>></span> <span>bool</span><span>:</span>
        <span>return</span> n <span>%</span> <span>4</span> <span>!=</span> <span>0</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div>]]></content>
    <author>
      <name>292. Nim Game</name>
    </author>
    <category term="Python3"/>
    <contributor>
      <name>292. Nim Game</name>
    </contributor>
    <rights>Copyright by 292. Nim Game</rights>
  </entry>
  <entry>
    <title type="html">TypeScript</title>
    <id>https://leetcode.innenu.com/292-Nim-Game/TypeScript/</id>
    <link href="https://leetcode.innenu.com/292-Nim-Game/TypeScript/"/>
    <updated>2021-02-17T16:18:42.659Z</updated>
    <content type="html"><![CDATA[<h2 id="mister-hope"> Mister-Hope</h2>
<div><pre><code><span>/*
 * Your runtime beats 100 % of typescript submissions
 *
 * Your memory usage beats 88.89 % of typescript submissions (38.8 MB)
 */</span>

<span>const</span> canWinNim <span>=</span> <span>(</span>n<span>:</span> <span>number</span><span>)</span><span>:</span> <span>boolean</span> <span>=></span> n <span>%</span> <span>4</span> <span>!==</span> <span>0</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h3 id="simple"> simple</h3>
<div><pre><code><span>/*
 * Your runtime beats 100 % of typescript submissions
 *
 * Your memory usage beats 88.89 % of typescript submissions (38.8 MB)
 */</span>

<span>const</span> canWinNim <span>=</span> <span>(</span>n<span>:</span> <span>number</span><span>)</span><span>:</span> <span>boolean</span> <span>=></span> <span>Boolean</span><span>(</span>n <span>%</span> <span>4</span><span>)</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div>]]></content>
    <author>
      <name>292. Nim Game</name>
    </author>
    <category term="TypeScript"/>
    <contributor>
      <name>292. Nim Game</name>
    </contributor>
    <rights>Copyright by 292. Nim Game</rights>
  </entry>
  <entry>
    <title type="html">lizncu</title>
    <id>https://leetcode.innenu.com/292-Nim-Game/lizncu/</id>
    <link href="https://leetcode.innenu.com/292-Nim-Game/lizncu/"/>
    <updated>2021-02-17T16:18:42.659Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>boolean</span> <span>canWinNim</span><span>(</span><span>int</span> n<span>)</span> <span>{</span>
    <span>return</span> n <span>%</span> <span>4</span> <span>==</span> <span>0</span> <span>?</span> <span>false</span> <span>:</span> <span>true</span><span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div>]]></content>
    <author>
      <name>292. Nim Game</name>
    </author>
    <category term="lizncu"/>
    <contributor>
      <name>292. Nim Game</name>
    </contributor>
    <rights>Copyright by 292. Nim Game</rights>
  </entry>
  <entry>
    <title type="html">292. Nim Game</title>
    <id>https://leetcode.innenu.com/292-Nim-Game/</id>
    <link href="https://leetcode.innenu.com/292-Nim-Game/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_292-nim-game"> <a href="https://leetcode.com/problems/nim-game/" target="_blank" rel="noopener noreferrer">292. Nim Game</a></h1>
<p>You are playing the following Nim Game with your friend:</p>
<ul>
<li>Initially, there is a heap of stones on the table.</li>
<li>You and your friend will alternate taking turns, and <strong>you go first</strong>.</li>
<li>On each turn, the person whose turn it is will remove 1 to 3 stones from the heap.</li>
<li>The one who removes the last stone is the winner.</li>
</ul>
<p>Given <code>n</code>, the number of stones in the heap, return <code>true</code> <em>if you can win the game assuming both you and your friend play optimally, otherwise return</em> <code>false</code>.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> n = 4</p>
<p><strong>Output:</strong> false</p>
<p><strong>Explanation:</strong> These are the possible outcomes:</p>
<ol>
<li>You remove 1 stone. Your friend removes 3 stones, including the last stone. Your friend wins.</li>
<li>You remove 2 stones. Your friend removes 2 stones, including the last stone. Your friend wins.</li>
<li>You remove 3 stones. Your friend removes the last stone. Your friend wins.</li>
</ol>
<p>In all outcomes, your friend wins.</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> n = 1</p>
<p><strong>Output:</strong> true</p>
<p><strong>Example 3:</strong></p>
<p><strong>Input:</strong> n = 2</p>
<p><strong>Output:</strong> true</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>1 &lt;= n &lt;= 231 - 1</code></li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">C++</title>
    <id>https://leetcode.innenu.com/344-Reverse-String/C++/</id>
    <link href="https://leetcode.innenu.com/344-Reverse-String/C++/"/>
    <updated>2021-02-17T16:18:42.660Z</updated>
    <content type="html"><![CDATA[<h2 id="sqm"> sqm</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>
<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>void</span> <span>reverseString</span><span>(</span>vector<span>&lt;</span><span>char</span><span>></span><span>&amp;</span> s<span>)</span> <span>{</span> <span>reverse</span><span>(</span>s<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> s<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span> <span>}</span>
<span>}</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div>]]></content>
    <author>
      <name>344. Reverse String</name>
    </author>
    <category term="C++"/>
    <contributor>
      <name>344. Reverse String</name>
    </contributor>
    <rights>Copyright by 344. Reverse String</rights>
  </entry>
  <entry>
    <title type="html">Java</title>
    <id>https://leetcode.innenu.com/344-Reverse-String/Java/</id>
    <link href="https://leetcode.innenu.com/344-Reverse-String/Java/"/>
    <updated>2021-02-17T16:18:42.660Z</updated>
    <content type="html"><![CDATA[<h2 id="lizncu"> lizncu</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>void</span> <span>reverseString</span><span>(</span><span>char</span><span>[</span><span>]</span> s<span>)</span> <span>{</span>
    <span>char</span> t<span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> s<span>.</span>length <span>/</span> <span>2</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      t <span>=</span> s<span>[</span>i<span>]</span><span>;</span>
      s<span>[</span>i<span>]</span> <span>=</span> s<span>[</span>s<span>.</span>length <span>-</span> i <span>-</span> <span>1</span><span>]</span><span>;</span>
      s<span>[</span>s<span>.</span>length <span>-</span> i <span>-</span> <span>1</span><span>]</span> <span>=</span> t<span>;</span>
    <span>}</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div>]]></content>
    <author>
      <name>344. Reverse String</name>
    </author>
    <category term="Java"/>
    <contributor>
      <name>344. Reverse String</name>
    </contributor>
    <rights>Copyright by 344. Reverse String</rights>
  </entry>
  <entry>
    <title type="html">lizncu</title>
    <id>https://leetcode.innenu.com/344-Reverse-String/lizncu/</id>
    <link href="https://leetcode.innenu.com/344-Reverse-String/lizncu/"/>
    <updated>2021-02-17T16:18:42.661Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>void</span> <span>reverseString</span><span>(</span><span>char</span><span>[</span><span>]</span> s<span>)</span> <span>{</span>
    <span>char</span> t<span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> s<span>.</span>length <span>/</span> <span>2</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      t <span>=</span> s<span>[</span>i<span>]</span><span>;</span>
      s<span>[</span>i<span>]</span> <span>=</span> s<span>[</span>s<span>.</span>length <span>-</span> i <span>-</span> <span>1</span><span>]</span><span>;</span>
      s<span>[</span>s<span>.</span>length <span>-</span> i <span>-</span> <span>1</span><span>]</span> <span>=</span> t<span>;</span>
    <span>}</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div>]]></content>
    <author>
      <name>344. Reverse String</name>
    </author>
    <category term="lizncu"/>
    <contributor>
      <name>344. Reverse String</name>
    </contributor>
    <rights>Copyright by 344. Reverse String</rights>
  </entry>
  <entry>
    <title type="html">344. Reverse String</title>
    <id>https://leetcode.innenu.com/344-Reverse-String/</id>
    <link href="https://leetcode.innenu.com/344-Reverse-String/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_344-reverse-string"> <a href="https://leetcode.com/problems/reverse-string/" target="_blank" rel="noopener noreferrer">344. Reverse String</a></h1>
<p>Write a function that reverses a string. The input string is given as an array of characters <code>char[]</code>.</p>
<p>Do not allocate extra space for another array, you must do this by <strong>modifying the input array <a href="https://en.wikipedia.org/wiki/In-place_algorithm" target="_blank" rel="noopener noreferrer">in-place</a></strong> with O(1) extra memory.</p>
<p>You may assume all the characters consist of <a href="https://en.wikipedia.org/wiki/ASCII#Printable_characters" target="_blank" rel="noopener noreferrer">printable ascii characters</a>.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> [&quot;h&quot;,&quot;e&quot;,&quot;l&quot;,&quot;l&quot;,&quot;o&quot;]</p>
<p><strong>Output:</strong> [&quot;o&quot;,&quot;l&quot;,&quot;l&quot;,&quot;e&quot;,&quot;h&quot;]</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> [&quot;H&quot;,&quot;a&quot;,&quot;n&quot;,&quot;n&quot;,&quot;a&quot;,&quot;h&quot;]</p>
<p><strong>Output:</strong> [&quot;h&quot;,&quot;a&quot;,&quot;n&quot;,&quot;n&quot;,&quot;a&quot;,&quot;H&quot;]</p>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">sqm</title>
    <id>https://leetcode.innenu.com/344-Reverse-String/sqm/</id>
    <link href="https://leetcode.innenu.com/344-Reverse-String/sqm/"/>
    <updated>2021-02-17T16:18:42.661Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>
<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>void</span> <span>reverseString</span><span>(</span>vector<span>&lt;</span><span>char</span><span>></span><span>&amp;</span> s<span>)</span> <span>{</span> <span>reverse</span><span>(</span>s<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> s<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span> <span>}</span>
<span>}</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div>]]></content>
    <author>
      <name>344. Reverse String</name>
    </author>
    <category term="sqm"/>
    <contributor>
      <name>344. Reverse String</name>
    </contributor>
    <rights>Copyright by 344. Reverse String</rights>
  </entry>
  <entry>
    <title type="html">C++</title>
    <id>https://leetcode.innenu.com/371-sum-of-two-integers/C++/</id>
    <link href="https://leetcode.innenu.com/371-sum-of-two-integers/C++/"/>
    <updated>2021-02-17T16:18:42.662Z</updated>
    <content type="html"><![CDATA[<h2 id="sqm"> sqm</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>
<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>int</span> <span>getSum</span><span>(</span><span>int</span> a<span>,</span> <span>int</span> b<span>)</span> <span>{</span>
    <span>while</span> <span>(</span>b <span>></span> <span>0</span><span>)</span> <span>{</span>
      a<span>++</span><span>;</span>
      b<span>--</span><span>;</span>
    <span>}</span>
    <span>while</span> <span>(</span>b <span>&lt;</span> <span>0</span><span>)</span> <span>{</span>
      a<span>--</span><span>;</span>
      b<span>++</span><span>;</span>
    <span>}</span>
    <span>return</span> a<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>]]></content>
    <author>
      <name>371. Sum of Two Integers</name>
    </author>
    <category term="C++"/>
    <contributor>
      <name>371. Sum of Two Integers</name>
    </contributor>
    <rights>Copyright by 371. Sum of Two Integers</rights>
  </entry>
  <entry>
    <title type="html">371. Sum of Two Integers</title>
    <id>https://leetcode.innenu.com/371-sum-of-two-integers/</id>
    <link href="https://leetcode.innenu.com/371-sum-of-two-integers/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_371-sum-of-two-integers"> <a href="https://leetcode.com/problems/sum-of-two-integers/" target="_blank" rel="noopener noreferrer">371. Sum of Two Integers</a></h1>
<p>Calculate the sum of two integers <em>a</em> and <em>b</em>, but you are <strong>not allowed</strong> to use the operator <code>+</code> and <code>-</code>.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> a = 1, b = 2</p>
<p><strong>Output:</strong> 3</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> a = -2, b = 3</p>
<p><strong>Output:</strong> 1</p>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">sqm</title>
    <id>https://leetcode.innenu.com/371-sum-of-two-integers/sqm/</id>
    <link href="https://leetcode.innenu.com/371-sum-of-two-integers/sqm/"/>
    <updated>2021-02-17T16:18:42.662Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>
<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>int</span> <span>getSum</span><span>(</span><span>int</span> a<span>,</span> <span>int</span> b<span>)</span> <span>{</span>
    <span>while</span> <span>(</span>b <span>></span> <span>0</span><span>)</span> <span>{</span>
      a<span>++</span><span>;</span>
      b<span>--</span><span>;</span>
    <span>}</span>
    <span>while</span> <span>(</span>b <span>&lt;</span> <span>0</span><span>)</span> <span>{</span>
      a<span>--</span><span>;</span>
      b<span>++</span><span>;</span>
    <span>}</span>
    <span>return</span> a<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>]]></content>
    <author>
      <name>371. Sum of Two Integers</name>
    </author>
    <category term="sqm"/>
    <contributor>
      <name>371. Sum of Two Integers</name>
    </contributor>
    <rights>Copyright by 371. Sum of Two Integers</rights>
  </entry>
  <entry>
    <title type="html">Java</title>
    <id>https://leetcode.innenu.com/387-First-Unique-Character-in-a-String/Java/</id>
    <link href="https://leetcode.innenu.com/387-First-Unique-Character-in-a-String/Java/"/>
    <updated>2021-02-17T16:18:42.663Z</updated>
    <content type="html"><![CDATA[<h2 id="lizncu"> lizncu</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span> <span>firstUniqChar</span><span>(</span><span>String</span> s<span>)</span> <span>{</span>
    <span>if</span> <span>(</span>s<span>.</span><span>length</span><span>(</span><span>)</span> <span>&lt;</span> <span>1</span><span>)</span> <span>{</span>
      <span>return</span> <span>-</span><span>1</span><span>;</span>
    <span>}</span>

    <span>int</span><span>[</span><span>]</span> flag <span>=</span> <span>new</span> <span>int</span><span>[</span>s<span>.</span><span>length</span><span>(</span><span>)</span><span>]</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> s<span>.</span><span>length</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>flag<span>[</span>i<span>]</span> <span>==</span> <span>1</span><span>)</span> <span>{</span>
        <span>continue</span><span>;</span>
      <span>}</span>
      <span>for</span> <span>(</span><span>int</span> j <span>=</span> i <span>+</span> <span>1</span><span>;</span> j <span>&lt;</span> s<span>.</span><span>length</span><span>(</span><span>)</span><span>;</span> j<span>++</span><span>)</span> <span>{</span>
        <span>if</span> <span>(</span>s<span>.</span><span>charAt</span><span>(</span>i<span>)</span> <span>==</span> s<span>.</span><span>charAt</span><span>(</span>j<span>)</span><span>)</span> <span>{</span>
          flag<span>[</span>i<span>]</span> <span>=</span> flag<span>[</span>j<span>]</span> <span>=</span> <span>1</span><span>;</span>
        <span>}</span>
      <span>}</span>
      <span>if</span> <span>(</span>flag<span>[</span>i<span>]</span> <span>!=</span> <span>1</span><span>)</span> <span>{</span>
        <span>return</span> i<span>;</span>
      <span>}</span>
    <span>}</span>

    <span>if</span> <span>(</span>flag<span>[</span>s<span>.</span><span>length</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>]</span> <span>==</span> <span>1</span><span>)</span> <span>{</span>
      <span>return</span> <span>-</span><span>1</span><span>;</span>
    <span>}</span> <span>else</span> <span>{</span>
      <span>return</span> s<span>.</span><span>length</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>;</span>
    <span>}</span>
  <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br></div></div>]]></content>
    <author>
      <name>387. First Unique Character in a String</name>
    </author>
    <category term="Java"/>
    <contributor>
      <name>387. First Unique Character in a String</name>
    </contributor>
    <rights>Copyright by 387. First Unique Character in a String</rights>
  </entry>
  <entry>
    <title type="html">lizncu</title>
    <id>https://leetcode.innenu.com/387-First-Unique-Character-in-a-String/lizncu/</id>
    <link href="https://leetcode.innenu.com/387-First-Unique-Character-in-a-String/lizncu/"/>
    <updated>2021-02-17T16:18:42.663Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span> <span>firstUniqChar</span><span>(</span><span>String</span> s<span>)</span> <span>{</span>
    <span>if</span> <span>(</span>s<span>.</span><span>length</span><span>(</span><span>)</span> <span>&lt;</span> <span>1</span><span>)</span> <span>{</span>
      <span>return</span> <span>-</span><span>1</span><span>;</span>
    <span>}</span>

    <span>int</span><span>[</span><span>]</span> flag <span>=</span> <span>new</span> <span>int</span><span>[</span>s<span>.</span><span>length</span><span>(</span><span>)</span><span>]</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> s<span>.</span><span>length</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>flag<span>[</span>i<span>]</span> <span>==</span> <span>1</span><span>)</span> <span>{</span>
        <span>continue</span><span>;</span>
      <span>}</span>
      <span>for</span> <span>(</span><span>int</span> j <span>=</span> i <span>+</span> <span>1</span><span>;</span> j <span>&lt;</span> s<span>.</span><span>length</span><span>(</span><span>)</span><span>;</span> j<span>++</span><span>)</span> <span>{</span>
        <span>if</span> <span>(</span>s<span>.</span><span>charAt</span><span>(</span>i<span>)</span> <span>==</span> s<span>.</span><span>charAt</span><span>(</span>j<span>)</span><span>)</span> <span>{</span>
          flag<span>[</span>i<span>]</span> <span>=</span> flag<span>[</span>j<span>]</span> <span>=</span> <span>1</span><span>;</span>
        <span>}</span>
      <span>}</span>
      <span>if</span> <span>(</span>flag<span>[</span>i<span>]</span> <span>!=</span> <span>1</span><span>)</span> <span>{</span>
        <span>return</span> i<span>;</span>
      <span>}</span>
    <span>}</span>

    <span>if</span> <span>(</span>flag<span>[</span>s<span>.</span><span>length</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>]</span> <span>==</span> <span>1</span><span>)</span> <span>{</span>
      <span>return</span> <span>-</span><span>1</span><span>;</span>
    <span>}</span> <span>else</span> <span>{</span>
      <span>return</span> s<span>.</span><span>length</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>;</span>
    <span>}</span>
  <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br></div></div>]]></content>
    <author>
      <name>387. First Unique Character in a String</name>
    </author>
    <category term="lizncu"/>
    <contributor>
      <name>387. First Unique Character in a String</name>
    </contributor>
    <rights>Copyright by 387. First Unique Character in a String</rights>
  </entry>
  <entry>
    <title type="html">387. First Unique Character in a String</title>
    <id>https://leetcode.innenu.com/387-First-Unique-Character-in-a-String/</id>
    <link href="https://leetcode.innenu.com/387-First-Unique-Character-in-a-String/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_387-first-unique-character-in-a-string"> <a href="https://leetcode.com/problems/first-unique-character-in-a-string/" target="_blank" rel="noopener noreferrer">387. First Unique Character in a String</a></h1>
<p>Given a string, find the first non-repeating character in it and return its index. If it doesn't exist, return -1.</p>
<p><strong>Examples:</strong></p>
<p>s = &quot;leetcode&quot;
return 0.</p>
<p>s = &quot;loveleetcode&quot;
return 2.</p>
<p><strong>Note:</strong> You may assume the string contains only lowercase English letters.</p>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">C++</title>
    <id>https://leetcode.innenu.com/389-find-the-difference/C++/</id>
    <link href="https://leetcode.innenu.com/389-find-the-difference/C++/"/>
    <updated>2021-02-17T16:18:42.664Z</updated>
    <content type="html"><![CDATA[<h2 id="sqm"> sqm</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>
<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>
<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>char</span> <span>findTheDifference</span><span>(</span>string s<span>,</span> string t<span>)</span> <span>{</span>
    <span>sort</span><span>(</span>s<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> s<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>
    <span>sort</span><span>(</span>t<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> t<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>
    <span>int</span> i<span>;</span>
    <span>for</span> <span>(</span>i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> t<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>s<span>[</span>i<span>]</span> <span>==</span> t<span>[</span>i<span>]</span><span>)</span> <span>{</span>
      <span>}</span> <span>else</span>
        <span>return</span> t<span>[</span>i<span>]</span><span>;</span>
    <span>}</span>
    <span>return</span> t<span>[</span>i<span>]</span><span>;</span>
  <span>}</span>
<span>}</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div>]]></content>
    <author>
      <name>389. Find the Difference</name>
    </author>
    <category term="C++"/>
    <contributor>
      <name>389. Find the Difference</name>
    </contributor>
    <rights>Copyright by 389. Find the Difference</rights>
  </entry>
  <entry>
    <title type="html">389. Find the Difference</title>
    <id>https://leetcode.innenu.com/389-find-the-difference/</id>
    <link href="https://leetcode.innenu.com/389-find-the-difference/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_389-find-the-difference"> <a href="https://leetcode.com/problems/find-the-difference/" target="_blank" rel="noopener noreferrer">389. Find the Difference</a></h1>
<p>You are given two strings <code>s</code> and <code>t</code>.</p>
<p>String <code>t</code> is generated by random shuffling string <code>s</code> and then add one more letter at a random position.</p>
<p>Return the letter that was added to <code>t</code>.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> s = &quot;abcd&quot;, t = &quot;abcde&quot;</p>
<p><strong>Output:</strong> &quot;e&quot;</p>
<p><strong>Explanation:</strong> 'e' is the letter that was added.</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> s = &quot;&quot;, t = &quot;y&quot;</p>
<p><strong>Output:</strong> &quot;y&quot;</p>
<p><strong>Example 3:</strong></p>
<p><strong>Input:</strong> s = &quot;a&quot;, t = &quot;aa&quot;</p>
<p><strong>Output:</strong> &quot;a&quot;</p>
<p><strong>Example 4:</strong></p>
<p><strong>Input:</strong> s = &quot;ae&quot;, t = &quot;aea&quot;</p>
<p><strong>Output:</strong> &quot;a&quot;</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>0 &lt;= s.length &lt;= 1000</code></li>
<li><code>t.length == s.length + 1</code></li>
<li><code>s</code> and <code>t</code> consist of lower-case English letters.</li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">sqm</title>
    <id>https://leetcode.innenu.com/389-find-the-difference/sqm/</id>
    <link href="https://leetcode.innenu.com/389-find-the-difference/sqm/"/>
    <updated>2021-02-17T16:18:42.665Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>
<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>
<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>char</span> <span>findTheDifference</span><span>(</span>string s<span>,</span> string t<span>)</span> <span>{</span>
    <span>sort</span><span>(</span>s<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> s<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>
    <span>sort</span><span>(</span>t<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> t<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>
    <span>int</span> i<span>;</span>
    <span>for</span> <span>(</span>i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> t<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>s<span>[</span>i<span>]</span> <span>==</span> t<span>[</span>i<span>]</span><span>)</span> <span>{</span>
      <span>}</span> <span>else</span>
        <span>return</span> t<span>[</span>i<span>]</span><span>;</span>
    <span>}</span>
    <span>return</span> t<span>[</span>i<span>]</span><span>;</span>
  <span>}</span>
<span>}</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div>]]></content>
    <author>
      <name>389. Find the Difference</name>
    </author>
    <category term="sqm"/>
    <contributor>
      <name>389. Find the Difference</name>
    </contributor>
    <rights>Copyright by 389. Find the Difference</rights>
  </entry>
  <entry>
    <title type="html">Java</title>
    <id>https://leetcode.innenu.com/4-median-of-two-sorted-arrays/Java/</id>
    <link href="https://leetcode.innenu.com/4-median-of-two-sorted-arrays/Java/"/>
    <updated>2021-02-17T16:18:42.665Z</updated>
    <content type="html"><![CDATA[<h2 id="lizncu"> lizncu</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>double</span> <span>findMedianSortedArrays</span><span>(</span><span>int</span><span>[</span><span>]</span> nums1<span>,</span> <span>int</span><span>[</span><span>]</span> nums2<span>)</span> <span>{</span>
    <span>int</span> <span>Length</span> <span>=</span> nums1<span>.</span>length <span>+</span> nums2<span>.</span>length<span>;</span>
    <span>boolean</span> <span>IsOne</span> <span>=</span> <span>false</span><span>;</span>
    <span>int</span> <span>Location</span> <span>=</span> <span>Length</span> <span>/</span> <span>2</span> <span>+</span> <span>1</span><span>;</span>

    <span>if</span> <span>(</span><span>Length</span> <span>%</span> <span>2</span> <span>!=</span> <span>0</span><span>)</span> <span>{</span>
      <span>IsOne</span> <span>=</span> <span>true</span><span>;</span>
    <span>}</span>

    <span>int</span><span>[</span><span>]</span> num <span>=</span> <span>new</span> <span>int</span><span>[</span><span>2000</span><span>]</span><span>;</span>
    <span>int</span> i <span>=</span> <span>0</span><span>;</span>
    <span>int</span> m <span>=</span> <span>0</span><span>,</span> n <span>=</span> <span>0</span><span>;</span>

    <span>while</span> <span>(</span>m <span>&lt;</span> nums1<span>.</span>length <span>&amp;&amp;</span> n <span>&lt;</span> nums2<span>.</span>length <span>&amp;&amp;</span> i <span>&lt;=</span> <span>Location</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>nums1<span>[</span>m<span>]</span> <span>&lt;</span> nums2<span>[</span>n<span>]</span><span>)</span> <span>{</span>
        num<span>[</span>i<span>]</span> <span>=</span> nums1<span>[</span>m<span>]</span><span>;</span>
        m<span>++</span><span>;</span>
        i<span>++</span><span>;</span>
      <span>}</span> <span>else</span> <span>if</span> <span>(</span>nums1<span>[</span>m<span>]</span> <span>></span> nums2<span>[</span>n<span>]</span><span>)</span> <span>{</span>
        num<span>[</span>i<span>]</span> <span>=</span> nums2<span>[</span>n<span>]</span><span>;</span>
        n<span>++</span><span>;</span>
        i<span>++</span><span>;</span>
      <span>}</span> <span>else</span> <span>{</span>
        num<span>[</span>i<span>]</span> <span>=</span> nums1<span>[</span>m<span>]</span><span>;</span>
        num<span>[</span><span>++</span>i<span>]</span> <span>=</span> nums2<span>[</span>n<span>]</span><span>;</span>
        m<span>++</span><span>;</span>
        n<span>++</span><span>;</span>
        i<span>++</span><span>;</span>
      <span>}</span>
    <span>}</span>

    <span>if</span> <span>(</span>i <span>&lt;</span> <span>Location</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>n <span>&lt;</span> nums2<span>.</span>length<span>)</span> <span>{</span>
        <span>for</span> <span>(</span><span>;</span> i <span>&lt;</span> <span>Location</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
          num<span>[</span>i<span>]</span> <span>=</span> nums2<span>[</span>n<span>]</span><span>;</span>
          n<span>++</span><span>;</span>
        <span>}</span>
      <span>}</span> <span>else</span> <span>{</span>
        <span>for</span> <span>(</span><span>;</span> i <span>&lt;</span> <span>Location</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
          num<span>[</span>i<span>]</span> <span>=</span> nums1<span>[</span>m<span>]</span><span>;</span>
          m<span>++</span><span>;</span>
        <span>}</span>
      <span>}</span>
    <span>}</span>

    <span>if</span> <span>(</span><span>IsOne</span><span>)</span> <span>{</span>
      <span>return</span> num<span>[</span><span>Location</span> <span>-</span> <span>1</span><span>]</span><span>;</span>
    <span>}</span>

    <span>else</span> <span>{</span>
      <span>return</span> <span>(</span><span>double</span><span>)</span> <span>(</span>num<span>[</span><span>Location</span> <span>-</span> <span>2</span><span>]</span> <span>+</span> num<span>[</span><span>Location</span> <span>-</span> <span>1</span><span>]</span><span>)</span> <span>/</span> <span>2</span><span>;</span>
    <span>}</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br></div></div>]]></content>
    <author>
      <name>4. Median of Two Sorted Arrays</name>
    </author>
    <category term="Java"/>
    <contributor>
      <name>4. Median of Two Sorted Arrays</name>
    </contributor>
    <rights>Copyright by 4. Median of Two Sorted Arrays</rights>
  </entry>
  <entry>
    <title type="html">lizncu</title>
    <id>https://leetcode.innenu.com/4-median-of-two-sorted-arrays/lizncu/</id>
    <link href="https://leetcode.innenu.com/4-median-of-two-sorted-arrays/lizncu/"/>
    <updated>2021-02-17T16:18:42.666Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>double</span> <span>findMedianSortedArrays</span><span>(</span><span>int</span><span>[</span><span>]</span> nums1<span>,</span> <span>int</span><span>[</span><span>]</span> nums2<span>)</span> <span>{</span>
    <span>int</span> <span>Length</span> <span>=</span> nums1<span>.</span>length <span>+</span> nums2<span>.</span>length<span>;</span>
    <span>boolean</span> <span>IsOne</span> <span>=</span> <span>false</span><span>;</span>
    <span>int</span> <span>Location</span> <span>=</span> <span>Length</span> <span>/</span> <span>2</span> <span>+</span> <span>1</span><span>;</span>

    <span>if</span> <span>(</span><span>Length</span> <span>%</span> <span>2</span> <span>!=</span> <span>0</span><span>)</span> <span>{</span>
      <span>IsOne</span> <span>=</span> <span>true</span><span>;</span>
    <span>}</span>

    <span>int</span><span>[</span><span>]</span> num <span>=</span> <span>new</span> <span>int</span><span>[</span><span>2000</span><span>]</span><span>;</span>
    <span>int</span> i <span>=</span> <span>0</span><span>;</span>
    <span>int</span> m <span>=</span> <span>0</span><span>,</span> n <span>=</span> <span>0</span><span>;</span>

    <span>while</span> <span>(</span>m <span>&lt;</span> nums1<span>.</span>length <span>&amp;&amp;</span> n <span>&lt;</span> nums2<span>.</span>length <span>&amp;&amp;</span> i <span>&lt;=</span> <span>Location</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>nums1<span>[</span>m<span>]</span> <span>&lt;</span> nums2<span>[</span>n<span>]</span><span>)</span> <span>{</span>
        num<span>[</span>i<span>]</span> <span>=</span> nums1<span>[</span>m<span>]</span><span>;</span>
        m<span>++</span><span>;</span>
        i<span>++</span><span>;</span>
      <span>}</span> <span>else</span> <span>if</span> <span>(</span>nums1<span>[</span>m<span>]</span> <span>></span> nums2<span>[</span>n<span>]</span><span>)</span> <span>{</span>
        num<span>[</span>i<span>]</span> <span>=</span> nums2<span>[</span>n<span>]</span><span>;</span>
        n<span>++</span><span>;</span>
        i<span>++</span><span>;</span>
      <span>}</span> <span>else</span> <span>{</span>
        num<span>[</span>i<span>]</span> <span>=</span> nums1<span>[</span>m<span>]</span><span>;</span>
        num<span>[</span><span>++</span>i<span>]</span> <span>=</span> nums2<span>[</span>n<span>]</span><span>;</span>
        m<span>++</span><span>;</span>
        n<span>++</span><span>;</span>
        i<span>++</span><span>;</span>
      <span>}</span>
    <span>}</span>

    <span>if</span> <span>(</span>i <span>&lt;</span> <span>Location</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>n <span>&lt;</span> nums2<span>.</span>length<span>)</span> <span>{</span>
        <span>for</span> <span>(</span><span>;</span> i <span>&lt;</span> <span>Location</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
          num<span>[</span>i<span>]</span> <span>=</span> nums2<span>[</span>n<span>]</span><span>;</span>
          n<span>++</span><span>;</span>
        <span>}</span>
      <span>}</span> <span>else</span> <span>{</span>
        <span>for</span> <span>(</span><span>;</span> i <span>&lt;</span> <span>Location</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
          num<span>[</span>i<span>]</span> <span>=</span> nums1<span>[</span>m<span>]</span><span>;</span>
          m<span>++</span><span>;</span>
        <span>}</span>
      <span>}</span>
    <span>}</span>

    <span>if</span> <span>(</span><span>IsOne</span><span>)</span> <span>{</span>
      <span>return</span> num<span>[</span><span>Location</span> <span>-</span> <span>1</span><span>]</span><span>;</span>
    <span>}</span>

    <span>else</span> <span>{</span>
      <span>return</span> <span>(</span><span>double</span><span>)</span> <span>(</span>num<span>[</span><span>Location</span> <span>-</span> <span>2</span><span>]</span> <span>+</span> num<span>[</span><span>Location</span> <span>-</span> <span>1</span><span>]</span><span>)</span> <span>/</span> <span>2</span><span>;</span>
    <span>}</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br></div></div>]]></content>
    <author>
      <name>4. Median of Two Sorted Arrays</name>
    </author>
    <category term="lizncu"/>
    <contributor>
      <name>4. Median of Two Sorted Arrays</name>
    </contributor>
    <rights>Copyright by 4. Median of Two Sorted Arrays</rights>
  </entry>
  <entry>
    <title type="html">4. Median of Two Sorted Arrays</title>
    <id>https://leetcode.innenu.com/4-median-of-two-sorted-arrays/</id>
    <link href="https://leetcode.innenu.com/4-median-of-two-sorted-arrays/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_4-median-of-two-sorted-arrays"> <a href="https://leetcode.com/problems/median-of-two-sorted-arrays/" target="_blank" rel="noopener noreferrer">4. Median of Two Sorted Arrays</a></h1>
<p>Given two sorted arrays <code>nums1</code> and <code>nums2</code> of size <code>m</code> and <code>n</code> respectively, return <strong>the median</strong> of the two sorted arrays.</p>
<p><strong>Follow up:</strong> The overall run time complexity should be <code>O(log (m+n))</code>.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> nums1 = [1,3], nums2 = [2]</p>
<p><strong>Output:</strong> 2.00000</p>
<p><strong>Explanation:</strong> merged array = [1,2,3] and median is 2.</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> nums1 = [1,2], nums2 = [3,4]</p>
<p><strong>Output:</strong> 2.50000</p>
<p><strong>Explanation:</strong> merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.</p>
<p><strong>Example 3:</strong></p>
<p><strong>Input:</strong> nums1 = [0,0], nums2 = [0,0]</p>
<p><strong>Output:</strong> 0.00000</p>
<p><strong>Example 4:</strong></p>
<p><strong>Input:</strong> nums1 = [], nums2 = [1]</p>
<p><strong>Output:</strong> 1.00000</p>
<p><strong>Example 5:</strong></p>
<p><strong>Input:</strong> nums1 = [2], nums2 = []</p>
<p><strong>Output:</strong> 2.00000</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>nums1.length == m</code></li>
<li><code>nums2.length == n</code></li>
<li><code>0 &lt;= m &lt;= 1000</code></li>
<li><code>0 &lt;= n &lt;= 1000</code></li>
<li><code>1 &lt;= m + n &lt;= 2000</code></li>
<li><code>-106 &lt;= nums1[i], nums2[i] &lt;= 106</code></li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">JavaScript</title>
    <id>https://leetcode.innenu.com/415-add-strings/JavaScript/</id>
    <link href="https://leetcode.innenu.com/415-add-strings/JavaScript/"/>
    <updated>2021-02-17T16:18:42.667Z</updated>
    <content type="html"><![CDATA[<h2 id="mister-hope"> Mister-Hope</h2>
<h3 id="simple"> simple</h3>
<div><pre><code><span>/*
 * Runtime: 84 ms, faster than 91.39% of JavaScript online submissions for Add Strings.
 *
 * Memory Usage: 40.6 MB, less than 5.04% of JavaScript online submissions for Add Strings.
 */</span>

<span>const</span> <span>addStrings</span> <span>=</span> <span>(</span><span>num1<span>,</span> num2</span><span>)</span> <span>=></span> <span>(</span><span>BigInt</span><span>(</span>num1<span>)</span> <span>+</span> <span>BigInt</span><span>(</span>num2<span>)</span><span>)</span><span>.</span><span>toString</span><span>(</span><span>)</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div>]]></content>
    <author>
      <name>415. Add Strings</name>
    </author>
    <category term="JavaScript"/>
    <contributor>
      <name>415. Add Strings</name>
    </contributor>
    <rights>Copyright by 415. Add Strings</rights>
  </entry>
  <entry>
    <title type="html">Mister-Hope</title>
    <id>https://leetcode.innenu.com/415-add-strings/Mister-Hope/</id>
    <link href="https://leetcode.innenu.com/415-add-strings/Mister-Hope/"/>
    <updated>2021-02-17T16:18:42.667Z</updated>
    <content type="html"><![CDATA[<h2 id="javascript"> JavaScript</h2>
<h3 id="simple"> simple</h3>
<div><pre><code><span>/*
 * Runtime: 84 ms, faster than 91.39% of JavaScript online submissions for Add Strings.
 *
 * Memory Usage: 40.6 MB, less than 5.04% of JavaScript online submissions for Add Strings.
 */</span>

<span>const</span> <span>addStrings</span> <span>=</span> <span>(</span><span>num1<span>,</span> num2</span><span>)</span> <span>=></span> <span>(</span><span>BigInt</span><span>(</span>num1<span>)</span> <span>+</span> <span>BigInt</span><span>(</span>num2<span>)</span><span>)</span><span>.</span><span>toString</span><span>(</span><span>)</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h2 id="typescript"> TypeScript</h2>
<h3 id="simple-2"> simple</h3>
<div><pre><code><span>/*
 * Runtime: 88 ms, faster than 100.00% of TypeScript online submissions for Add Strings.
 *
 * Memory Usage: 40.2 MB, less than 7.14% of TypeScript online submissions for Add Strings.
 */</span>

<span>const</span> addStrings <span>=</span> <span>(</span>num1<span>:</span> <span>string</span><span>,</span> num2<span>:</span> <span>string</span><span>)</span><span>:</span> <span>string</span> <span>=></span>
  <span>(</span><span>BigInt</span><span>(</span>num1<span>)</span> <span>+</span> <span>BigInt</span><span>(</span>num2<span>)</span><span>)</span><span>.</span><span>toString</span><span>(</span><span>)</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div>]]></content>
    <author>
      <name>415. Add Strings</name>
    </author>
    <category term="Mister-Hope"/>
    <contributor>
      <name>415. Add Strings</name>
    </contributor>
    <rights>Copyright by 415. Add Strings</rights>
  </entry>
  <entry>
    <title type="html">TypeScript</title>
    <id>https://leetcode.innenu.com/415-add-strings/TypeScript/</id>
    <link href="https://leetcode.innenu.com/415-add-strings/TypeScript/"/>
    <updated>2021-02-17T16:18:42.668Z</updated>
    <content type="html"><![CDATA[<h2 id="mister-hope"> Mister-Hope</h2>
<h3 id="simple"> simple</h3>
<div><pre><code><span>/*
 * Runtime: 88 ms, faster than 100.00% of TypeScript online submissions for Add Strings.
 *
 * Memory Usage: 40.2 MB, less than 7.14% of TypeScript online submissions for Add Strings.
 */</span>

<span>const</span> addStrings <span>=</span> <span>(</span>num1<span>:</span> <span>string</span><span>,</span> num2<span>:</span> <span>string</span><span>)</span><span>:</span> <span>string</span> <span>=></span>
  <span>(</span><span>BigInt</span><span>(</span>num1<span>)</span> <span>+</span> <span>BigInt</span><span>(</span>num2<span>)</span><span>)</span><span>.</span><span>toString</span><span>(</span><span>)</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div>]]></content>
    <author>
      <name>415. Add Strings</name>
    </author>
    <category term="TypeScript"/>
    <contributor>
      <name>415. Add Strings</name>
    </contributor>
    <rights>Copyright by 415. Add Strings</rights>
  </entry>
  <entry>
    <title type="html">415. Add Strings</title>
    <id>https://leetcode.innenu.com/415-add-strings/</id>
    <link href="https://leetcode.innenu.com/415-add-strings/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_415-add-strings"> <a href="https://leetcode.com/problems/add-strings/" target="_blank" rel="noopener noreferrer">415. Add Strings</a></h1>
<p>Given two non-negative integers <code>num1</code> and <code>num2</code> represented as string, return the sum of <code>num1</code> and <code>num2</code>.</p>
<p><strong>Note:</strong></p>
<ol>
<li>The length of both <code>num1</code> and <code>num2</code> is &lt; 5100.</li>
<li>Both <code>num1</code> and <code>num2</code> contains only digits <code>0-9</code>.</li>
<li>Both <code>num1</code> and <code>num2</code> does not contain any leading zero.</li>
<li>You <strong>must not use any built-in BigInteger library</strong> or <strong>convert the inputs to integer</strong> directly.</li>
</ol>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">JavaScript</title>
    <id>https://leetcode.innenu.com/43-multiply-strings/JavaScript/</id>
    <link href="https://leetcode.innenu.com/43-multiply-strings/JavaScript/"/>
    <updated>2021-02-17T16:18:42.668Z</updated>
    <content type="html"><![CDATA[<h2 id="mister-hope"> Mister-Hope</h2>
<h3 id="simple"> simple</h3>
<div><pre><code><span>/*
 * Runtime: 88 ms, faster than 89.78% of JavaScript online submissions for Multiply Strings.
 *
 * Memory Usage: 38.6 MB, less than 5.35% of JavaScript online submissions for Multiply Strings.
 */</span>

<span>const</span> <span>multiply</span> <span>=</span> <span>(</span><span>num1<span>,</span> num2</span><span>)</span> <span>=></span> <span>(</span><span>BigInt</span><span>(</span>num1<span>)</span> <span>*</span> <span>BigInt</span><span>(</span>num2<span>)</span><span>)</span><span>.</span><span>toString</span><span>(</span><span>)</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div>]]></content>
    <author>
      <name>43. Multiply Strings</name>
    </author>
    <category term="JavaScript"/>
    <contributor>
      <name>43. Multiply Strings</name>
    </contributor>
    <rights>Copyright by 43. Multiply Strings</rights>
  </entry>
  <entry>
    <title type="html">Mister-Hope</title>
    <id>https://leetcode.innenu.com/43-multiply-strings/Mister-Hope/</id>
    <link href="https://leetcode.innenu.com/43-multiply-strings/Mister-Hope/"/>
    <updated>2021-02-17T16:18:42.669Z</updated>
    <content type="html"><![CDATA[<h2 id="javascript"> JavaScript</h2>
<h3 id="simple"> simple</h3>
<div><pre><code><span>/*
 * Runtime: 88 ms, faster than 89.78% of JavaScript online submissions for Multiply Strings.
 *
 * Memory Usage: 38.6 MB, less than 5.35% of JavaScript online submissions for Multiply Strings.
 */</span>

<span>const</span> <span>multiply</span> <span>=</span> <span>(</span><span>num1<span>,</span> num2</span><span>)</span> <span>=></span> <span>(</span><span>BigInt</span><span>(</span>num1<span>)</span> <span>*</span> <span>BigInt</span><span>(</span>num2<span>)</span><span>)</span><span>.</span><span>toString</span><span>(</span><span>)</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h2 id="typescript"> TypeScript</h2>
<h3 id="smiple"> smiple</h3>
<div><pre><code><span>/*
 * Runtime: 96 ms, faster than 95.45% of TypeScript online submissions for Multiply Strings.
 *
 * Memory Usage: 40.3 MB, less than 9.09% of TypeScript online submissions for Multiply Strings.
 */</span>

<span>const</span> multiply <span>=</span> <span>(</span>num1<span>:</span> <span>string</span><span>,</span> num2<span>:</span> <span>string</span><span>)</span><span>:</span> <span>string</span> <span>=></span>
  <span>(</span><span>BigInt</span><span>(</span>num1<span>)</span> <span>*</span> <span>BigInt</span><span>(</span>num2<span>)</span><span>)</span><span>.</span><span>toString</span><span>(</span><span>)</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div>]]></content>
    <author>
      <name>43. Multiply Strings</name>
    </author>
    <category term="Mister-Hope"/>
    <contributor>
      <name>43. Multiply Strings</name>
    </contributor>
    <rights>Copyright by 43. Multiply Strings</rights>
  </entry>
  <entry>
    <title type="html">TypeScript</title>
    <id>https://leetcode.innenu.com/43-multiply-strings/TypeScript/</id>
    <link href="https://leetcode.innenu.com/43-multiply-strings/TypeScript/"/>
    <updated>2021-02-17T16:18:42.669Z</updated>
    <content type="html"><![CDATA[<h2 id="mister-hope"> Mister-Hope</h2>
<h3 id="smiple"> smiple</h3>
<div><pre><code><span>/*
 * Runtime: 96 ms, faster than 95.45% of TypeScript online submissions for Multiply Strings.
 *
 * Memory Usage: 40.3 MB, less than 9.09% of TypeScript online submissions for Multiply Strings.
 */</span>

<span>const</span> multiply <span>=</span> <span>(</span>num1<span>:</span> <span>string</span><span>,</span> num2<span>:</span> <span>string</span><span>)</span><span>:</span> <span>string</span> <span>=></span>
  <span>(</span><span>BigInt</span><span>(</span>num1<span>)</span> <span>*</span> <span>BigInt</span><span>(</span>num2<span>)</span><span>)</span><span>.</span><span>toString</span><span>(</span><span>)</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div>]]></content>
    <author>
      <name>43. Multiply Strings</name>
    </author>
    <category term="TypeScript"/>
    <contributor>
      <name>43. Multiply Strings</name>
    </contributor>
    <rights>Copyright by 43. Multiply Strings</rights>
  </entry>
  <entry>
    <title type="html">43. Multiply Strings</title>
    <id>https://leetcode.innenu.com/43-multiply-strings/</id>
    <link href="https://leetcode.innenu.com/43-multiply-strings/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_43-multiply-strings"> <a href="https://leetcode.com/problems/multiply-strings/" target="_blank" rel="noopener noreferrer">43. Multiply Strings</a></h1>
<p>Given two non-negative integers <code>num1</code> and <code>num2</code> represented as strings, return the product of <code>num1</code> and <code>num2</code>, also represented as a string.</p>
<p><strong>Note:</strong> You must not use any built-in BigInteger library or convert the inputs to integer directly.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> num1 = &quot;2&quot;, num2 = &quot;3&quot;</p>
<p><strong>Output:</strong> &quot;6&quot;</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> num1 = &quot;123&quot;, num2 = &quot;456&quot;</p>
<p><strong>Output:</strong> &quot;56088&quot;</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>1 &lt;= num1.length, num2.length &lt;= 200</code></li>
<li><code>num1</code> and <code>num2</code> consist of digits only.</li>
<li>Both <code>num1</code> and <code>num2</code> do not contain any leading zero, except the number <code>0</code> itself.</li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">C++</title>
    <id>https://leetcode.innenu.com/455-assign-cookies/C++/</id>
    <link href="https://leetcode.innenu.com/455-assign-cookies/C++/"/>
    <updated>2021-02-17T16:18:42.670Z</updated>
    <content type="html"><![CDATA[<h2 id="lmy"> lmy</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>int</span> <span>findContentChildren</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> g<span>,</span> vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> s<span>)</span> <span>{</span>
    <span>sort</span><span>(</span>g<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> g<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>
    <span>sort</span><span>(</span>s<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> s<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>
    <span>int</span> k <span>=</span> s<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>;</span>
    <span>int</span> ans <span>=</span> <span>0</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> g<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>;</span> i <span>>=</span> <span>0</span><span>;</span> i<span>--</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>k <span>>=</span> <span>0</span> <span>&amp;&amp;</span> s<span>[</span>k<span>]</span> <span>>=</span> g<span>[</span>i<span>]</span><span>)</span> <span>{</span>
        ans<span>++</span><span>;</span>
        k<span>--</span><span>;</span>
      <span>}</span>
    <span>}</span>
    <span>return</span> ans<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>]]></content>
    <author>
      <name>455. Assign Cookies</name>
    </author>
    <category term="C++"/>
    <contributor>
      <name>455. Assign Cookies</name>
    </contributor>
    <rights>Copyright by 455. Assign Cookies</rights>
  </entry>
  <entry>
    <title type="html">lmy</title>
    <id>https://leetcode.innenu.com/455-assign-cookies/lmy/</id>
    <link href="https://leetcode.innenu.com/455-assign-cookies/lmy/"/>
    <updated>2021-02-17T16:18:42.670Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>int</span> <span>findContentChildren</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> g<span>,</span> vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> s<span>)</span> <span>{</span>
    <span>sort</span><span>(</span>g<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> g<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>
    <span>sort</span><span>(</span>s<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> s<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>
    <span>int</span> k <span>=</span> s<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>;</span>
    <span>int</span> ans <span>=</span> <span>0</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> g<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>;</span> i <span>>=</span> <span>0</span><span>;</span> i<span>--</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>k <span>>=</span> <span>0</span> <span>&amp;&amp;</span> s<span>[</span>k<span>]</span> <span>>=</span> g<span>[</span>i<span>]</span><span>)</span> <span>{</span>
        ans<span>++</span><span>;</span>
        k<span>--</span><span>;</span>
      <span>}</span>
    <span>}</span>
    <span>return</span> ans<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>]]></content>
    <author>
      <name>455. Assign Cookies</name>
    </author>
    <category term="lmy"/>
    <contributor>
      <name>455. Assign Cookies</name>
    </contributor>
    <rights>Copyright by 455. Assign Cookies</rights>
  </entry>
  <entry>
    <title type="html">455. Assign Cookies</title>
    <id>https://leetcode.innenu.com/455-assign-cookies/</id>
    <link href="https://leetcode.innenu.com/455-assign-cookies/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_455-assign-cookies"> <a href="https://leetcode.com/problems/assign-cookies/" target="_blank" rel="noopener noreferrer">455. Assign Cookies</a></h1>
<p>Assume you are an awesome parent and want to give your children some cookies. But, you should give each child at most one cookie.</p>
<p>Each child <code>i</code> has a greed factor <code>g[i]</code>, which is the minimum size of a cookie that the child will be content with; and each cookie <code>j</code> has a size <code>s[j]</code>. If <code>s[j] &gt;= g[i]</code>, we can assign the cookie <code>j</code> to the child <code>i</code>, and the child <code>i</code> will be content. Your goal is to maximize the number of your content children and output the maximum number.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> g = [1,2,3], s = [1,1]</p>
<p><strong>Output:</strong> 1</p>
<p><strong>Explanation:</strong> You have 3 children and 2 cookies. The greed factors of 3 children are 1, 2, 3.
And even though you have 2 cookies, since their size is both 1, you could only make the child whose greed factor is 1 content.
You need to output 1.</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> g = [1,2], s = [1,2,3]</p>
<p><strong>Output:</strong> 2</p>
<p><strong>Explanation:</strong> You have 2 children and 3 cookies. The greed factors of 2 children are 1, 2.
You have 3 cookies and their sizes are big enough to gratify all of the children,
You need to output 2.</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>1 &lt;= g.length &lt;= 3 * 104</code></li>
<li><code>0 &lt;= s.length &lt;= 3 * 104</code></li>
<li><code>1 &lt;= g[i], s[j] &lt;= 231 - 1</code></li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">C++</title>
    <id>https://leetcode.innenu.com/461-hamming-distance/C++/</id>
    <link href="https://leetcode.innenu.com/461-hamming-distance/C++/"/>
    <updated>2021-02-17T16:18:42.671Z</updated>
    <content type="html"><![CDATA[<h2 id="sqm"> sqm</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>
<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>int</span> <span>hammingDistance</span><span>(</span><span>int</span> x<span>,</span> <span>int</span> y<span>)</span> <span>{</span>
    <span>int</span> d <span>=</span> x <span>^</span> y<span>,</span> c <span>=</span> <span>0</span><span>;</span>
    <span>while</span> <span>(</span>d<span>)</span> <span>{</span>
      d <span>=</span> d <span>&amp;</span> <span>(</span>d <span>-</span> <span>1</span><span>)</span><span>;</span>
      c<span>++</span><span>;</span>
    <span>}</span>
    <span>return</span> c<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div>]]></content>
    <author>
      <name>461. Hamming Distance</name>
    </author>
    <category term="C++"/>
    <contributor>
      <name>461. Hamming Distance</name>
    </contributor>
    <rights>Copyright by 461. Hamming Distance</rights>
  </entry>
  <entry>
    <title type="html">Java</title>
    <id>https://leetcode.innenu.com/461-hamming-distance/Java/</id>
    <link href="https://leetcode.innenu.com/461-hamming-distance/Java/"/>
    <updated>2021-02-17T16:18:42.671Z</updated>
    <content type="html"><![CDATA[<h2 id="lizncu"> lizncu</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span> <span>hammingDistance</span><span>(</span><span>int</span> x<span>,</span> <span>int</span> y<span>)</span> <span>{</span>
    <span>int</span> count <span>=</span> <span>0</span><span>;</span>
    <span>if</span> <span>(</span>x <span>==</span> y<span>)</span> <span>{</span>
      <span>return</span> <span>0</span><span>;</span>
    <span>}</span>
    <span>while</span> <span>(</span>x <span>!=</span> <span>0</span> <span>||</span> y <span>!=</span> <span>0</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>x <span>%</span> <span>2</span> <span>!=</span> y <span>%</span> <span>2</span><span>)</span> <span>{</span>
        count<span>++</span><span>;</span>
      <span>}</span>
      x <span>=</span> x <span>/</span> <span>2</span><span>;</span>
      y <span>=</span> y <span>/</span> <span>2</span><span>;</span>
    <span>}</span>
    <span>return</span> count<span>;</span>
  <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>]]></content>
    <author>
      <name>461. Hamming Distance</name>
    </author>
    <category term="Java"/>
    <contributor>
      <name>461. Hamming Distance</name>
    </contributor>
    <rights>Copyright by 461. Hamming Distance</rights>
  </entry>
  <entry>
    <title type="html">lizncu</title>
    <id>https://leetcode.innenu.com/461-hamming-distance/lizncu/</id>
    <link href="https://leetcode.innenu.com/461-hamming-distance/lizncu/"/>
    <updated>2021-02-17T16:18:42.671Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span> <span>hammingDistance</span><span>(</span><span>int</span> x<span>,</span> <span>int</span> y<span>)</span> <span>{</span>
    <span>int</span> count <span>=</span> <span>0</span><span>;</span>
    <span>if</span> <span>(</span>x <span>==</span> y<span>)</span> <span>{</span>
      <span>return</span> <span>0</span><span>;</span>
    <span>}</span>
    <span>while</span> <span>(</span>x <span>!=</span> <span>0</span> <span>||</span> y <span>!=</span> <span>0</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>x <span>%</span> <span>2</span> <span>!=</span> y <span>%</span> <span>2</span><span>)</span> <span>{</span>
        count<span>++</span><span>;</span>
      <span>}</span>
      x <span>=</span> x <span>/</span> <span>2</span><span>;</span>
      y <span>=</span> y <span>/</span> <span>2</span><span>;</span>
    <span>}</span>
    <span>return</span> count<span>;</span>
  <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>]]></content>
    <author>
      <name>461. Hamming Distance</name>
    </author>
    <category term="lizncu"/>
    <contributor>
      <name>461. Hamming Distance</name>
    </contributor>
    <rights>Copyright by 461. Hamming Distance</rights>
  </entry>
  <entry>
    <title type="html">461. Hamming Distance</title>
    <id>https://leetcode.innenu.com/461-hamming-distance/</id>
    <link href="https://leetcode.innenu.com/461-hamming-distance/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_461-hamming-distance"> <a href="https://leetcode-cn.com/problems/hamming-distance/" target="_blank" rel="noopener noreferrer">461. Hamming Distance</a></h1>
<p>The Hamming distance between two integers is the number of positions at which the corresponding bits are different.</p>
<p>Given two integers x and y, calculate the Hamming distance.</p>
<p>Note:
0 ≤ x, y &lt; 231.</p>
<p><strong>Example:</strong></p>
<p><strong>Input:</strong> x = 1, y = 4</p>
<p><strong>Output:</strong> 2</p>
<p><strong>Explanation:</strong>
1 (0 0 0 1)
4 (0 1 0 0)
↑ ↑</p>
<p>The above arrows point to positions where the corresponding bits are different.</p>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">sqm</title>
    <id>https://leetcode.innenu.com/461-hamming-distance/sqm/</id>
    <link href="https://leetcode.innenu.com/461-hamming-distance/sqm/"/>
    <updated>2021-02-17T16:18:42.672Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>
<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>int</span> <span>hammingDistance</span><span>(</span><span>int</span> x<span>,</span> <span>int</span> y<span>)</span> <span>{</span>
    <span>int</span> d <span>=</span> x <span>^</span> y<span>,</span> c <span>=</span> <span>0</span><span>;</span>
    <span>while</span> <span>(</span>d<span>)</span> <span>{</span>
      d <span>=</span> d <span>&amp;</span> <span>(</span>d <span>-</span> <span>1</span><span>)</span><span>;</span>
      c<span>++</span><span>;</span>
    <span>}</span>
    <span>return</span> c<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div>]]></content>
    <author>
      <name>461. Hamming Distance</name>
    </author>
    <category term="sqm"/>
    <contributor>
      <name>461. Hamming Distance</name>
    </contributor>
    <rights>Copyright by 461. Hamming Distance</rights>
  </entry>
  <entry>
    <title type="html">C++</title>
    <id>https://leetcode.innenu.com/53-maximum-subarray/C++/</id>
    <link href="https://leetcode.innenu.com/53-maximum-subarray/C++/"/>
    <updated>2021-02-17T16:18:42.672Z</updated>
    <content type="html"><![CDATA[<h2 id="virgil"> Virgil</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>
<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>
<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>int</span> <span>maxSubArray</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums<span>)</span> <span>{</span>
    vector<span>&lt;</span><span>int</span><span>></span> <span>dp</span><span>(</span>nums<span>.</span><span>size</span><span>(</span><span>)</span><span>)</span><span>;</span>
    dp<span>[</span><span>0</span><span>]</span> <span>=</span> nums<span>[</span><span>0</span><span>]</span><span>;</span>
    <span>int</span> maxn <span>=</span> dp<span>[</span><span>0</span><span>]</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>1</span><span>;</span> i <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      dp<span>[</span>i<span>]</span> <span>=</span> <span>max</span><span>(</span>dp<span>[</span>i <span>-</span> <span>1</span><span>]</span> <span>+</span> nums<span>[</span>i<span>]</span><span>,</span> nums<span>[</span>i<span>]</span><span>)</span><span>;</span>
      maxn <span>=</span> <span>max</span><span>(</span>dp<span>[</span>i<span>]</span><span>,</span> maxn<span>)</span><span>;</span>
    <span>}</span>

    <span>return</span> maxn<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div>]]></content>
    <author>
      <name>53. Maximum Subarray</name>
    </author>
    <category term="C++"/>
    <contributor>
      <name>53. Maximum Subarray</name>
    </contributor>
    <rights>Copyright by 53. Maximum Subarray</rights>
  </entry>
  <entry>
    <title type="html">Virgil</title>
    <id>https://leetcode.innenu.com/53-maximum-subarray/Virgil/</id>
    <link href="https://leetcode.innenu.com/53-maximum-subarray/Virgil/"/>
    <updated>2021-02-17T16:18:42.673Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>
<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>
<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>int</span> <span>maxSubArray</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums<span>)</span> <span>{</span>
    vector<span>&lt;</span><span>int</span><span>></span> <span>dp</span><span>(</span>nums<span>.</span><span>size</span><span>(</span><span>)</span><span>)</span><span>;</span>
    dp<span>[</span><span>0</span><span>]</span> <span>=</span> nums<span>[</span><span>0</span><span>]</span><span>;</span>
    <span>int</span> maxn <span>=</span> dp<span>[</span><span>0</span><span>]</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>1</span><span>;</span> i <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      dp<span>[</span>i<span>]</span> <span>=</span> <span>max</span><span>(</span>dp<span>[</span>i <span>-</span> <span>1</span><span>]</span> <span>+</span> nums<span>[</span>i<span>]</span><span>,</span> nums<span>[</span>i<span>]</span><span>)</span><span>;</span>
      maxn <span>=</span> <span>max</span><span>(</span>dp<span>[</span>i<span>]</span><span>,</span> maxn<span>)</span><span>;</span>
    <span>}</span>

    <span>return</span> maxn<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div>]]></content>
    <author>
      <name>53. Maximum Subarray</name>
    </author>
    <category term="Virgil"/>
    <contributor>
      <name>53. Maximum Subarray</name>
    </contributor>
    <rights>Copyright by 53. Maximum Subarray</rights>
  </entry>
  <entry>
    <title type="html">53. Maximum Subarray</title>
    <id>https://leetcode.innenu.com/53-maximum-subarray/</id>
    <link href="https://leetcode.innenu.com/53-maximum-subarray/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_53-maximum-subarray"> <a href="https://leetcode.com/problems/maximum-subarray/" target="_blank" rel="noopener noreferrer">53. Maximum Subarray</a></h1>
<p>Given an integer array <code>nums</code>, find the contiguous subarray (containing at least one number) which has the largest sum and return <em>its sum</em>.</p>
<p><strong>Follow up:</strong> If you have figured out the <code>O(n)</code> solution, try coding another solution using the <strong>divide and conquer</strong> approach, which is more subtle.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> nums = [-2,1,-3,4,-1,2,1,-5,4]</p>
<p><strong>Output:</strong> 6</p>
<p><strong>Explanation:</strong> [4,-1,2,1] has the largest sum = 6.</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> nums = [1]</p>
<p><strong>Output:</strong> 1</p>
<p><strong>Example 3:</strong></p>
<p><strong>Input:</strong> nums = [0]</p>
<p><strong>Output:</strong> 0</p>
<p><strong>Example 4:</strong></p>
<p><strong>Input:</strong> nums = [-1]</p>
<p><strong>Output:</strong> -1</p>
<p><strong>Example 5:</strong></p>
<p><strong>Input:</strong> nums = [-2147483647]</p>
<p><strong>Output:</strong> -2147483647</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>1 &lt;= nums.length &lt;= 2 * 104</code></li>
<li><code>-231 &lt;= nums[i] &lt;= 231 - 1</code></li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">58. Length of Last Word</title>
    <id>https://leetcode.innenu.com/58-uo-xuan-zhuan-zi-fu-chuan-lcof/</id>
    <link href="https://leetcode.innenu.com/58-uo-xuan-zhuan-zi-fu-chuan-lcof/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_58-length-of-last-word"> <a href="https://leetcode.com/problems/length-of-last-word/" target="_blank" rel="noopener noreferrer">58. Length of Last Word</a></h1>
<p>Given a string <code>s</code> consists of some words separated by spaces, return <em>the length of the last word in the string. If the last word does not exist, return</em> <code>0</code>.</p>
<p>A <strong>word</strong> is a maximal substring consisting of non-space characters only.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> s = &quot;Hello World&quot;</p>
<p><strong>Output:</strong> 5</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> s = &quot; &quot;</p>
<p><strong>Output:</strong> 0</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>1 &lt;= s.length &lt;= 104</code></li>
<li><code>s</code> consists of only English letters and spaces <code>' '</code>.</li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">C++</title>
    <id>https://leetcode.innenu.com/66-plus-one/C++/</id>
    <link href="https://leetcode.innenu.com/66-plus-one/C++/"/>
    <updated>2021-02-17T16:18:42.675Z</updated>
    <content type="html"><![CDATA[<h2 id="sqm"> sqm</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  vector<span>&lt;</span><span>int</span><span>></span> <span>plusOne</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> digits<span>)</span> <span>{</span>
    digits<span>[</span>digits<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>]</span> <span>+=</span> <span>1</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> digits<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>;</span> i <span>></span> <span>0</span><span>;</span> i<span>--</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>digits<span>[</span>i<span>]</span> <span>==</span> <span>10</span><span>)</span> <span>{</span>
        digits<span>[</span>i <span>-</span> <span>1</span><span>]</span><span>++</span><span>;</span>
        digits<span>[</span>i<span>]</span> <span>=</span> <span>0</span><span>;</span>
      <span>}</span>
    <span>}</span>
    <span>if</span> <span>(</span>digits<span>[</span><span>0</span><span>]</span> <span>==</span> <span>10</span><span>)</span> <span>{</span>
      digits<span>[</span><span>0</span><span>]</span> <span>=</span> <span>0</span><span>;</span>
      digits<span>.</span><span>insert</span><span>(</span>digits<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> <span>1</span><span>)</span><span>;</span>
    <span>}</span>
    <span>return</span> digits<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br></div></div>]]></content>
    <author>
      <name>66. Plus One</name>
    </author>
    <category term="C++"/>
    <contributor>
      <name>66. Plus One</name>
    </contributor>
    <rights>Copyright by 66. Plus One</rights>
  </entry>
  <entry>
    <title type="html">JavaScript</title>
    <id>https://leetcode.innenu.com/66-plus-one/JavaScript/</id>
    <link href="https://leetcode.innenu.com/66-plus-one/JavaScript/"/>
    <updated>2021-02-17T16:18:42.675Z</updated>
    <content type="html"><![CDATA[<h2 id="mister-hope"> Mister-Hope</h2>
<div><pre><code><span>/*
 * Runtime: 76 ms, faster than 74.71% of JavaScript online submissions for Plus One.
 *
 * Memory Usage: 38.9 MB, less than 51.87% of JavaScript online submissions for Plus One.
 */</span>

<span>var</span> <span>plusOne</span> <span>=</span> <span>(</span><span>digits</span><span>)</span> <span>=></span> <span>{</span>
  <span>let</span> x <span>=</span> digits<span>.</span>length<span>,</span>
    num<span>;</span>
  <span>do</span> <span>{</span>
    x<span>--</span><span>;</span>
    num <span>=</span> digits<span>[</span>x<span>]</span><span>;</span>
  <span>}</span> <span>while</span> <span>(</span>num <span>===</span> <span>9</span><span>)</span><span>;</span>
  digits<span>.</span><span>fill</span><span>(</span><span>0</span><span>,</span> x <span>+</span> <span>1</span><span>)</span><span>;</span>
  x <span>>=</span> <span>0</span> <span>?</span> <span>(</span>digits<span>[</span>x<span>]</span> <span>=</span> num <span>+</span> <span>1</span><span>)</span> <span>:</span> digits<span>.</span><span>unshift</span><span>(</span><span>1</span><span>)</span><span>;</span>
  <span>return</span> digits<span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div>]]></content>
    <author>
      <name>66. Plus One</name>
    </author>
    <category term="JavaScript"/>
    <contributor>
      <name>66. Plus One</name>
    </contributor>
    <rights>Copyright by 66. Plus One</rights>
  </entry>
  <entry>
    <title type="html">Mister-Hope</title>
    <id>https://leetcode.innenu.com/66-plus-one/Mister-Hope/</id>
    <link href="https://leetcode.innenu.com/66-plus-one/Mister-Hope/"/>
    <updated>2021-02-17T16:18:42.675Z</updated>
    <content type="html"><![CDATA[<h2 id="javascript"> JavaScript</h2>
<div><pre><code><span>/*
 * Runtime: 76 ms, faster than 74.71% of JavaScript online submissions for Plus One.
 *
 * Memory Usage: 38.9 MB, less than 51.87% of JavaScript online submissions for Plus One.
 */</span>

<span>var</span> <span>plusOne</span> <span>=</span> <span>(</span><span>digits</span><span>)</span> <span>=></span> <span>{</span>
  <span>let</span> x <span>=</span> digits<span>.</span>length<span>,</span>
    num<span>;</span>
  <span>do</span> <span>{</span>
    x<span>--</span><span>;</span>
    num <span>=</span> digits<span>[</span>x<span>]</span><span>;</span>
  <span>}</span> <span>while</span> <span>(</span>num <span>===</span> <span>9</span><span>)</span><span>;</span>
  digits<span>.</span><span>fill</span><span>(</span><span>0</span><span>,</span> x <span>+</span> <span>1</span><span>)</span><span>;</span>
  x <span>>=</span> <span>0</span> <span>?</span> <span>(</span>digits<span>[</span>x<span>]</span> <span>=</span> num <span>+</span> <span>1</span><span>)</span> <span>:</span> digits<span>.</span><span>unshift</span><span>(</span><span>1</span><span>)</span><span>;</span>
  <span>return</span> digits<span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div><h2 id="typescript"> TypeScript</h2>
<div><pre><code><span>/*
 * Runtime: 76 ms, faster than 92.50% of TypeScript online submissions for Plus One.
 *
 * Memory Usage: 39.2 MB, less than 15.00% of TypeScript online submissions for Plus One.
 */</span>

<span>const</span> plusOne <span>=</span> <span>(</span>digits<span>:</span> <span>number</span><span>[</span><span>]</span><span>)</span><span>:</span> <span>number</span><span>[</span><span>]</span> <span>=></span> <span>{</span>
  <span>let</span> x <span>=</span> digits<span>.</span>length<span>,</span>
    num<span>;</span>
  <span>do</span> <span>{</span>
    x<span>--</span><span>;</span>
    num <span>=</span> digits<span>[</span>x<span>]</span><span>;</span>
  <span>}</span> <span>while</span> <span>(</span>num <span>===</span> <span>9</span><span>)</span><span>;</span>
  digits<span>.</span><span>fill</span><span>(</span><span>0</span><span>,</span> x <span>+</span> <span>1</span><span>)</span><span>;</span>
  x <span>>=</span> <span>0</span> <span>?</span> <span>(</span>digits<span>[</span>x<span>]</span> <span>=</span> num <span>+</span> <span>1</span><span>)</span> <span>:</span> digits<span>.</span><span>unshift</span><span>(</span><span>1</span><span>)</span><span>;</span>
  <span>return</span> digits<span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div>]]></content>
    <author>
      <name>66. Plus One</name>
    </author>
    <category term="Mister-Hope"/>
    <contributor>
      <name>66. Plus One</name>
    </contributor>
    <rights>Copyright by 66. Plus One</rights>
  </entry>
  <entry>
    <title type="html">TypeScript</title>
    <id>https://leetcode.innenu.com/66-plus-one/TypeScript/</id>
    <link href="https://leetcode.innenu.com/66-plus-one/TypeScript/"/>
    <updated>2021-02-17T16:18:42.676Z</updated>
    <content type="html"><![CDATA[<h2 id="mister-hope"> Mister-Hope</h2>
<div><pre><code><span>/*
 * Runtime: 76 ms, faster than 92.50% of TypeScript online submissions for Plus One.
 *
 * Memory Usage: 39.2 MB, less than 15.00% of TypeScript online submissions for Plus One.
 */</span>

<span>const</span> plusOne <span>=</span> <span>(</span>digits<span>:</span> <span>number</span><span>[</span><span>]</span><span>)</span><span>:</span> <span>number</span><span>[</span><span>]</span> <span>=></span> <span>{</span>
  <span>let</span> x <span>=</span> digits<span>.</span>length<span>,</span>
    num<span>;</span>
  <span>do</span> <span>{</span>
    x<span>--</span><span>;</span>
    num <span>=</span> digits<span>[</span>x<span>]</span><span>;</span>
  <span>}</span> <span>while</span> <span>(</span>num <span>===</span> <span>9</span><span>)</span><span>;</span>
  digits<span>.</span><span>fill</span><span>(</span><span>0</span><span>,</span> x <span>+</span> <span>1</span><span>)</span><span>;</span>
  x <span>>=</span> <span>0</span> <span>?</span> <span>(</span>digits<span>[</span>x<span>]</span> <span>=</span> num <span>+</span> <span>1</span><span>)</span> <span>:</span> digits<span>.</span><span>unshift</span><span>(</span><span>1</span><span>)</span><span>;</span>
  <span>return</span> digits<span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div>]]></content>
    <author>
      <name>66. Plus One</name>
    </author>
    <category term="TypeScript"/>
    <contributor>
      <name>66. Plus One</name>
    </contributor>
    <rights>Copyright by 66. Plus One</rights>
  </entry>
  <entry>
    <title type="html">66. Plus One</title>
    <id>https://leetcode.innenu.com/66-plus-one/</id>
    <link href="https://leetcode.innenu.com/66-plus-one/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_66-plus-one"> <a href="https://leetcode.com/problems/plus-one/" target="_blank" rel="noopener noreferrer">66. Plus One</a></h1>
<p>Given a <strong>non-empty</strong> array of decimal digits representing a non-negative integer, increment one to the integer.</p>
<p>The digits are stored such that the most significant digit is at the head of the list, and each element in the array contains a single digit.</p>
<p>You may assume the integer does not contain any leading zero, except the number 0 itself.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> digits = [1,2,3]</p>
<p><strong>Output:</strong> [1,2,4]</p>
<p><strong>Explanation:</strong> The array represents the integer 123.</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> digits = [4,3,2,1]</p>
<p><strong>Output:</strong> [4,3,2,2]</p>
<p><strong>Explanation:</strong> The array represents the integer 4321.</p>
<p><strong>Example 3:</strong></p>
<p><strong>Input:</strong> digits = [0]</p>
<p><strong>Output:</strong> [1]</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>1 &lt;= digits.length &lt;= 100</code></li>
<li><code>0 &lt;= digits[i] &lt;= 9</code></li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">sqm</title>
    <id>https://leetcode.innenu.com/66-plus-one/sqm/</id>
    <link href="https://leetcode.innenu.com/66-plus-one/sqm/"/>
    <updated>2021-02-17T16:18:42.677Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  vector<span>&lt;</span><span>int</span><span>></span> <span>plusOne</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> digits<span>)</span> <span>{</span>
    digits<span>[</span>digits<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>]</span> <span>+=</span> <span>1</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> digits<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>;</span> i <span>></span> <span>0</span><span>;</span> i<span>--</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>digits<span>[</span>i<span>]</span> <span>==</span> <span>10</span><span>)</span> <span>{</span>
        digits<span>[</span>i <span>-</span> <span>1</span><span>]</span><span>++</span><span>;</span>
        digits<span>[</span>i<span>]</span> <span>=</span> <span>0</span><span>;</span>
      <span>}</span>
    <span>}</span>
    <span>if</span> <span>(</span>digits<span>[</span><span>0</span><span>]</span> <span>==</span> <span>10</span><span>)</span> <span>{</span>
      digits<span>[</span><span>0</span><span>]</span> <span>=</span> <span>0</span><span>;</span>
      digits<span>.</span><span>insert</span><span>(</span>digits<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> <span>1</span><span>)</span><span>;</span>
    <span>}</span>
    <span>return</span> digits<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br></div></div>]]></content>
    <author>
      <name>66. Plus One</name>
    </author>
    <category term="sqm"/>
    <contributor>
      <name>66. Plus One</name>
    </contributor>
    <rights>Copyright by 66. Plus One</rights>
  </entry>
  <entry>
    <title type="html">JavaScript</title>
    <id>https://leetcode.innenu.com/67-add-binary/JavaScript/</id>
    <link href="https://leetcode.innenu.com/67-add-binary/JavaScript/"/>
    <updated>2021-02-17T16:18:42.677Z</updated>
    <content type="html"><![CDATA[<h2 id="mister-hope"> Mister-Hope</h2>
<div><pre><code><span>/*
 * Runtime: 84 ms, faster than 82.80% of JavaScript online submissions for Add Binary.
 *
 * Memory Usage: 38.8 MB, less than 6.01% of JavaScript online submissions for Add Binary.
 */</span>

<span>const</span> <span>addBinary</span> <span>=</span> <span>(</span><span>a<span>,</span> b</span><span>)</span> <span>=></span> <span>(</span><span>BigInt</span><span>(</span><span>"0b"</span> <span>+</span> a<span>)</span> <span>+</span> <span>BigInt</span><span>(</span><span>"0b"</span> <span>+</span> b<span>)</span><span>)</span><span>.</span><span>toString</span><span>(</span><span>2</span><span>)</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div>]]></content>
    <author>
      <name>67. Add Binary</name>
    </author>
    <category term="JavaScript"/>
    <contributor>
      <name>67. Add Binary</name>
    </contributor>
    <rights>Copyright by 67. Add Binary</rights>
  </entry>
  <entry>
    <title type="html">Mister-Hope</title>
    <id>https://leetcode.innenu.com/67-add-binary/Mister-Hope/</id>
    <link href="https://leetcode.innenu.com/67-add-binary/Mister-Hope/"/>
    <updated>2021-02-17T16:18:42.678Z</updated>
    <content type="html"><![CDATA[<h2 id="javascript"> JavaScript</h2>
<div><pre><code><span>/*
 * Runtime: 84 ms, faster than 82.80% of JavaScript online submissions for Add Binary.
 *
 * Memory Usage: 38.8 MB, less than 6.01% of JavaScript online submissions for Add Binary.
 */</span>

<span>const</span> <span>addBinary</span> <span>=</span> <span>(</span><span>a<span>,</span> b</span><span>)</span> <span>=></span> <span>(</span><span>BigInt</span><span>(</span><span>"0b"</span> <span>+</span> a<span>)</span> <span>+</span> <span>BigInt</span><span>(</span><span>"0b"</span> <span>+</span> b<span>)</span><span>)</span><span>.</span><span>toString</span><span>(</span><span>2</span><span>)</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h2 id="typescript"> TypeScript</h2>
<div><pre><code><span>/**
 * Runtime: 84 ms, faster than 100.00% of TypeScript online submissions for Add Binary.
 *
 * Memory Usage: 40.3 MB, less than 6.78% of TypeScript online submissions for Add Binary.
 */</span>

<span>const</span> addBinary <span>=</span> <span>(</span>a<span>:</span> <span>string</span><span>,</span> b<span>:</span> <span>string</span><span>)</span><span>:</span> <span>string</span> <span>=></span>
  <span>(</span><span>BigInt</span><span>(</span><span>"0b"</span> <span>+</span> a<span>)</span> <span>+</span> <span>BigInt</span><span>(</span><span>"0b"</span> <span>+</span> b<span>)</span><span>)</span><span>.</span><span>toString</span><span>(</span><span>2</span><span>)</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div>]]></content>
    <author>
      <name>67. Add Binary</name>
    </author>
    <category term="Mister-Hope"/>
    <contributor>
      <name>67. Add Binary</name>
    </contributor>
    <rights>Copyright by 67. Add Binary</rights>
  </entry>
  <entry>
    <title type="html">TypeScript</title>
    <id>https://leetcode.innenu.com/67-add-binary/TypeScript/</id>
    <link href="https://leetcode.innenu.com/67-add-binary/TypeScript/"/>
    <updated>2021-02-17T16:18:42.678Z</updated>
    <content type="html"><![CDATA[<h2 id="mister-hope"> Mister-Hope</h2>
<div><pre><code><span>/**
 * Runtime: 84 ms, faster than 100.00% of TypeScript online submissions for Add Binary.
 *
 * Memory Usage: 40.3 MB, less than 6.78% of TypeScript online submissions for Add Binary.
 */</span>

<span>const</span> addBinary <span>=</span> <span>(</span>a<span>:</span> <span>string</span><span>,</span> b<span>:</span> <span>string</span><span>)</span><span>:</span> <span>string</span> <span>=></span>
  <span>(</span><span>BigInt</span><span>(</span><span>"0b"</span> <span>+</span> a<span>)</span> <span>+</span> <span>BigInt</span><span>(</span><span>"0b"</span> <span>+</span> b<span>)</span><span>)</span><span>.</span><span>toString</span><span>(</span><span>2</span><span>)</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div>]]></content>
    <author>
      <name>67. Add Binary</name>
    </author>
    <category term="TypeScript"/>
    <contributor>
      <name>67. Add Binary</name>
    </contributor>
    <rights>Copyright by 67. Add Binary</rights>
  </entry>
  <entry>
    <title type="html">67. Add Binary</title>
    <id>https://leetcode.innenu.com/67-add-binary/</id>
    <link href="https://leetcode.innenu.com/67-add-binary/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_67-add-binary"> <a href="https://leetcode.com/problems/add-binary/" target="_blank" rel="noopener noreferrer">67. Add Binary</a></h1>
<p>Given two binary strings, return their sum (also a binary string).</p>
<p>The input strings are both <strong>non-empty</strong> and contains only characters <code>1</code> or <code>0</code>.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> a = &quot;11&quot;, b = &quot;1&quot;</p>
<p><strong>Output:</strong> &quot;100&quot;</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> a = &quot;1010&quot;, b = &quot;1011&quot;</p>
<p><strong>Output:</strong> &quot;10101&quot;</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li>Each string consists only of <code>'0'</code> or <code>'1'</code> characters.</li>
<li><code>1 &lt;= a.length, b.length &lt;= 10^4</code></li>
<li>Each string is either <code>&quot;0&quot;</code> or doesn't contain any leading zero.</li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">C++</title>
    <id>https://leetcode.innenu.com/7-reverse-integer/C++/</id>
    <link href="https://leetcode.innenu.com/7-reverse-integer/C++/"/>
    <updated>2021-02-17T16:18:42.680Z</updated>
    <content type="html"><![CDATA[<h2 id="virgil"> Virgil</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>
<span><span>#</span><span>include</span> <span>&lt;cmath></span></span>
<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>

<span>using</span> <span>namespace</span> std<span>;</span>
<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>int</span> <span>reverse</span><span>(</span><span>int</span> x<span>)</span> <span>{</span>
    <span>int</span> num<span>[</span><span>33</span><span>]</span> <span>=</span> <span>{</span><span>0</span><span>}</span><span>;</span>
    <span>int</span> flag <span>=</span> <span>1</span><span>,</span> i <span>=</span> <span>0</span><span>,</span> m <span>=</span> <span>0</span><span>;</span>
    <span>long</span> <span>long</span> result <span>=</span> <span>0</span><span>;</span>
    <span>if</span> <span>(</span>x <span>&lt;</span> <span>0</span><span>)</span> <span>{</span>
      flag <span>=</span> <span>-</span><span>1</span><span>;</span>
      x <span>=</span> <span>abs</span><span>(</span>x<span>)</span><span>;</span>
    <span>}</span>
    <span>while</span> <span>(</span>x <span>></span> <span>0</span><span>)</span> <span>{</span>
      num<span>[</span>i<span>]</span> <span>=</span> x <span>%</span> <span>10</span><span>;</span>
      x <span>/=</span> <span>10</span><span>;</span>
      i<span>++</span><span>;</span>
      m<span>++</span><span>;</span>
    <span>}</span>
    <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>0</span><span>;</span> j <span>&lt;</span> i<span>;</span> j<span>++</span><span>,</span> m<span>--</span><span>)</span> result <span>+=</span> num<span>[</span>j<span>]</span> <span>*</span> <span>pow</span><span>(</span><span>10</span><span>,</span> m <span>-</span> <span>1</span><span>)</span><span>;</span>
    <span>if</span> <span>(</span>result <span>*</span> flag <span>></span> <span>2147483647</span> <span>||</span> result <span>*</span> flag <span>&lt;</span> <span>-</span><span>2147483648</span><span>)</span>
      <span>return</span> <span>0</span><span>;</span>
    <span>else</span>
      <span>return</span> result <span>*</span> flag<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br></div></div><h2 id="lmy"> lmy</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>int</span> <span>reverse</span><span>(</span><span>int</span> x<span>)</span> <span>{</span>
    <span>int</span> tmp <span>=</span> x<span>;</span>
    <span>int</span> res <span>=</span> <span>0</span><span>;</span>
    <span>while</span> <span>(</span>tmp<span>)</span> <span>{</span>
      <span>int</span> pop <span>=</span> tmp <span>%</span> <span>10</span><span>;</span>
      tmp <span>/=</span> <span>10</span><span>;</span>
      <span>if</span> <span>(</span>res <span>></span> <span>2147483647</span> <span>/</span> <span>10</span> <span>||</span> <span>(</span>res <span>==</span> <span>2147483647</span> <span>&amp;&amp;</span> pop <span>></span> <span>7</span><span>)</span><span>)</span> <span>return</span> <span>0</span><span>;</span>
      <span>if</span> <span>(</span>res <span>&lt;</span> <span>-</span><span>2147483647</span> <span>/</span> <span>10</span> <span>||</span> <span>(</span>res <span>==</span> <span>-</span><span>2147483647</span> <span>&amp;&amp;</span> pop <span>&lt;</span> <span>-</span><span>8</span><span>)</span><span>)</span> <span>return</span> <span>0</span><span>;</span>
      res <span>=</span> res <span>*</span> <span>10</span> <span>+</span> pop<span>;</span>
    <span>}</span>
    <span>return</span> res<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div><h2 id="sqm"> sqm</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;cmath></span></span>
<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>int</span> <span>reverse</span><span>(</span><span>int</span> x<span>)</span> <span>{</span>
    <span>long</span> sum <span>=</span> <span>0</span><span>;</span>
    vector<span>&lt;</span><span>int</span><span>></span> p<span>;</span>
    <span>while</span> <span>(</span><span>abs</span><span>(</span>x<span>)</span> <span>>=</span> <span>1</span><span>)</span> <span>{</span>
      p<span>.</span><span>push_back</span><span>(</span>x <span>%</span> <span>10</span><span>)</span><span>;</span>
      x <span>=</span> x <span>/</span> <span>10</span><span>;</span>
    <span>}</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> p<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      sum <span>=</span> sum <span>+</span> <span>(</span>p<span>[</span>p<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> i <span>-</span> <span>1</span><span>]</span> <span>*</span> <span>pow</span><span>(</span><span>10</span><span>,</span> i<span>)</span><span>)</span><span>;</span>
      <span>if</span> <span>(</span>sum <span>></span> <span>(</span><span>pow</span><span>(</span><span>2</span><span>,</span> <span>31</span><span>)</span> <span>-</span> <span>1</span><span>)</span> <span>||</span> sum <span>&lt;</span> <span>-</span><span>pow</span><span>(</span><span>2</span><span>,</span> <span>31</span><span>)</span><span>)</span> <span>return</span> <span>0</span><span>;</span>
    <span>}</span>
    <span>return</span> sum<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br></div></div>]]></content>
    <author>
      <name>7. Reverse Integer</name>
    </author>
    <category term="C++"/>
    <contributor>
      <name>7. Reverse Integer</name>
    </contributor>
    <rights>Copyright by 7. Reverse Integer</rights>
  </entry>
  <entry>
    <title type="html">Java</title>
    <id>https://leetcode.innenu.com/7-reverse-integer/Java/</id>
    <link href="https://leetcode.innenu.com/7-reverse-integer/Java/"/>
    <updated>2021-02-17T16:18:42.680Z</updated>
    <content type="html"><![CDATA[<h2 id="lizncu"> lizncu</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span> <span>reverse</span><span>(</span><span>int</span> x<span>)</span> <span>{</span>
    <span>long</span> n <span>=</span> <span>0</span><span>;</span>

    <span>if</span> <span>(</span>x <span>&lt;</span> <span>0</span><span>)</span> <span>{</span>
      x <span>=</span> <span>-</span>x<span>;</span>
      <span>while</span> <span>(</span>x <span>!=</span> <span>0</span><span>)</span> <span>{</span>
        n <span>=</span> x <span>%</span> <span>10</span> <span>+</span> n <span>*</span> <span>10</span><span>;</span>
        x <span>=</span> x <span>/</span> <span>10</span><span>;</span>
      <span>}</span>
      n <span>=</span> <span>-</span>n<span>;</span>
    <span>}</span> <span>else</span> <span>if</span> <span>(</span>x <span>></span> <span>0</span><span>)</span> <span>{</span>
      <span>while</span> <span>(</span>x <span>!=</span> <span>0</span><span>)</span> <span>{</span>
        n <span>=</span> x <span>%</span> <span>10</span> <span>+</span> n <span>*</span> <span>10</span><span>;</span>
        x <span>=</span> x <span>/</span> <span>10</span><span>;</span>
      <span>}</span>
    <span>}</span> <span>else</span> <span>{</span>
      n <span>=</span> x<span>;</span>
    <span>}</span>
    <span>if</span> <span>(</span>n <span>></span> <span>Integer</span><span>.</span>MAX_VALUE <span>||</span> n <span>&lt;</span> <span>Integer</span><span>.</span>MIN_VALUE<span>)</span> <span>{</span>
      <span>return</span> <span>0</span><span>;</span>
    <span>}</span> <span>else</span> <span>{</span>
      <span>return</span> <span>(</span><span>int</span><span>)</span> n<span>;</span>
    <span>}</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br></div></div>]]></content>
    <author>
      <name>7. Reverse Integer</name>
    </author>
    <category term="Java"/>
    <contributor>
      <name>7. Reverse Integer</name>
    </contributor>
    <rights>Copyright by 7. Reverse Integer</rights>
  </entry>
  <entry>
    <title type="html">JavaScript</title>
    <id>https://leetcode.innenu.com/7-reverse-integer/JavaScript/</id>
    <link href="https://leetcode.innenu.com/7-reverse-integer/JavaScript/"/>
    <updated>2021-02-17T16:18:42.681Z</updated>
    <content type="html"><![CDATA[<h2 id="mister-hope"> Mister-Hope</h2>
<div><pre><code><span>/**
 * Runtime: 84 ms, faster than 97.73% of JavaScript online submissions for Reverse Integer.
 *
 * Memory Usage: 40.4 MB, less than 19.67% of JavaScript online submissions for Reverse Integer.
 */</span>

<span>const</span> <span>reverse</span> <span>=</span> <span>(</span><span>x</span><span>)</span> <span>=></span> <span>{</span>
  <span>if</span> <span>(</span>x <span>></span> <span>-</span><span>2147483648</span> <span>&amp;&amp;</span> x <span>&lt;</span> <span>2147483648</span><span>)</span> <span>{</span>
    <span>let</span> y <span>=</span>
      x <span>></span> <span>0</span>
        <span>?</span> <span>Number</span><span>(</span><span>String</span><span>(</span>x<span>)</span><span>.</span><span>split</span><span>(</span><span>""</span><span>)</span><span>.</span><span>reverse</span><span>(</span><span>)</span><span>.</span><span>join</span><span>(</span><span>""</span><span>)</span><span>)</span>
        <span>:</span> <span>0</span> <span>-</span>
          <span>Number</span><span>(</span>
            <span>String</span><span>(</span><span>0</span> <span>-</span> x<span>)</span>
              <span>.</span><span>split</span><span>(</span><span>""</span><span>)</span>
              <span>.</span><span>reverse</span><span>(</span><span>)</span>
              <span>.</span><span>join</span><span>(</span><span>""</span><span>)</span>
          <span>)</span><span>;</span>
    <span>return</span> y <span>></span> <span>-</span><span>2147483648</span> <span>&amp;&amp;</span> y <span>&lt;</span> <span>2147483648</span> <span>?</span> y <span>:</span> <span>0</span><span>;</span>
  <span>}</span>
  <span>return</span> <span>0</span><span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br></div></div><h3 id="_1"> 1</h3>
<div><pre><code><span>/*
 * Runtime: 112 ms, faster than 13.44% of JavaScript online submissions for Reverse Integer.
 *
 * Memory Usage: 40.1 MB, less than 19.67% of JavaScript online submissions for Reverse Integer.
 */</span>

<span>const</span> <span>reverse</span> <span>=</span> <span>(</span><span>x</span><span>)</span> <span>=></span> <span>{</span>
  <span>const</span> result <span>=</span>
    <span>parseFloat</span><span>(</span>x<span>.</span><span>toString</span><span>(</span><span>)</span><span>.</span><span>split</span><span>(</span><span>""</span><span>)</span><span>.</span><span>reverse</span><span>(</span><span>)</span><span>.</span><span>join</span><span>(</span><span>""</span><span>)</span><span>)</span> <span>*</span> Math<span>.</span><span>sign</span><span>(</span>x<span>)</span><span>;</span>

  <span>if</span> <span>(</span>result <span>&lt;</span> Math<span>.</span><span>pow</span><span>(</span><span>-</span><span>2</span><span>,</span> <span>31</span><span>)</span> <span>||</span> result <span>></span> Math<span>.</span><span>pow</span><span>(</span><span>2</span><span>,</span> <span>31</span><span>)</span><span>)</span> <span>return</span> <span>0</span><span>;</span>

  <span>return</span> result<span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div>]]></content>
    <author>
      <name>7. Reverse Integer</name>
    </author>
    <category term="JavaScript"/>
    <contributor>
      <name>7. Reverse Integer</name>
    </contributor>
    <rights>Copyright by 7. Reverse Integer</rights>
  </entry>
  <entry>
    <title type="html">Mister-Hope</title>
    <id>https://leetcode.innenu.com/7-reverse-integer/Mister-Hope/</id>
    <link href="https://leetcode.innenu.com/7-reverse-integer/Mister-Hope/"/>
    <updated>2021-02-17T16:18:42.682Z</updated>
    <content type="html"><![CDATA[<h2 id="javascript"> JavaScript</h2>
<div><pre><code><span>/**
 * Runtime: 84 ms, faster than 97.73% of JavaScript online submissions for Reverse Integer.
 *
 * Memory Usage: 40.4 MB, less than 19.67% of JavaScript online submissions for Reverse Integer.
 */</span>

<span>const</span> <span>reverse</span> <span>=</span> <span>(</span><span>x</span><span>)</span> <span>=></span> <span>{</span>
  <span>if</span> <span>(</span>x <span>></span> <span>-</span><span>2147483648</span> <span>&amp;&amp;</span> x <span>&lt;</span> <span>2147483648</span><span>)</span> <span>{</span>
    <span>let</span> y <span>=</span>
      x <span>></span> <span>0</span>
        <span>?</span> <span>Number</span><span>(</span><span>String</span><span>(</span>x<span>)</span><span>.</span><span>split</span><span>(</span><span>""</span><span>)</span><span>.</span><span>reverse</span><span>(</span><span>)</span><span>.</span><span>join</span><span>(</span><span>""</span><span>)</span><span>)</span>
        <span>:</span> <span>0</span> <span>-</span>
          <span>Number</span><span>(</span>
            <span>String</span><span>(</span><span>0</span> <span>-</span> x<span>)</span>
              <span>.</span><span>split</span><span>(</span><span>""</span><span>)</span>
              <span>.</span><span>reverse</span><span>(</span><span>)</span>
              <span>.</span><span>join</span><span>(</span><span>""</span><span>)</span>
          <span>)</span><span>;</span>
    <span>return</span> y <span>></span> <span>-</span><span>2147483648</span> <span>&amp;&amp;</span> y <span>&lt;</span> <span>2147483648</span> <span>?</span> y <span>:</span> <span>0</span><span>;</span>
  <span>}</span>
  <span>return</span> <span>0</span><span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br></div></div><h3 id="_1"> 1</h3>
<div><pre><code><span>/*
 * Runtime: 112 ms, faster than 13.44% of JavaScript online submissions for Reverse Integer.
 *
 * Memory Usage: 40.1 MB, less than 19.67% of JavaScript online submissions for Reverse Integer.
 */</span>

<span>const</span> <span>reverse</span> <span>=</span> <span>(</span><span>x</span><span>)</span> <span>=></span> <span>{</span>
  <span>const</span> result <span>=</span>
    <span>parseFloat</span><span>(</span>x<span>.</span><span>toString</span><span>(</span><span>)</span><span>.</span><span>split</span><span>(</span><span>""</span><span>)</span><span>.</span><span>reverse</span><span>(</span><span>)</span><span>.</span><span>join</span><span>(</span><span>""</span><span>)</span><span>)</span> <span>*</span> Math<span>.</span><span>sign</span><span>(</span>x<span>)</span><span>;</span>

  <span>if</span> <span>(</span>result <span>&lt;</span> Math<span>.</span><span>pow</span><span>(</span><span>-</span><span>2</span><span>,</span> <span>31</span><span>)</span> <span>||</span> result <span>></span> Math<span>.</span><span>pow</span><span>(</span><span>2</span><span>,</span> <span>31</span><span>)</span><span>)</span> <span>return</span> <span>0</span><span>;</span>

  <span>return</span> result<span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div><h2 id="typescript"> TypeScript</h2>
<div><pre><code><span>/*
 * Runtime: 88 ms, faster than 98.12% of TypeScript online submissions for Reverse Integer.
 *
 * Memory Usage: 40.3 MB, less than 34.59% of TypeScript online submissions for Reverse Integer.
 */</span>

<span>const</span> reverse <span>=</span> <span>(</span>x<span>:</span> <span>number</span><span>)</span><span>:</span> <span>number</span> <span>=></span> <span>{</span>
  <span>const</span> result <span>=</span>
    <span>parseFloat</span><span>(</span>x<span>.</span><span>toString</span><span>(</span><span>)</span><span>.</span><span>split</span><span>(</span><span>""</span><span>)</span><span>.</span><span>reverse</span><span>(</span><span>)</span><span>.</span><span>join</span><span>(</span><span>""</span><span>)</span><span>)</span> <span>*</span> Math<span>.</span><span>sign</span><span>(</span>x<span>)</span><span>;</span>

  <span>if</span> <span>(</span>result <span>&lt;</span> Math<span>.</span><span>pow</span><span>(</span><span>-</span><span>2</span><span>,</span> <span>31</span><span>)</span> <span>||</span> result <span>></span> Math<span>.</span><span>pow</span><span>(</span><span>2</span><span>,</span> <span>31</span><span>)</span><span>)</span> <span>return</span> <span>0</span><span>;</span>

  <span>return</span> result<span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div>]]></content>
    <author>
      <name>7. Reverse Integer</name>
    </author>
    <category term="Mister-Hope"/>
    <contributor>
      <name>7. Reverse Integer</name>
    </contributor>
    <rights>Copyright by 7. Reverse Integer</rights>
  </entry>
  <entry>
    <title type="html">TypeScript</title>
    <id>https://leetcode.innenu.com/7-reverse-integer/TypeScript/</id>
    <link href="https://leetcode.innenu.com/7-reverse-integer/TypeScript/"/>
    <updated>2021-02-17T16:18:42.682Z</updated>
    <content type="html"><![CDATA[<h2 id="mister-hope"> Mister-Hope</h2>
<div><pre><code><span>/*
 * Runtime: 88 ms, faster than 98.12% of TypeScript online submissions for Reverse Integer.
 *
 * Memory Usage: 40.3 MB, less than 34.59% of TypeScript online submissions for Reverse Integer.
 */</span>

<span>const</span> reverse <span>=</span> <span>(</span>x<span>:</span> <span>number</span><span>)</span><span>:</span> <span>number</span> <span>=></span> <span>{</span>
  <span>const</span> result <span>=</span>
    <span>parseFloat</span><span>(</span>x<span>.</span><span>toString</span><span>(</span><span>)</span><span>.</span><span>split</span><span>(</span><span>""</span><span>)</span><span>.</span><span>reverse</span><span>(</span><span>)</span><span>.</span><span>join</span><span>(</span><span>""</span><span>)</span><span>)</span> <span>*</span> Math<span>.</span><span>sign</span><span>(</span>x<span>)</span><span>;</span>

  <span>if</span> <span>(</span>result <span>&lt;</span> Math<span>.</span><span>pow</span><span>(</span><span>-</span><span>2</span><span>,</span> <span>31</span><span>)</span> <span>||</span> result <span>></span> Math<span>.</span><span>pow</span><span>(</span><span>2</span><span>,</span> <span>31</span><span>)</span><span>)</span> <span>return</span> <span>0</span><span>;</span>

  <span>return</span> result<span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div>]]></content>
    <author>
      <name>7. Reverse Integer</name>
    </author>
    <category term="TypeScript"/>
    <contributor>
      <name>7. Reverse Integer</name>
    </contributor>
    <rights>Copyright by 7. Reverse Integer</rights>
  </entry>
  <entry>
    <title type="html">Virgil</title>
    <id>https://leetcode.innenu.com/7-reverse-integer/Virgil/</id>
    <link href="https://leetcode.innenu.com/7-reverse-integer/Virgil/"/>
    <updated>2021-02-17T16:18:42.682Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>
<span><span>#</span><span>include</span> <span>&lt;cmath></span></span>
<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>

<span>using</span> <span>namespace</span> std<span>;</span>
<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>int</span> <span>reverse</span><span>(</span><span>int</span> x<span>)</span> <span>{</span>
    <span>int</span> num<span>[</span><span>33</span><span>]</span> <span>=</span> <span>{</span><span>0</span><span>}</span><span>;</span>
    <span>int</span> flag <span>=</span> <span>1</span><span>,</span> i <span>=</span> <span>0</span><span>,</span> m <span>=</span> <span>0</span><span>;</span>
    <span>long</span> <span>long</span> result <span>=</span> <span>0</span><span>;</span>
    <span>if</span> <span>(</span>x <span>&lt;</span> <span>0</span><span>)</span> <span>{</span>
      flag <span>=</span> <span>-</span><span>1</span><span>;</span>
      x <span>=</span> <span>abs</span><span>(</span>x<span>)</span><span>;</span>
    <span>}</span>
    <span>while</span> <span>(</span>x <span>></span> <span>0</span><span>)</span> <span>{</span>
      num<span>[</span>i<span>]</span> <span>=</span> x <span>%</span> <span>10</span><span>;</span>
      x <span>/=</span> <span>10</span><span>;</span>
      i<span>++</span><span>;</span>
      m<span>++</span><span>;</span>
    <span>}</span>
    <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>0</span><span>;</span> j <span>&lt;</span> i<span>;</span> j<span>++</span><span>,</span> m<span>--</span><span>)</span> result <span>+=</span> num<span>[</span>j<span>]</span> <span>*</span> <span>pow</span><span>(</span><span>10</span><span>,</span> m <span>-</span> <span>1</span><span>)</span><span>;</span>
    <span>if</span> <span>(</span>result <span>*</span> flag <span>></span> <span>2147483647</span> <span>||</span> result <span>*</span> flag <span>&lt;</span> <span>-</span><span>2147483648</span><span>)</span>
      <span>return</span> <span>0</span><span>;</span>
    <span>else</span>
      <span>return</span> result <span>*</span> flag<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br></div></div>]]></content>
    <author>
      <name>7. Reverse Integer</name>
    </author>
    <category term="Virgil"/>
    <contributor>
      <name>7. Reverse Integer</name>
    </contributor>
    <rights>Copyright by 7. Reverse Integer</rights>
  </entry>
  <entry>
    <title type="html">lizncu</title>
    <id>https://leetcode.innenu.com/7-reverse-integer/lizncu/</id>
    <link href="https://leetcode.innenu.com/7-reverse-integer/lizncu/"/>
    <updated>2021-02-17T16:18:42.683Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span> <span>reverse</span><span>(</span><span>int</span> x<span>)</span> <span>{</span>
    <span>long</span> n <span>=</span> <span>0</span><span>;</span>

    <span>if</span> <span>(</span>x <span>&lt;</span> <span>0</span><span>)</span> <span>{</span>
      x <span>=</span> <span>-</span>x<span>;</span>
      <span>while</span> <span>(</span>x <span>!=</span> <span>0</span><span>)</span> <span>{</span>
        n <span>=</span> x <span>%</span> <span>10</span> <span>+</span> n <span>*</span> <span>10</span><span>;</span>
        x <span>=</span> x <span>/</span> <span>10</span><span>;</span>
      <span>}</span>
      n <span>=</span> <span>-</span>n<span>;</span>
    <span>}</span> <span>else</span> <span>if</span> <span>(</span>x <span>></span> <span>0</span><span>)</span> <span>{</span>
      <span>while</span> <span>(</span>x <span>!=</span> <span>0</span><span>)</span> <span>{</span>
        n <span>=</span> x <span>%</span> <span>10</span> <span>+</span> n <span>*</span> <span>10</span><span>;</span>
        x <span>=</span> x <span>/</span> <span>10</span><span>;</span>
      <span>}</span>
    <span>}</span> <span>else</span> <span>{</span>
      n <span>=</span> x<span>;</span>
    <span>}</span>
    <span>if</span> <span>(</span>n <span>></span> <span>Integer</span><span>.</span>MAX_VALUE <span>||</span> n <span>&lt;</span> <span>Integer</span><span>.</span>MIN_VALUE<span>)</span> <span>{</span>
      <span>return</span> <span>0</span><span>;</span>
    <span>}</span> <span>else</span> <span>{</span>
      <span>return</span> <span>(</span><span>int</span><span>)</span> n<span>;</span>
    <span>}</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br></div></div>]]></content>
    <author>
      <name>7. Reverse Integer</name>
    </author>
    <category term="lizncu"/>
    <contributor>
      <name>7. Reverse Integer</name>
    </contributor>
    <rights>Copyright by 7. Reverse Integer</rights>
  </entry>
  <entry>
    <title type="html">lmy</title>
    <id>https://leetcode.innenu.com/7-reverse-integer/lmy/</id>
    <link href="https://leetcode.innenu.com/7-reverse-integer/lmy/"/>
    <updated>2021-02-17T16:18:42.683Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>int</span> <span>reverse</span><span>(</span><span>int</span> x<span>)</span> <span>{</span>
    <span>int</span> tmp <span>=</span> x<span>;</span>
    <span>int</span> res <span>=</span> <span>0</span><span>;</span>
    <span>while</span> <span>(</span>tmp<span>)</span> <span>{</span>
      <span>int</span> pop <span>=</span> tmp <span>%</span> <span>10</span><span>;</span>
      tmp <span>/=</span> <span>10</span><span>;</span>
      <span>if</span> <span>(</span>res <span>></span> <span>2147483647</span> <span>/</span> <span>10</span> <span>||</span> <span>(</span>res <span>==</span> <span>2147483647</span> <span>&amp;&amp;</span> pop <span>></span> <span>7</span><span>)</span><span>)</span> <span>return</span> <span>0</span><span>;</span>
      <span>if</span> <span>(</span>res <span>&lt;</span> <span>-</span><span>2147483647</span> <span>/</span> <span>10</span> <span>||</span> <span>(</span>res <span>==</span> <span>-</span><span>2147483647</span> <span>&amp;&amp;</span> pop <span>&lt;</span> <span>-</span><span>8</span><span>)</span><span>)</span> <span>return</span> <span>0</span><span>;</span>
      res <span>=</span> res <span>*</span> <span>10</span> <span>+</span> pop<span>;</span>
    <span>}</span>
    <span>return</span> res<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>]]></content>
    <author>
      <name>7. Reverse Integer</name>
    </author>
    <category term="lmy"/>
    <contributor>
      <name>7. Reverse Integer</name>
    </contributor>
    <rights>Copyright by 7. Reverse Integer</rights>
  </entry>
  <entry>
    <title type="html">7. Reverse Integer</title>
    <id>https://leetcode.innenu.com/7-reverse-integer/</id>
    <link href="https://leetcode.innenu.com/7-reverse-integer/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_7-reverse-integer"> <a href="https://leetcode.com/problems/reverse-integer/" target="_blank" rel="noopener noreferrer">7. Reverse Integer</a></h1>
<p>Given a 32-bit signed integer, reverse digits of an integer.</p>
<p><strong>Note:</strong>
Assume we are dealing with an environment that could only store integers within the 32-bit signed integer range: [−231, 231 − 1]. For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> x = 123</p>
<p><strong>Output:</strong> 321</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> x = -123</p>
<p><strong>Output:</strong> -321</p>
<p><strong>Example 3:</strong></p>
<p><strong>Input:</strong> x = 120</p>
<p><strong>Output:</strong> 21</p>
<p><strong>Example 4:</strong></p>
<p><strong>Input:</strong> x = 0</p>
<p><strong>Output:</strong> 0</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>-231 &lt;= x &lt;= 231 - 1</code></li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">sqm</title>
    <id>https://leetcode.innenu.com/7-reverse-integer/sqm/</id>
    <link href="https://leetcode.innenu.com/7-reverse-integer/sqm/"/>
    <updated>2021-02-17T16:18:42.684Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;cmath></span></span>
<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>int</span> <span>reverse</span><span>(</span><span>int</span> x<span>)</span> <span>{</span>
    <span>long</span> sum <span>=</span> <span>0</span><span>;</span>
    vector<span>&lt;</span><span>int</span><span>></span> p<span>;</span>
    <span>while</span> <span>(</span><span>abs</span><span>(</span>x<span>)</span> <span>>=</span> <span>1</span><span>)</span> <span>{</span>
      p<span>.</span><span>push_back</span><span>(</span>x <span>%</span> <span>10</span><span>)</span><span>;</span>
      x <span>=</span> x <span>/</span> <span>10</span><span>;</span>
    <span>}</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> p<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      sum <span>=</span> sum <span>+</span> <span>(</span>p<span>[</span>p<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> i <span>-</span> <span>1</span><span>]</span> <span>*</span> <span>pow</span><span>(</span><span>10</span><span>,</span> i<span>)</span><span>)</span><span>;</span>
      <span>if</span> <span>(</span>sum <span>></span> <span>(</span><span>pow</span><span>(</span><span>2</span><span>,</span> <span>31</span><span>)</span> <span>-</span> <span>1</span><span>)</span> <span>||</span> sum <span>&lt;</span> <span>-</span><span>pow</span><span>(</span><span>2</span><span>,</span> <span>31</span><span>)</span><span>)</span> <span>return</span> <span>0</span><span>;</span>
    <span>}</span>
    <span>return</span> sum<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br></div></div>]]></content>
    <author>
      <name>7. Reverse Integer</name>
    </author>
    <category term="sqm"/>
    <contributor>
      <name>7. Reverse Integer</name>
    </contributor>
    <rights>Copyright by 7. Reverse Integer</rights>
  </entry>
  <entry>
    <title type="html">C++</title>
    <id>https://leetcode.innenu.com/70-climbing-stairs/C++/</id>
    <link href="https://leetcode.innenu.com/70-climbing-stairs/C++/"/>
    <updated>2021-02-17T16:18:42.684Z</updated>
    <content type="html"><![CDATA[<h2 id="virgil"> Virgil</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>
<span><span>#</span><span>include</span> <span>&lt;cmath></span></span>
<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>int</span> <span>climbStairs</span><span>(</span><span>int</span> n<span>)</span> <span>{</span>
    <span>int</span> num1 <span>=</span> <span>1</span><span>,</span> num2 <span>=</span> <span>2</span><span>;</span>
    <span>if</span> <span>(</span>n <span>==</span> <span>1</span><span>)</span>
      <span>return</span> num1<span>;</span>
    <span>else</span> <span>if</span> <span>(</span>n <span>==</span> <span>2</span><span>)</span>
      <span>return</span> num2<span>;</span>
    <span>else</span> <span>{</span>
      <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>2</span><span>;</span> i <span>&lt;</span> n <span>-</span> <span>1</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
        num2 <span>+=</span> num1<span>;</span>
        num1 <span>=</span> num2 <span>-</span> num1<span>;</span>
      <span>}</span>
      <span>return</span> num1 <span>+</span> num2<span>;</span>
    <span>}</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br></div></div>]]></content>
    <author>
      <name>70. Climbing Stairs</name>
    </author>
    <category term="C++"/>
    <contributor>
      <name>70. Climbing Stairs</name>
    </contributor>
    <rights>Copyright by 70. Climbing Stairs</rights>
  </entry>
  <entry>
    <title type="html">Virgil</title>
    <id>https://leetcode.innenu.com/70-climbing-stairs/Virgil/</id>
    <link href="https://leetcode.innenu.com/70-climbing-stairs/Virgil/"/>
    <updated>2021-02-17T16:18:42.685Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>
<span><span>#</span><span>include</span> <span>&lt;cmath></span></span>
<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>int</span> <span>climbStairs</span><span>(</span><span>int</span> n<span>)</span> <span>{</span>
    <span>int</span> num1 <span>=</span> <span>1</span><span>,</span> num2 <span>=</span> <span>2</span><span>;</span>
    <span>if</span> <span>(</span>n <span>==</span> <span>1</span><span>)</span>
      <span>return</span> num1<span>;</span>
    <span>else</span> <span>if</span> <span>(</span>n <span>==</span> <span>2</span><span>)</span>
      <span>return</span> num2<span>;</span>
    <span>else</span> <span>{</span>
      <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>2</span><span>;</span> i <span>&lt;</span> n <span>-</span> <span>1</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
        num2 <span>+=</span> num1<span>;</span>
        num1 <span>=</span> num2 <span>-</span> num1<span>;</span>
      <span>}</span>
      <span>return</span> num1 <span>+</span> num2<span>;</span>
    <span>}</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br></div></div>]]></content>
    <author>
      <name>70. Climbing Stairs</name>
    </author>
    <category term="Virgil"/>
    <contributor>
      <name>70. Climbing Stairs</name>
    </contributor>
    <rights>Copyright by 70. Climbing Stairs</rights>
  </entry>
  <entry>
    <title type="html">70. Climbing Stairs</title>
    <id>https://leetcode.innenu.com/70-climbing-stairs/</id>
    <link href="https://leetcode.innenu.com/70-climbing-stairs/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_70-climbing-stairs"> <a href="https://leetcode.com/problems/climbing-stairs/" target="_blank" rel="noopener noreferrer">70. Climbing Stairs</a></h1>
<p>You are climbing a stair case. It takes <em>n</em> steps to reach to the top.</p>
<p>Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> 2</p>
<p><strong>Output:</strong> 2</p>
<p><strong>Explanation:</strong> There are two ways to climb to the top.</p>
<ol>
<li>1 step + 1 step</li>
<li>2 steps</li>
</ol>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> 3</p>
<p><strong>Output:</strong> 3</p>
<p><strong>Explanation:</strong> There are three ways to climb to the top.</p>
<ol>
<li>1 step + 1 step + 1 step</li>
<li>1 step + 2 steps</li>
<li>2 steps + 1 step</li>
</ol>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>1 &lt;= n &lt;= 45</code></li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">C++</title>
    <id>https://leetcode.innenu.com/771-Jewels-and-Stones/C++/</id>
    <link href="https://leetcode.innenu.com/771-Jewels-and-Stones/C++/"/>
    <updated>2021-02-17T16:18:42.686Z</updated>
    <content type="html"><![CDATA[<h2 id="sqm"> sqm</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>
<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>int</span> <span>numJewelsInStones</span><span>(</span>string J<span>,</span> string S<span>)</span> <span>{</span>
    <span>int</span> count <span>=</span> <span>0</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> J<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>0</span><span>;</span> j <span>&lt;</span> S<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> j<span>++</span><span>)</span> <span>{</span>
        <span>if</span> <span>(</span>S<span>[</span>j<span>]</span> <span>==</span> J<span>[</span>i<span>]</span><span>)</span> count<span>++</span><span>;</span>
      <span>}</span>
    <span>}</span>
    <span>return</span> count<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div>]]></content>
    <author>
      <name>771. Jewels And Stones</name>
    </author>
    <category term="C++"/>
    <contributor>
      <name>771. Jewels And Stones</name>
    </contributor>
    <rights>Copyright by 771. Jewels And Stones</rights>
  </entry>
  <entry>
    <title type="html">Java</title>
    <id>https://leetcode.innenu.com/771-Jewels-and-Stones/Java/</id>
    <link href="https://leetcode.innenu.com/771-Jewels-and-Stones/Java/"/>
    <updated>2021-02-17T16:18:42.686Z</updated>
    <content type="html"><![CDATA[<h2 id="lizncu"> lizncu</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span> <span>numJewelsInStones</span><span>(</span><span>String</span> <span>J</span><span>,</span> <span>String</span> <span>S</span><span>)</span> <span>{</span>
    <span>int</span> count <span>=</span> <span>0</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> <span>J</span><span>.</span><span>length</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>0</span><span>;</span> j <span>&lt;</span> <span>S</span><span>.</span><span>length</span><span>(</span><span>)</span><span>;</span> j<span>++</span><span>)</span> <span>{</span>
        <span>if</span> <span>(</span><span>S</span><span>.</span><span>charAt</span><span>(</span>j<span>)</span> <span>==</span> <span>J</span><span>.</span><span>charAt</span><span>(</span>i<span>)</span><span>)</span> <span>{</span>
          count<span>++</span><span>;</span>
        <span>}</span>
      <span>}</span>
    <span>}</span>

    <span>return</span> count<span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>]]></content>
    <author>
      <name>771. Jewels And Stones</name>
    </author>
    <category term="Java"/>
    <contributor>
      <name>771. Jewels And Stones</name>
    </contributor>
    <rights>Copyright by 771. Jewels And Stones</rights>
  </entry>
  <entry>
    <title type="html">lizncu</title>
    <id>https://leetcode.innenu.com/771-Jewels-and-Stones/lizncu/</id>
    <link href="https://leetcode.innenu.com/771-Jewels-and-Stones/lizncu/"/>
    <updated>2021-02-17T16:18:42.686Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span> <span>numJewelsInStones</span><span>(</span><span>String</span> <span>J</span><span>,</span> <span>String</span> <span>S</span><span>)</span> <span>{</span>
    <span>int</span> count <span>=</span> <span>0</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> <span>J</span><span>.</span><span>length</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>0</span><span>;</span> j <span>&lt;</span> <span>S</span><span>.</span><span>length</span><span>(</span><span>)</span><span>;</span> j<span>++</span><span>)</span> <span>{</span>
        <span>if</span> <span>(</span><span>S</span><span>.</span><span>charAt</span><span>(</span>j<span>)</span> <span>==</span> <span>J</span><span>.</span><span>charAt</span><span>(</span>i<span>)</span><span>)</span> <span>{</span>
          count<span>++</span><span>;</span>
        <span>}</span>
      <span>}</span>
    <span>}</span>

    <span>return</span> count<span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>]]></content>
    <author>
      <name>771. Jewels And Stones</name>
    </author>
    <category term="lizncu"/>
    <contributor>
      <name>771. Jewels And Stones</name>
    </contributor>
    <rights>Copyright by 771. Jewels And Stones</rights>
  </entry>
  <entry>
    <title type="html">771. Jewels and Stones</title>
    <id>https://leetcode.innenu.com/771-Jewels-and-Stones/</id>
    <link href="https://leetcode.innenu.com/771-Jewels-and-Stones/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_771-jewels-and-stones"> <a href="https://leetcode.com/problems/jewels-and-stones/" target="_blank" rel="noopener noreferrer">771. Jewels and Stones</a></h1>
<p>You're given strings <code>J</code> representing the types of stones that are jewels, and <code>S</code> representing the stones you have. Each character in <code>S</code> is a type of stone you have. You want to know how many of the stones you have are also jewels.</p>
<p>The letters in <code>J</code> are guaranteed distinct, and all characters in <code>J</code> and <code>S</code> are letters. Letters are case sensitive, so <code>&quot;a&quot;</code> is considered a different type of stone from <code>&quot;A&quot;</code>.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> J = &quot;aA&quot;, S = &quot;aAAbbbb&quot;</p>
<p><strong>Output:</strong> 3</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> J = &quot;z&quot;, S = &quot;ZZ&quot;</p>
<p><strong>Output:</strong> 0</p>
<p><strong>Note:</strong></p>
<ul>
<li><code>S</code> and <code>J</code> will consist of letters and have length at most 50.</li>
<li>The characters in <code>J</code> are distinct.</li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">sqm</title>
    <id>https://leetcode.innenu.com/771-Jewels-and-Stones/sqm/</id>
    <link href="https://leetcode.innenu.com/771-Jewels-and-Stones/sqm/"/>
    <updated>2021-02-17T16:18:42.687Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>
<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>int</span> <span>numJewelsInStones</span><span>(</span>string J<span>,</span> string S<span>)</span> <span>{</span>
    <span>int</span> count <span>=</span> <span>0</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> J<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>0</span><span>;</span> j <span>&lt;</span> S<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> j<span>++</span><span>)</span> <span>{</span>
        <span>if</span> <span>(</span>S<span>[</span>j<span>]</span> <span>==</span> J<span>[</span>i<span>]</span><span>)</span> count<span>++</span><span>;</span>
      <span>}</span>
    <span>}</span>
    <span>return</span> count<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div>]]></content>
    <author>
      <name>771. Jewels And Stones</name>
    </author>
    <category term="sqm"/>
    <contributor>
      <name>771. Jewels And Stones</name>
    </contributor>
    <rights>Copyright by 771. Jewels And Stones</rights>
  </entry>
  <entry>
    <title type="html">C++</title>
    <id>https://leetcode.innenu.com/860-Lemonade-Change/C++/</id>
    <link href="https://leetcode.innenu.com/860-Lemonade-Change/C++/"/>
    <updated>2021-02-17T16:18:42.687Z</updated>
    <content type="html"><![CDATA[<h2 id="lmy"> lmy</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>bool</span> <span>lemonadeChange</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> bills<span>)</span> <span>{</span>
    <span>int</span> a <span>=</span> <span>0</span><span>,</span> b <span>=</span> <span>0</span><span>,</span> c <span>=</span> <span>0</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;=</span> bills<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>bills<span>[</span>i<span>]</span> <span>==</span> <span>5</span><span>)</span> a<span>++</span><span>;</span>
      <span>if</span> <span>(</span>bills<span>[</span>i<span>]</span> <span>==</span> <span>10</span><span>)</span> a<span>--</span><span>;</span>
      b<span>++</span><span>;</span>
      <span>if</span> <span>(</span>bills<span>[</span>i<span>]</span> <span>==</span> <span>20</span><span>)</span> <span>{</span>
        <span>if</span> <span>(</span>a <span>></span> <span>0</span> <span>&amp;&amp;</span> b <span>></span> <span>0</span><span>)</span> <span>{</span>
          a<span>--</span><span>;</span>
          b<span>--</span><span>;</span>
          c<span>++</span><span>;</span>
        <span>}</span> <span>else</span>
          a <span>=</span> a <span>-</span> <span>3</span><span>;</span>
      <span>}</span>
      <span>if</span> <span>(</span>a <span>&lt;</span> <span>0</span> <span>||</span> b <span>&lt;</span> <span>0</span> <span>||</span> c <span>&lt;</span> <span>0</span><span>)</span> <span>{</span>
        <span>return</span> <span>false</span><span>;</span>
        <span>break</span><span>;</span>
      <span>}</span>
    <span>}</span>
    <span>return</span> <span>true</span><span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br></div></div>]]></content>
    <author>
      <name>860. Lemonade Change</name>
    </author>
    <category term="C++"/>
    <contributor>
      <name>860. Lemonade Change</name>
    </contributor>
    <rights>Copyright by 860. Lemonade Change</rights>
  </entry>
  <entry>
    <title type="html">Java</title>
    <id>https://leetcode.innenu.com/860-Lemonade-Change/Java/</id>
    <link href="https://leetcode.innenu.com/860-Lemonade-Change/Java/"/>
    <updated>2021-02-17T16:18:42.688Z</updated>
    <content type="html"><![CDATA[<h2 id="lizncu"> lizncu</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>boolean</span> <span>lemonadeChange</span><span>(</span><span>int</span><span>[</span><span>]</span> bills<span>)</span> <span>{</span>
    <span>int</span> five <span>=</span> <span>0</span><span>,</span> ten <span>=</span> <span>0</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> bills<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>bills<span>[</span>i<span>]</span> <span>==</span> <span>5</span><span>)</span> <span>{</span>
        five<span>++</span><span>;</span>
      <span>}</span> <span>else</span> <span>if</span> <span>(</span>bills<span>[</span>i<span>]</span> <span>==</span> <span>10</span><span>)</span> <span>{</span>
        five<span>--</span><span>;</span>
        ten<span>++</span><span>;</span>
      <span>}</span> <span>else</span> <span>if</span> <span>(</span>bills<span>[</span>i<span>]</span> <span>==</span> <span>20</span><span>)</span> <span>{</span>
        <span>if</span> <span>(</span>ten <span>==</span> <span>0</span><span>)</span> <span>{</span>
          five <span>-=</span> <span>3</span><span>;</span>
        <span>}</span> <span>else</span> <span>{</span>
          ten<span>--</span><span>;</span>
          five<span>--</span><span>;</span>
        <span>}</span>
      <span>}</span>

      <span>if</span> <span>(</span>ten <span>&lt;</span> <span>0</span> <span>||</span> five <span>&lt;</span> <span>0</span><span>)</span> <span>{</span>
        <span>return</span> <span>false</span><span>;</span>
      <span>}</span>
    <span>}</span>

    <span>return</span> <span>true</span><span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br></div></div>]]></content>
    <author>
      <name>860. Lemonade Change</name>
    </author>
    <category term="Java"/>
    <contributor>
      <name>860. Lemonade Change</name>
    </contributor>
    <rights>Copyright by 860. Lemonade Change</rights>
  </entry>
  <entry>
    <title type="html">lizncu</title>
    <id>https://leetcode.innenu.com/860-Lemonade-Change/lizncu/</id>
    <link href="https://leetcode.innenu.com/860-Lemonade-Change/lizncu/"/>
    <updated>2021-02-17T16:18:42.688Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>boolean</span> <span>lemonadeChange</span><span>(</span><span>int</span><span>[</span><span>]</span> bills<span>)</span> <span>{</span>
    <span>int</span> five <span>=</span> <span>0</span><span>,</span> ten <span>=</span> <span>0</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> bills<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>bills<span>[</span>i<span>]</span> <span>==</span> <span>5</span><span>)</span> <span>{</span>
        five<span>++</span><span>;</span>
      <span>}</span> <span>else</span> <span>if</span> <span>(</span>bills<span>[</span>i<span>]</span> <span>==</span> <span>10</span><span>)</span> <span>{</span>
        five<span>--</span><span>;</span>
        ten<span>++</span><span>;</span>
      <span>}</span> <span>else</span> <span>if</span> <span>(</span>bills<span>[</span>i<span>]</span> <span>==</span> <span>20</span><span>)</span> <span>{</span>
        <span>if</span> <span>(</span>ten <span>==</span> <span>0</span><span>)</span> <span>{</span>
          five <span>-=</span> <span>3</span><span>;</span>
        <span>}</span> <span>else</span> <span>{</span>
          ten<span>--</span><span>;</span>
          five<span>--</span><span>;</span>
        <span>}</span>
      <span>}</span>

      <span>if</span> <span>(</span>ten <span>&lt;</span> <span>0</span> <span>||</span> five <span>&lt;</span> <span>0</span><span>)</span> <span>{</span>
        <span>return</span> <span>false</span><span>;</span>
      <span>}</span>
    <span>}</span>

    <span>return</span> <span>true</span><span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br></div></div>]]></content>
    <author>
      <name>860. Lemonade Change</name>
    </author>
    <category term="lizncu"/>
    <contributor>
      <name>860. Lemonade Change</name>
    </contributor>
    <rights>Copyright by 860. Lemonade Change</rights>
  </entry>
  <entry>
    <title type="html">lmy</title>
    <id>https://leetcode.innenu.com/860-Lemonade-Change/lmy/</id>
    <link href="https://leetcode.innenu.com/860-Lemonade-Change/lmy/"/>
    <updated>2021-02-17T16:18:42.689Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>bool</span> <span>lemonadeChange</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> bills<span>)</span> <span>{</span>
    <span>int</span> a <span>=</span> <span>0</span><span>,</span> b <span>=</span> <span>0</span><span>,</span> c <span>=</span> <span>0</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;=</span> bills<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>bills<span>[</span>i<span>]</span> <span>==</span> <span>5</span><span>)</span> a<span>++</span><span>;</span>
      <span>if</span> <span>(</span>bills<span>[</span>i<span>]</span> <span>==</span> <span>10</span><span>)</span> a<span>--</span><span>;</span>
      b<span>++</span><span>;</span>
      <span>if</span> <span>(</span>bills<span>[</span>i<span>]</span> <span>==</span> <span>20</span><span>)</span> <span>{</span>
        <span>if</span> <span>(</span>a <span>></span> <span>0</span> <span>&amp;&amp;</span> b <span>></span> <span>0</span><span>)</span> <span>{</span>
          a<span>--</span><span>;</span>
          b<span>--</span><span>;</span>
          c<span>++</span><span>;</span>
        <span>}</span> <span>else</span>
          a <span>=</span> a <span>-</span> <span>3</span><span>;</span>
      <span>}</span>
      <span>if</span> <span>(</span>a <span>&lt;</span> <span>0</span> <span>||</span> b <span>&lt;</span> <span>0</span> <span>||</span> c <span>&lt;</span> <span>0</span><span>)</span> <span>{</span>
        <span>return</span> <span>false</span><span>;</span>
        <span>break</span><span>;</span>
      <span>}</span>
    <span>}</span>
    <span>return</span> <span>true</span><span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br></div></div>]]></content>
    <author>
      <name>860. Lemonade Change</name>
    </author>
    <category term="lmy"/>
    <contributor>
      <name>860. Lemonade Change</name>
    </contributor>
    <rights>Copyright by 860. Lemonade Change</rights>
  </entry>
  <entry>
    <title type="html">860. Lemonade Change</title>
    <id>https://leetcode.innenu.com/860-Lemonade-Change/</id>
    <link href="https://leetcode.innenu.com/860-Lemonade-Change/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_860-lemonade-change"> <a href="https://leetcode.com/problems/lemonade-change/" target="_blank" rel="noopener noreferrer">860. Lemonade Change</a></h1>
<p>At a lemonade stand, each lemonade costs <code>$5</code>.</p>
<p>Customers are standing in a queue to buy from you, and order one at a time (in the order specified by <code>bills</code>).</p>
<p>Each customer will only buy one lemonade and pay with either a <code>$5</code>, <code>$10</code>, or <code>$20</code> bill. You must provide the correct change to each customer, so that the net transaction is that the customer pays $5.</p>
<p>Note that you don't have any change in hand at first.</p>
<p>Return <code>true</code> if and only if you can provide every customer with correct change.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> [5,5,5,10,20]</p>
<p><strong>Output:</strong> true</p>
<p><strong>Explanation:</strong></p>
<p>From the first 3 customers, we collect three $5 bills in order.</p>
<p>From the fourth customer, we collect a $10 bill and give back a $5.</p>
<p>From the fifth customer, we give a $10 bill and a $5 bill.</p>
<p>Since all customers got correct change, we output true.</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> [5,5,10]</p>
<p><strong>Output:</strong> true</p>
<p><strong>Example 3:</strong></p>
<p><strong>Input:</strong> [10,10]</p>
<p><strong>Output:</strong> false</p>
<p><strong>Example 4:</strong></p>
<p><strong>Input:</strong> [5,5,10,10,20]</p>
<p><strong>Output:</strong> false</p>
<p><strong>Explanation:</strong></p>
<p>From the first two customers in order, we collect two $5 bills.</p>
<p>For the next two customers in order, we collect a $10 bill and give back a $5 bill.</p>
<p>For the last customer, we can't give change of $15 back because we only have two $10 bills.</p>
<p>Since not every customer received correct change, the answer is false.</p>
<p><strong>Note:</strong></p>
<ul>
<li><code>0 &lt;= bills.length &lt;= 10000</code></li>
<li><code>bills[i]</code> will be either <code>5</code>, <code>10</code>, or <code>20</code>.</li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">C++</title>
    <id>https://leetcode.innenu.com/867-Transpose-Matrix/C++/</id>
    <link href="https://leetcode.innenu.com/867-Transpose-Matrix/C++/"/>
    <updated>2021-02-17T16:18:42.690Z</updated>
    <content type="html"><![CDATA[<h2 id="lmy"> lmy</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  vector<span>&lt;</span>vector<span>&lt;</span><span>int</span><span>>></span> <span>transpose</span><span>(</span>vector<span>&lt;</span>vector<span>&lt;</span><span>int</span><span>>></span><span>&amp;</span> A<span>)</span> <span>{</span>
    vector<span>&lt;</span>vector<span>&lt;</span><span>int</span><span>>></span> <span>B</span><span>(</span>A<span>[</span><span>0</span><span>]</span><span>.</span><span>size</span><span>(</span><span>)</span><span>,</span> vector<span>&lt;</span><span>int</span><span>></span><span>(</span>A<span>.</span><span>size</span><span>(</span><span>)</span><span>,</span> <span>0</span><span>)</span><span>)</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> A<span>[</span><span>0</span><span>]</span><span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>0</span><span>;</span> j <span>&lt;</span> A<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> j<span>++</span><span>)</span> <span>{</span>
        B<span>[</span>i<span>]</span><span>[</span>j<span>]</span> <span>=</span> A<span>[</span>j<span>]</span><span>[</span>i<span>]</span><span>;</span>
      <span>}</span>
    <span>}</span>
    <span>return</span> B<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>]]></content>
    <author>
      <name>867. Transpose Matrix</name>
    </author>
    <category term="C++"/>
    <contributor>
      <name>867. Transpose Matrix</name>
    </contributor>
    <rights>Copyright by 867. Transpose Matrix</rights>
  </entry>
  <entry>
    <title type="html">Java</title>
    <id>https://leetcode.innenu.com/867-Transpose-Matrix/Java/</id>
    <link href="https://leetcode.innenu.com/867-Transpose-Matrix/Java/"/>
    <updated>2021-02-17T16:18:42.690Z</updated>
    <content type="html"><![CDATA[<h2 id="lizncu"> lizncu</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span><span>[</span><span>]</span><span>[</span><span>]</span> <span>transpose</span><span>(</span><span>int</span><span>[</span><span>]</span><span>[</span><span>]</span> <span>A</span><span>)</span> <span>{</span>
    <span>if</span> <span>(</span><span>A</span><span>.</span>length <span>==</span> <span>A</span><span>[</span><span>0</span><span>]</span><span>.</span>length<span>)</span> <span>{</span>
      <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>1</span><span>;</span> i <span>&lt;</span> <span>A</span><span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
        <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>0</span><span>;</span> j <span>&lt;</span> i<span>;</span> j<span>++</span><span>)</span> <span>{</span>
          <span>int</span> temp <span>=</span> <span>A</span><span>[</span>i<span>]</span><span>[</span>j<span>]</span><span>;</span>
          <span>A</span><span>[</span>i<span>]</span><span>[</span>j<span>]</span> <span>=</span> <span>A</span><span>[</span>j<span>]</span><span>[</span>i<span>]</span><span>;</span>
          <span>A</span><span>[</span>j<span>]</span><span>[</span>i<span>]</span> <span>=</span> temp<span>;</span>
        <span>}</span>
      <span>}</span>

      <span>return</span> <span>A</span><span>;</span>
    <span>}</span>

    <span>else</span> <span>{</span>
      <span>int</span><span>[</span><span>]</span><span>[</span><span>]</span> <span>B</span> <span>=</span> <span>new</span> <span>int</span><span>[</span><span>A</span><span>[</span><span>0</span><span>]</span><span>.</span>length<span>]</span><span>[</span><span>A</span><span>.</span>length<span>]</span><span>;</span>
      <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> <span>A</span><span>[</span><span>0</span><span>]</span><span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
        <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>0</span><span>;</span> j <span>&lt;</span> <span>A</span><span>.</span>length<span>;</span> j<span>++</span><span>)</span> <span>{</span>
          <span>B</span><span>[</span>i<span>]</span><span>[</span>j<span>]</span> <span>=</span> <span>A</span><span>[</span>j<span>]</span><span>[</span>i<span>]</span><span>;</span>
        <span>}</span>
      <span>}</span>
      <span>return</span> <span>B</span><span>;</span>
    <span>}</span>
  <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br></div></div>]]></content>
    <author>
      <name>867. Transpose Matrix</name>
    </author>
    <category term="Java"/>
    <contributor>
      <name>867. Transpose Matrix</name>
    </contributor>
    <rights>Copyright by 867. Transpose Matrix</rights>
  </entry>
  <entry>
    <title type="html">lizncu</title>
    <id>https://leetcode.innenu.com/867-Transpose-Matrix/lizncu/</id>
    <link href="https://leetcode.innenu.com/867-Transpose-Matrix/lizncu/"/>
    <updated>2021-02-17T16:18:42.691Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span><span>[</span><span>]</span><span>[</span><span>]</span> <span>transpose</span><span>(</span><span>int</span><span>[</span><span>]</span><span>[</span><span>]</span> <span>A</span><span>)</span> <span>{</span>
    <span>if</span> <span>(</span><span>A</span><span>.</span>length <span>==</span> <span>A</span><span>[</span><span>0</span><span>]</span><span>.</span>length<span>)</span> <span>{</span>
      <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>1</span><span>;</span> i <span>&lt;</span> <span>A</span><span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
        <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>0</span><span>;</span> j <span>&lt;</span> i<span>;</span> j<span>++</span><span>)</span> <span>{</span>
          <span>int</span> temp <span>=</span> <span>A</span><span>[</span>i<span>]</span><span>[</span>j<span>]</span><span>;</span>
          <span>A</span><span>[</span>i<span>]</span><span>[</span>j<span>]</span> <span>=</span> <span>A</span><span>[</span>j<span>]</span><span>[</span>i<span>]</span><span>;</span>
          <span>A</span><span>[</span>j<span>]</span><span>[</span>i<span>]</span> <span>=</span> temp<span>;</span>
        <span>}</span>
      <span>}</span>

      <span>return</span> <span>A</span><span>;</span>
    <span>}</span>

    <span>else</span> <span>{</span>
      <span>int</span><span>[</span><span>]</span><span>[</span><span>]</span> <span>B</span> <span>=</span> <span>new</span> <span>int</span><span>[</span><span>A</span><span>[</span><span>0</span><span>]</span><span>.</span>length<span>]</span><span>[</span><span>A</span><span>.</span>length<span>]</span><span>;</span>
      <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> <span>A</span><span>[</span><span>0</span><span>]</span><span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
        <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>0</span><span>;</span> j <span>&lt;</span> <span>A</span><span>.</span>length<span>;</span> j<span>++</span><span>)</span> <span>{</span>
          <span>B</span><span>[</span>i<span>]</span><span>[</span>j<span>]</span> <span>=</span> <span>A</span><span>[</span>j<span>]</span><span>[</span>i<span>]</span><span>;</span>
        <span>}</span>
      <span>}</span>
      <span>return</span> <span>B</span><span>;</span>
    <span>}</span>
  <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br></div></div>]]></content>
    <author>
      <name>867. Transpose Matrix</name>
    </author>
    <category term="lizncu"/>
    <contributor>
      <name>867. Transpose Matrix</name>
    </contributor>
    <rights>Copyright by 867. Transpose Matrix</rights>
  </entry>
  <entry>
    <title type="html">lmy</title>
    <id>https://leetcode.innenu.com/867-Transpose-Matrix/lmy/</id>
    <link href="https://leetcode.innenu.com/867-Transpose-Matrix/lmy/"/>
    <updated>2021-02-17T16:18:42.691Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  vector<span>&lt;</span>vector<span>&lt;</span><span>int</span><span>>></span> <span>transpose</span><span>(</span>vector<span>&lt;</span>vector<span>&lt;</span><span>int</span><span>>></span><span>&amp;</span> A<span>)</span> <span>{</span>
    vector<span>&lt;</span>vector<span>&lt;</span><span>int</span><span>>></span> <span>B</span><span>(</span>A<span>[</span><span>0</span><span>]</span><span>.</span><span>size</span><span>(</span><span>)</span><span>,</span> vector<span>&lt;</span><span>int</span><span>></span><span>(</span>A<span>.</span><span>size</span><span>(</span><span>)</span><span>,</span> <span>0</span><span>)</span><span>)</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> A<span>[</span><span>0</span><span>]</span><span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>0</span><span>;</span> j <span>&lt;</span> A<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> j<span>++</span><span>)</span> <span>{</span>
        B<span>[</span>i<span>]</span><span>[</span>j<span>]</span> <span>=</span> A<span>[</span>j<span>]</span><span>[</span>i<span>]</span><span>;</span>
      <span>}</span>
    <span>}</span>
    <span>return</span> B<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>]]></content>
    <author>
      <name>867. Transpose Matrix</name>
    </author>
    <category term="lmy"/>
    <contributor>
      <name>867. Transpose Matrix</name>
    </contributor>
    <rights>Copyright by 867. Transpose Matrix</rights>
  </entry>
  <entry>
    <title type="html">Java</title>
    <id>https://leetcode.innenu.com/1518-Wate-Bottles/Java/</id>
    <link href="https://leetcode.innenu.com/1518-Wate-Bottles/Java/"/>
    <updated>2021-02-17T16:18:42.691Z</updated>
    <content type="html"><![CDATA[<h2 id="lizncu"> lizncu</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span> <span>numWaterBottles</span><span>(</span><span>int</span> numBottles<span>,</span> <span>int</span> numExchange<span>)</span> <span>{</span>
    <span>int</span> ans <span>=</span> numBottles<span>;</span>

    <span>int</span> amount <span>=</span> numBottles <span>/</span> numExchange<span>;</span>

    <span>while</span> <span>(</span>amount <span>!=</span> <span>0</span><span>)</span> <span>{</span>
      ans <span>+=</span> amount<span>;</span>
      numBottles <span>-=</span> <span>(</span>numExchange <span>-</span> <span>1</span><span>)</span> <span>*</span> amount<span>;</span>
      amount <span>=</span> numBottles <span>/</span> numExchange<span>;</span>
    <span>}</span>

    <span>return</span> ans<span>;</span>
  <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div>]]></content>
    <author>
      <name>1518. Wate Bottles</name>
    </author>
    <category term="Java"/>
    <contributor>
      <name>1518. Wate Bottles</name>
    </contributor>
    <rights>Copyright by 1518. Wate Bottles</rights>
  </entry>
  <entry>
    <title type="html">C++</title>
    <id>https://leetcode.innenu.com/88-merge-sorted-array/C++/</id>
    <link href="https://leetcode.innenu.com/88-merge-sorted-array/C++/"/>
    <updated>2021-02-17T16:18:42.692Z</updated>
    <content type="html"><![CDATA[<h2 id="sqm"> sqm</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>
<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>
<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>void</span> <span>merge</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums1<span>,</span> <span>int</span> m<span>,</span> vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums2<span>,</span> <span>int</span> n<span>)</span> <span>{</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> m<span>;</span> i <span>&lt;</span> m <span>+</span> n<span>;</span> i<span>++</span><span>)</span> nums1<span>[</span>i<span>]</span> <span>=</span> nums2<span>[</span>i <span>-</span> m<span>]</span><span>;</span>
    <span>sort</span><span>(</span>nums1<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> nums1<span>.</span><span>begin</span><span>(</span><span>)</span> <span>+</span> m <span>+</span> n<span>)</span><span>;</span>
  <span>}</span>
<span>}</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div>]]></content>
    <author>
      <name>88. Merge Sorted Array</name>
    </author>
    <category term="C++"/>
    <contributor>
      <name>88. Merge Sorted Array</name>
    </contributor>
    <rights>Copyright by 88. Merge Sorted Array</rights>
  </entry>
  <entry>
    <title type="html">sqm</title>
    <id>https://leetcode.innenu.com/88-merge-sorted-array/sqm/</id>
    <link href="https://leetcode.innenu.com/88-merge-sorted-array/sqm/"/>
    <updated>2021-02-17T16:18:42.697Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>
<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>
<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>void</span> <span>merge</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums1<span>,</span> <span>int</span> m<span>,</span> vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums2<span>,</span> <span>int</span> n<span>)</span> <span>{</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> m<span>;</span> i <span>&lt;</span> m <span>+</span> n<span>;</span> i<span>++</span><span>)</span> nums1<span>[</span>i<span>]</span> <span>=</span> nums2<span>[</span>i <span>-</span> m<span>]</span><span>;</span>
    <span>sort</span><span>(</span>nums1<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> nums1<span>.</span><span>begin</span><span>(</span><span>)</span> <span>+</span> m <span>+</span> n<span>)</span><span>;</span>
  <span>}</span>
<span>}</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div>]]></content>
    <author>
      <name>88. Merge Sorted Array</name>
    </author>
    <category term="sqm"/>
    <contributor>
      <name>88. Merge Sorted Array</name>
    </contributor>
    <rights>Copyright by 88. Merge Sorted Array</rights>
  </entry>
  <entry>
    <title type="html">Java</title>
    <id>https://leetcode.innenu.com/9-palindrome-number/Java/</id>
    <link href="https://leetcode.innenu.com/9-palindrome-number/Java/"/>
    <updated>2021-02-17T16:18:42.697Z</updated>
    <content type="html"><![CDATA[<h2 id="lizncu"> lizncu</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>boolean</span> <span>isPalindrome</span><span>(</span><span>int</span> x<span>)</span> <span>{</span>
    <span>int</span> k <span>=</span> x<span>;</span>
    <span>int</span> sum <span>=</span> <span>0</span><span>;</span>
    <span>while</span> <span>(</span>x <span>!=</span> <span>0</span> <span>&amp;&amp;</span> x <span>></span> <span>0</span><span>)</span> <span>{</span>
      sum <span>=</span> sum <span>*</span> <span>10</span> <span>+</span> x <span>%</span> <span>10</span><span>;</span>
      x <span>=</span> x <span>/</span> <span>10</span><span>;</span>
    <span>}</span>

    <span>if</span> <span>(</span>k <span>==</span> sum<span>)</span> <span>{</span>
      <span>return</span> <span>true</span><span>;</span>
    <span>}</span>
    <span>return</span> <span>false</span><span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>]]></content>
    <author>
      <name>9. Palindrome Number</name>
    </author>
    <category term="Java"/>
    <contributor>
      <name>9. Palindrome Number</name>
    </contributor>
    <rights>Copyright by 9. Palindrome Number</rights>
  </entry>
  <entry>
    <title type="html">88. Merge Sorted Array</title>
    <id>https://leetcode.innenu.com/88-merge-sorted-array/</id>
    <link href="https://leetcode.innenu.com/88-merge-sorted-array/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_88-merge-sorted-array"> <a href="https://leetcode.com/problems/merge-sorted-array/" target="_blank" rel="noopener noreferrer">88. Merge Sorted Array</a></h1>
<p>Given two sorted integer arrays <em>nums1</em> and <em>nums2</em>, merge <em>nums2</em> into <em>nums1</em> as one sorted array.</p>
<p><strong>Note:</strong></p>
<ul>
<li>The number of elements initialized in <em>nums1</em> and <em>nums2</em> are <span><span><i>Not supported content</i></span><span aria-hidden="true"><span><span style="height:0.43056em;vertical-align:0em;"></span><span>m</span></span></span></span> and <span><span><i>Not supported content</i></span><span aria-hidden="true"><span><span style="height:0.43056em;vertical-align:0em;"></span><span>n</span></span></span></span> respectively.</li>
<li>You may assume that <em>nums1</em> has enough space (size that is <strong>equal</strong> to <span><span><i>Not supported content</i></span><span aria-hidden="true"><span><span style="height:0.43056em;vertical-align:0em;"></span><span>m</span></span></span></span> + <span><span><i>Not supported content</i></span><span aria-hidden="true"><span><span style="height:0.43056em;vertical-align:0em;"></span><span>n</span></span></span></span>) to hold additional elements from <em>nums2</em>.</li>
</ul>
<p><strong>Example:</strong></p>
<p><strong>Input:</strong></p>
<p>nums1 = [1,2,3,0,0,0], m = 3</p>
<p>nums2 = [2,5,6], n = 3</p>
<p><strong>Output:</strong> [1,2,2,3,5,6]</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li>-10<sup>9</sup> &lt;= nums1[i], nums2[i] &lt;= 10<sup>9</sup></li>
<li><code>nums1.length == m + n</code></li>
<li><code>nums2.length == n</code></li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">JavaScript</title>
    <id>https://leetcode.innenu.com/9-palindrome-number/JavaScript/</id>
    <link href="https://leetcode.innenu.com/9-palindrome-number/JavaScript/"/>
    <updated>2021-02-17T16:18:42.699Z</updated>
    <content type="html"><![CDATA[<h2 id="mister-hope"> Mister-Hope</h2>
<div><pre><code><span>/*
 * Runtime: 236 ms, faster than 30.44% of JavaScript online submissions for Palindrome Number.
 *
 * Memory Usage: 47.3 MB, less than 5.10% of JavaScript online submissions for Palindrome Number.
 */</span>

<span>const</span> <span>isPalindrome</span> <span>=</span> <span>(</span><span>x</span><span>)</span> <span>=></span> <span>{</span>
  <span>let</span> string <span>=</span> <span>String</span><span>(</span>x<span>)</span><span>;</span>
  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> string<span>.</span>length <span>/</span> <span>2</span><span>;</span> i<span>++</span><span>)</span>
    <span>if</span> <span>(</span>string<span>[</span>i<span>]</span> <span>!=</span> string<span>[</span>string<span>.</span>length <span>-</span> i <span>-</span> <span>1</span><span>]</span><span>)</span> <span>return</span> <span>false</span><span>;</span>
  <span>return</span> <span>true</span><span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div>]]></content>
    <author>
      <name>9. Palindrome Number</name>
    </author>
    <category term="JavaScript"/>
    <contributor>
      <name>9. Palindrome Number</name>
    </contributor>
    <rights>Copyright by 9. Palindrome Number</rights>
  </entry>
  <entry>
    <title type="html">C++</title>
    <id>https://leetcode.innenu.com/9-palindrome-number/C++/</id>
    <link href="https://leetcode.innenu.com/9-palindrome-number/C++/"/>
    <updated>2021-02-17T16:18:42.700Z</updated>
    <content type="html"><![CDATA[<h2 id="virgil"> Virgil</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>
<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>bool</span> <span>isPalindrome</span><span>(</span><span>int</span> x<span>)</span> <span>{</span>
    <span>int</span> a<span>[</span><span>10001</span><span>]</span><span>,</span> cnt <span>=</span> <span>0</span><span>;</span>
    <span>if</span> <span>(</span><span>!</span>x<span>)</span>
      <span>return</span> <span>true</span><span>;</span>
    <span>else</span> <span>if</span> <span>(</span>x <span>&lt;</span> <span>0</span><span>)</span>
      <span>return</span> <span>false</span><span>;</span>
    <span>else</span> <span>{</span>
      <span>while</span> <span>(</span>x <span>></span> <span>0</span><span>)</span> <span>{</span>
        a<span>[</span>cnt<span>]</span> <span>=</span> x <span>%</span> <span>10</span><span>;</span>
        x <span>/=</span> <span>10</span><span>;</span>
        cnt<span>++</span><span>;</span>
      <span>}</span>
      <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;=</span> <span>(</span>cnt <span>-</span> <span>1</span><span>)</span> <span>/</span> <span>2</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
        <span>if</span> <span>(</span>a<span>[</span>i<span>]</span> <span>!=</span> a<span>[</span>cnt <span>-</span> i <span>-</span> <span>1</span><span>]</span><span>)</span> <span>return</span> <span>false</span><span>;</span>
      <span>}</span>
      <span>return</span> <span>true</span><span>;</span>
    <span>}</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br></div></div><h2 id="lmy"> lmy</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>bool</span> <span>isPalindrome</span><span>(</span><span>int</span> x<span>)</span> <span>{</span>
    <span>if</span> <span>(</span>x <span>&lt;</span> <span>0</span> <span>||</span> <span>(</span>x <span>%</span> <span>10</span> <span>==</span> <span>0</span> <span>&amp;&amp;</span> x <span>!=</span> <span>0</span><span>)</span><span>)</span> <span>{</span>
      <span>return</span> <span>false</span><span>;</span>
    <span>}</span>

    <span>int</span> n <span>=</span> <span>0</span><span>;</span>
    <span>while</span> <span>(</span>x <span>></span> n<span>)</span> <span>{</span>
      n <span>=</span> n <span>*</span> <span>10</span> <span>+</span> x <span>%</span> <span>10</span><span>;</span>
      x <span>/=</span> <span>10</span><span>;</span>
    <span>}</span>
    <span>return</span> x <span>==</span> n <span>||</span> x <span>==</span> n <span>/</span> <span>10</span><span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div><h2 id="sqm"> sqm</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>
<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;string></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>bool</span> <span>isPalindrome</span><span>(</span><span>int</span> x<span>)</span> <span>{</span>
    string tmp <span>=</span> <span>to_string</span><span>(</span>x<span>)</span><span>;</span>
    string tmp2 <span>=</span> tmp<span>;</span>
    <span>reverse</span><span>(</span>tmp2<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> tmp2<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>
    <span>if</span> <span>(</span>tmp <span>==</span> tmp2<span>)</span> <span>return</span> <span>true</span><span>;</span>
    <span>return</span> <span>false</span><span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>]]></content>
    <author>
      <name>9. Palindrome Number</name>
    </author>
    <category term="C++"/>
    <contributor>
      <name>9. Palindrome Number</name>
    </contributor>
    <rights>Copyright by 9. Palindrome Number</rights>
  </entry>
  <entry>
    <title type="html">Mister-Hope</title>
    <id>https://leetcode.innenu.com/9-palindrome-number/Mister-Hope/</id>
    <link href="https://leetcode.innenu.com/9-palindrome-number/Mister-Hope/"/>
    <updated>2021-02-17T16:18:42.700Z</updated>
    <content type="html"><![CDATA[<h2 id="javascript"> JavaScript</h2>
<div><pre><code><span>/*
 * Runtime: 236 ms, faster than 30.44% of JavaScript online submissions for Palindrome Number.
 *
 * Memory Usage: 47.3 MB, less than 5.10% of JavaScript online submissions for Palindrome Number.
 */</span>

<span>const</span> <span>isPalindrome</span> <span>=</span> <span>(</span><span>x</span><span>)</span> <span>=></span> <span>{</span>
  <span>let</span> string <span>=</span> <span>String</span><span>(</span>x<span>)</span><span>;</span>
  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> string<span>.</span>length <span>/</span> <span>2</span><span>;</span> i<span>++</span><span>)</span>
    <span>if</span> <span>(</span>string<span>[</span>i<span>]</span> <span>!=</span> string<span>[</span>string<span>.</span>length <span>-</span> i <span>-</span> <span>1</span><span>]</span><span>)</span> <span>return</span> <span>false</span><span>;</span>
  <span>return</span> <span>true</span><span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div><h2 id="typescript"> TypeScript</h2>
<div><pre><code><span>/*
 * Runtime: 216 ms, faster than 77.06% of TypeScript online submissions for Palindrome Number.
 *
 * Memory Usage: 49.6 MB, less than 22.63% of TypeScript online submissions for Palindrome Number.
 */</span>

<span>const</span> isPalindrome <span>=</span> <span>(</span>x<span>:</span> <span>number</span><span>)</span><span>:</span> <span>boolean</span> <span>=></span> <span>{</span>
  <span>let</span> <span>string</span> <span>=</span> <span>String</span><span>(</span>x<span>)</span><span>;</span>
  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> <span>string</span><span>.</span>length <span>/</span> <span>2</span><span>;</span> i<span>++</span><span>)</span>
    <span>if</span> <span>(</span><span>string</span><span>[</span>i<span>]</span> <span>!=</span> <span>string</span><span>[</span><span>string</span><span>.</span>length <span>-</span> i <span>-</span> <span>1</span><span>]</span><span>)</span> <span>return</span> <span>false</span><span>;</span>
  <span>return</span> <span>true</span><span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div>]]></content>
    <author>
      <name>9. Palindrome Number</name>
    </author>
    <category term="Mister-Hope"/>
    <contributor>
      <name>9. Palindrome Number</name>
    </contributor>
    <rights>Copyright by 9. Palindrome Number</rights>
  </entry>
  <entry>
    <title type="html">TypeScript</title>
    <id>https://leetcode.innenu.com/9-palindrome-number/TypeScript/</id>
    <link href="https://leetcode.innenu.com/9-palindrome-number/TypeScript/"/>
    <updated>2021-02-17T16:18:42.701Z</updated>
    <content type="html"><![CDATA[<h2 id="mister-hope"> Mister-Hope</h2>
<div><pre><code><span>/*
 * Runtime: 216 ms, faster than 77.06% of TypeScript online submissions for Palindrome Number.
 *
 * Memory Usage: 49.6 MB, less than 22.63% of TypeScript online submissions for Palindrome Number.
 */</span>

<span>const</span> isPalindrome <span>=</span> <span>(</span>x<span>:</span> <span>number</span><span>)</span><span>:</span> <span>boolean</span> <span>=></span> <span>{</span>
  <span>let</span> <span>string</span> <span>=</span> <span>String</span><span>(</span>x<span>)</span><span>;</span>
  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> <span>string</span><span>.</span>length <span>/</span> <span>2</span><span>;</span> i<span>++</span><span>)</span>
    <span>if</span> <span>(</span><span>string</span><span>[</span>i<span>]</span> <span>!=</span> <span>string</span><span>[</span><span>string</span><span>.</span>length <span>-</span> i <span>-</span> <span>1</span><span>]</span><span>)</span> <span>return</span> <span>false</span><span>;</span>
  <span>return</span> <span>true</span><span>;</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div>]]></content>
    <author>
      <name>9. Palindrome Number</name>
    </author>
    <category term="TypeScript"/>
    <contributor>
      <name>9. Palindrome Number</name>
    </contributor>
    <rights>Copyright by 9. Palindrome Number</rights>
  </entry>
  <entry>
    <title type="html">lizncu</title>
    <id>https://leetcode.innenu.com/9-palindrome-number/lizncu/</id>
    <link href="https://leetcode.innenu.com/9-palindrome-number/lizncu/"/>
    <updated>2021-02-17T16:18:42.701Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>boolean</span> <span>isPalindrome</span><span>(</span><span>int</span> x<span>)</span> <span>{</span>
    <span>int</span> k <span>=</span> x<span>;</span>
    <span>int</span> sum <span>=</span> <span>0</span><span>;</span>
    <span>while</span> <span>(</span>x <span>!=</span> <span>0</span> <span>&amp;&amp;</span> x <span>></span> <span>0</span><span>)</span> <span>{</span>
      sum <span>=</span> sum <span>*</span> <span>10</span> <span>+</span> x <span>%</span> <span>10</span><span>;</span>
      x <span>=</span> x <span>/</span> <span>10</span><span>;</span>
    <span>}</span>

    <span>if</span> <span>(</span>k <span>==</span> sum<span>)</span> <span>{</span>
      <span>return</span> <span>true</span><span>;</span>
    <span>}</span>
    <span>return</span> <span>false</span><span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>]]></content>
    <author>
      <name>9. Palindrome Number</name>
    </author>
    <category term="lizncu"/>
    <contributor>
      <name>9. Palindrome Number</name>
    </contributor>
    <rights>Copyright by 9. Palindrome Number</rights>
  </entry>
  <entry>
    <title type="html">lmy</title>
    <id>https://leetcode.innenu.com/9-palindrome-number/lmy/</id>
    <link href="https://leetcode.innenu.com/9-palindrome-number/lmy/"/>
    <updated>2021-02-17T16:18:42.701Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>bool</span> <span>isPalindrome</span><span>(</span><span>int</span> x<span>)</span> <span>{</span>
    <span>if</span> <span>(</span>x <span>&lt;</span> <span>0</span> <span>||</span> <span>(</span>x <span>%</span> <span>10</span> <span>==</span> <span>0</span> <span>&amp;&amp;</span> x <span>!=</span> <span>0</span><span>)</span><span>)</span> <span>{</span>
      <span>return</span> <span>false</span><span>;</span>
    <span>}</span>

    <span>int</span> n <span>=</span> <span>0</span><span>;</span>
    <span>while</span> <span>(</span>x <span>></span> n<span>)</span> <span>{</span>
      n <span>=</span> n <span>*</span> <span>10</span> <span>+</span> x <span>%</span> <span>10</span><span>;</span>
      x <span>/=</span> <span>10</span><span>;</span>
    <span>}</span>
    <span>return</span> x <span>==</span> n <span>||</span> x <span>==</span> n <span>/</span> <span>10</span><span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>]]></content>
    <author>
      <name>9. Palindrome Number</name>
    </author>
    <category term="lmy"/>
    <contributor>
      <name>9. Palindrome Number</name>
    </contributor>
    <rights>Copyright by 9. Palindrome Number</rights>
  </entry>
  <entry>
    <title type="html">Virgil</title>
    <id>https://leetcode.innenu.com/9-palindrome-number/Virgil/</id>
    <link href="https://leetcode.innenu.com/9-palindrome-number/Virgil/"/>
    <updated>2021-02-17T16:18:42.702Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>
<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>bool</span> <span>isPalindrome</span><span>(</span><span>int</span> x<span>)</span> <span>{</span>
    <span>int</span> a<span>[</span><span>10001</span><span>]</span><span>,</span> cnt <span>=</span> <span>0</span><span>;</span>
    <span>if</span> <span>(</span><span>!</span>x<span>)</span>
      <span>return</span> <span>true</span><span>;</span>
    <span>else</span> <span>if</span> <span>(</span>x <span>&lt;</span> <span>0</span><span>)</span>
      <span>return</span> <span>false</span><span>;</span>
    <span>else</span> <span>{</span>
      <span>while</span> <span>(</span>x <span>></span> <span>0</span><span>)</span> <span>{</span>
        a<span>[</span>cnt<span>]</span> <span>=</span> x <span>%</span> <span>10</span><span>;</span>
        x <span>/=</span> <span>10</span><span>;</span>
        cnt<span>++</span><span>;</span>
      <span>}</span>
      <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;=</span> <span>(</span>cnt <span>-</span> <span>1</span><span>)</span> <span>/</span> <span>2</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
        <span>if</span> <span>(</span>a<span>[</span>i<span>]</span> <span>!=</span> a<span>[</span>cnt <span>-</span> i <span>-</span> <span>1</span><span>]</span><span>)</span> <span>return</span> <span>false</span><span>;</span>
      <span>}</span>
      <span>return</span> <span>true</span><span>;</span>
    <span>}</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br></div></div>]]></content>
    <author>
      <name>9. Palindrome Number</name>
    </author>
    <category term="Virgil"/>
    <contributor>
      <name>9. Palindrome Number</name>
    </contributor>
    <rights>Copyright by 9. Palindrome Number</rights>
  </entry>
  <entry>
    <title type="html">9. Palindrome Number</title>
    <id>https://leetcode.innenu.com/9-palindrome-number/</id>
    <link href="https://leetcode.innenu.com/9-palindrome-number/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_9-palindrome-number"> <a href="https://leetcode.com/problems/palindrome-number/" target="_blank" rel="noopener noreferrer">9. Palindrome Number</a></h1>
<p>Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forward.</p>
<p><strong>Follow up:</strong> Could you solve it without converting the integer to a string?</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> x = 121</p>
<p><strong>Output:</strong> true</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> x = -121</p>
<p><strong>Output:</strong> false</p>
<p><strong>Explanation:</strong> From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.</p>
<p><strong>Example 3:</strong></p>
<p><strong>Input:</strong> x = 10</p>
<p><strong>Output:</strong> false</p>
<p><strong>Explanation:</strong> Reads 01 from right to left. Therefore it is not a palindrome.</p>
<p><strong>Example 4:</strong></p>
<p><strong>Input:</strong> x = -101</p>
<p><strong>Output:</strong> false</p>
<h2 id="constraints"> Constraints</h2>
<ul>
<li><code>-231 &lt;= x &lt;= 231 - 1</code></li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">sqm</title>
    <id>https://leetcode.innenu.com/9-palindrome-number/sqm/</id>
    <link href="https://leetcode.innenu.com/9-palindrome-number/sqm/"/>
    <updated>2021-02-17T16:18:42.702Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>
<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;string></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>bool</span> <span>isPalindrome</span><span>(</span><span>int</span> x<span>)</span> <span>{</span>
    string tmp <span>=</span> <span>to_string</span><span>(</span>x<span>)</span><span>;</span>
    string tmp2 <span>=</span> tmp<span>;</span>
    <span>reverse</span><span>(</span>tmp2<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> tmp2<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>
    <span>if</span> <span>(</span>tmp <span>==</span> tmp2<span>)</span> <span>return</span> <span>true</span><span>;</span>
    <span>return</span> <span>false</span><span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>]]></content>
    <author>
      <name>9. Palindrome Number</name>
    </author>
    <category term="sqm"/>
    <contributor>
      <name>9. Palindrome Number</name>
    </contributor>
    <rights>Copyright by 9. Palindrome Number</rights>
  </entry>
  <entry>
    <title type="html">C++</title>
    <id>https://leetcode.innenu.com/905-Sort-Array-By-Parity/C++/</id>
    <link href="https://leetcode.innenu.com/905-Sort-Array-By-Parity/C++/"/>
    <updated>2021-02-17T16:18:42.703Z</updated>
    <content type="html"><![CDATA[<h2 id="sqm"> sqm</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  vector<span>&lt;</span><span>int</span><span>></span> <span>sortArrayByParity</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> A<span>)</span> <span>{</span>
    <span>int</span> l <span>=</span> <span>0</span><span>,</span> r <span>=</span> A<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>;</span>
    <span>while</span> <span>(</span>l <span>&lt;</span> r<span>)</span> <span>{</span>
      <span>if</span> <span>(</span>A<span>[</span>l<span>]</span> <span>%</span> <span>2</span> <span>==</span> <span>0</span><span>)</span>
        l<span>++</span><span>;</span>
      <span>else</span>
        <span>swap</span><span>(</span>A<span>[</span>l<span>]</span><span>,</span> A<span>[</span>r<span>]</span><span>)</span><span>,</span> r<span>--</span><span>;</span>
    <span>}</span>
    <span>return</span> A<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div>]]></content>
    <author>
      <name>905. Sort Array By Parity</name>
    </author>
    <category term="C++"/>
    <contributor>
      <name>905. Sort Array By Parity</name>
    </contributor>
    <rights>Copyright by 905. Sort Array By Parity</rights>
  </entry>
  <entry>
    <title type="html">Java</title>
    <id>https://leetcode.innenu.com/905-Sort-Array-By-Parity/Java/</id>
    <link href="https://leetcode.innenu.com/905-Sort-Array-By-Parity/Java/"/>
    <updated>2021-02-17T16:18:42.703Z</updated>
    <content type="html"><![CDATA[<h2 id="lizncu"> lizncu</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>sortArrayByParity</span><span>(</span><span>int</span><span>[</span><span>]</span> <span>A</span><span>)</span> <span>{</span>
    <span>int</span><span>[</span><span>]</span> ans <span>=</span> <span>new</span> <span>int</span><span>[</span><span>A</span><span>.</span>length<span>]</span><span>;</span>
    <span>int</span> front <span>=</span> <span>0</span><span>,</span> rear <span>=</span> <span>A</span><span>.</span>length <span>-</span> <span>1</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> <span>A</span><span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span><span>A</span><span>[</span>i<span>]</span> <span>%</span> <span>2</span> <span>==</span> <span>0</span><span>)</span> <span>{</span>
        ans<span>[</span>front<span>++</span><span>]</span> <span>=</span> <span>A</span><span>[</span>i<span>]</span><span>;</span>
      <span>}</span> <span>else</span> <span>{</span>
        ans<span>[</span>rear<span>--</span><span>]</span> <span>=</span> <span>A</span><span>[</span>i<span>]</span><span>;</span>
      <span>}</span>
    <span>}</span>

    <span>return</span> ans<span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div>]]></content>
    <author>
      <name>905. Sort Array By Parity</name>
    </author>
    <category term="Java"/>
    <contributor>
      <name>905. Sort Array By Parity</name>
    </contributor>
    <rights>Copyright by 905. Sort Array By Parity</rights>
  </entry>
  <entry>
    <title type="html">lizncu</title>
    <id>https://leetcode.innenu.com/905-Sort-Array-By-Parity/lizncu/</id>
    <link href="https://leetcode.innenu.com/905-Sort-Array-By-Parity/lizncu/"/>
    <updated>2021-02-17T16:18:42.703Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>sortArrayByParity</span><span>(</span><span>int</span><span>[</span><span>]</span> <span>A</span><span>)</span> <span>{</span>
    <span>int</span><span>[</span><span>]</span> ans <span>=</span> <span>new</span> <span>int</span><span>[</span><span>A</span><span>.</span>length<span>]</span><span>;</span>
    <span>int</span> front <span>=</span> <span>0</span><span>,</span> rear <span>=</span> <span>A</span><span>.</span>length <span>-</span> <span>1</span><span>;</span>

    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> <span>A</span><span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span><span>A</span><span>[</span>i<span>]</span> <span>%</span> <span>2</span> <span>==</span> <span>0</span><span>)</span> <span>{</span>
        ans<span>[</span>front<span>++</span><span>]</span> <span>=</span> <span>A</span><span>[</span>i<span>]</span><span>;</span>
      <span>}</span> <span>else</span> <span>{</span>
        ans<span>[</span>rear<span>--</span><span>]</span> <span>=</span> <span>A</span><span>[</span>i<span>]</span><span>;</span>
      <span>}</span>
    <span>}</span>

    <span>return</span> ans<span>;</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div>]]></content>
    <author>
      <name>905. Sort Array By Parity</name>
    </author>
    <category term="lizncu"/>
    <contributor>
      <name>905. Sort Array By Parity</name>
    </contributor>
    <rights>Copyright by 905. Sort Array By Parity</rights>
  </entry>
  <entry>
    <title type="html">905. Sort Array By Parity</title>
    <id>https://leetcode.innenu.com/905-Sort-Array-By-Parity/</id>
    <link href="https://leetcode.innenu.com/905-Sort-Array-By-Parity/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_905-sort-array-by-parity"> <a href="https://leetcode.com/problems/sort-array-by-parity/" target="_blank" rel="noopener noreferrer">905. Sort Array By Parity</a></h1>
<p>Given an array <code>A</code> of non-negative integers, return an array consisting of all the even elements of <code>A</code>, followed by all the odd elements of <code>A</code>.</p>
<p>You may return any answer array that satisfies this condition.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> [3,1,2,4]</p>
<p><strong>Output:</strong> [2,4,3,1]
The outputs [4,2,3,1], [2,4,1,3], and [4,2,1,3] would also be accepted.</p>
<p><strong>Note:</strong></p>
<ol>
<li><code>1 &lt;= A.length &lt;= 5000</code></li>
<li><code>0 &lt;= A[i] &lt;= 5000</code></li>
</ol>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">C++</title>
    <id>https://leetcode.innenu.com/922-Sort-Array-By-Parity-II/C++/</id>
    <link href="https://leetcode.innenu.com/922-Sort-Array-By-Parity-II/C++/"/>
    <updated>2021-02-17T16:18:42.704Z</updated>
    <content type="html"><![CDATA[<h2 id="sqm"> sqm</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  vector<span>&lt;</span><span>int</span><span>></span> <span>sortArrayByParityII</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> A<span>)</span> <span>{</span>
    vector<span>&lt;</span><span>int</span><span>></span> <span>even</span><span>(</span>A<span>.</span><span>size</span><span>(</span><span>)</span> <span>/</span> <span>2</span><span>)</span><span>;</span>
    vector<span>&lt;</span><span>int</span><span>></span> <span>odd</span><span>(</span>A<span>.</span><span>size</span><span>(</span><span>)</span> <span>/</span> <span>2</span><span>)</span><span>;</span>
    vector<span>&lt;</span><span>int</span><span>></span> <span>result</span><span>(</span>A<span>.</span><span>size</span><span>(</span><span>)</span><span>)</span><span>;</span>
    <span>int</span> evenIndex <span>=</span> <span>0</span><span>;</span>
    <span>int</span> oddIndex <span>=</span> <span>0</span><span>;</span>
    <span>int</span> resultIndex <span>=</span> <span>0</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> A<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>A<span>[</span>i<span>]</span> <span>%</span> <span>2</span> <span>==</span> <span>0</span><span>)</span>
        even<span>[</span>evenIndex<span>++</span><span>]</span> <span>=</span> A<span>[</span>i<span>]</span><span>;</span>
      <span>else</span>
        odd<span>[</span>oddIndex<span>++</span><span>]</span> <span>=</span> A<span>[</span>i<span>]</span><span>;</span>
    <span>}</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> oddIndex<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      result<span>[</span>resultIndex<span>++</span><span>]</span> <span>=</span> even<span>[</span>i<span>]</span><span>;</span>
      result<span>[</span>resultIndex<span>++</span><span>]</span> <span>=</span> odd<span>[</span>i<span>]</span><span>;</span>
    <span>}</span>
    <span>return</span> result<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br></div></div>]]></content>
    <author>
      <name>922. Sort Array By Parity Ii</name>
    </author>
    <category term="C++"/>
    <contributor>
      <name>922. Sort Array By Parity Ii</name>
    </contributor>
    <rights>Copyright by 922. Sort Array By Parity Ii</rights>
  </entry>
  <entry>
    <title type="html">sqm</title>
    <id>https://leetcode.innenu.com/905-Sort-Array-By-Parity/sqm/</id>
    <link href="https://leetcode.innenu.com/905-Sort-Array-By-Parity/sqm/"/>
    <updated>2021-02-17T16:18:42.705Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  vector<span>&lt;</span><span>int</span><span>></span> <span>sortArrayByParity</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> A<span>)</span> <span>{</span>
    <span>int</span> l <span>=</span> <span>0</span><span>,</span> r <span>=</span> A<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>;</span>
    <span>while</span> <span>(</span>l <span>&lt;</span> r<span>)</span> <span>{</span>
      <span>if</span> <span>(</span>A<span>[</span>l<span>]</span> <span>%</span> <span>2</span> <span>==</span> <span>0</span><span>)</span>
        l<span>++</span><span>;</span>
      <span>else</span>
        <span>swap</span><span>(</span>A<span>[</span>l<span>]</span><span>,</span> A<span>[</span>r<span>]</span><span>)</span><span>,</span> r<span>--</span><span>;</span>
    <span>}</span>
    <span>return</span> A<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div>]]></content>
    <author>
      <name>905. Sort Array By Parity</name>
    </author>
    <category term="sqm"/>
    <contributor>
      <name>905. Sort Array By Parity</name>
    </contributor>
    <rights>Copyright by 905. Sort Array By Parity</rights>
  </entry>
  <entry>
    <title type="html">922. Sort Array By Parity II</title>
    <id>https://leetcode.innenu.com/922-Sort-Array-By-Parity-II/</id>
    <link href="https://leetcode.innenu.com/922-Sort-Array-By-Parity-II/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_922-sort-array-by-parity-ii"> <a href="https://leetcode.com/problems/sort-array-by-parity-ii/" target="_blank" rel="noopener noreferrer">922. Sort Array By Parity II</a></h1>
<p>Given an array <code>A</code> of non-negative integers, half of the integers in A are odd, and half of the integers are even.</p>
<p>Sort the array so that whenever <code>A[i]</code> is odd, <code>i</code> is odd; and whenever <code>A[i]</code> is even, <code>i</code> is even.</p>
<p>You may return any answer array that satisfies this condition.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> [4,2,5,7]</p>
<p><strong>Output:</strong> [4,5,2,7]</p>
<p><strong>Explanation:</strong> [4,7,2,5], [2,5,4,7], [2,7,4,5] would also have been accepted.</p>
<p><strong>Note:</strong></p>
<ol>
<li><code>2 &lt;= A.length &lt;= 20000</code></li>
<li><code>A.length % 2 == 0</code></li>
<li><code>0 &lt;= A[i] &lt;= 1000</code></li>
</ol>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">sqm</title>
    <id>https://leetcode.innenu.com/922-Sort-Array-By-Parity-II/sqm/</id>
    <link href="https://leetcode.innenu.com/922-Sort-Array-By-Parity-II/sqm/"/>
    <updated>2021-02-17T16:18:42.706Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>
<span><span>#</span><span>include</span> <span>&lt;vector></span></span>
<span>using</span> <span>namespace</span> std<span>;</span>

<span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  vector<span>&lt;</span><span>int</span><span>></span> <span>sortArrayByParityII</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> A<span>)</span> <span>{</span>
    vector<span>&lt;</span><span>int</span><span>></span> <span>even</span><span>(</span>A<span>.</span><span>size</span><span>(</span><span>)</span> <span>/</span> <span>2</span><span>)</span><span>;</span>
    vector<span>&lt;</span><span>int</span><span>></span> <span>odd</span><span>(</span>A<span>.</span><span>size</span><span>(</span><span>)</span> <span>/</span> <span>2</span><span>)</span><span>;</span>
    vector<span>&lt;</span><span>int</span><span>></span> <span>result</span><span>(</span>A<span>.</span><span>size</span><span>(</span><span>)</span><span>)</span><span>;</span>
    <span>int</span> evenIndex <span>=</span> <span>0</span><span>;</span>
    <span>int</span> oddIndex <span>=</span> <span>0</span><span>;</span>
    <span>int</span> resultIndex <span>=</span> <span>0</span><span>;</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> A<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>A<span>[</span>i<span>]</span> <span>%</span> <span>2</span> <span>==</span> <span>0</span><span>)</span>
        even<span>[</span>evenIndex<span>++</span><span>]</span> <span>=</span> A<span>[</span>i<span>]</span><span>;</span>
      <span>else</span>
        odd<span>[</span>oddIndex<span>++</span><span>]</span> <span>=</span> A<span>[</span>i<span>]</span><span>;</span>
    <span>}</span>
    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> oddIndex<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      result<span>[</span>resultIndex<span>++</span><span>]</span> <span>=</span> even<span>[</span>i<span>]</span><span>;</span>
      result<span>[</span>resultIndex<span>++</span><span>]</span> <span>=</span> odd<span>[</span>i<span>]</span><span>;</span>
    <span>}</span>
    <span>return</span> result<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br></div></div>]]></content>
    <author>
      <name>922. Sort Array By Parity Ii</name>
    </author>
    <category term="sqm"/>
    <contributor>
      <name>922. Sort Array By Parity Ii</name>
    </contributor>
    <rights>Copyright by 922. Sort Array By Parity Ii</rights>
  </entry>
  <entry>
    <title type="html">Java</title>
    <id>https://leetcode.innenu.com/977-Squares-of-a-Sorted-Array/Java/</id>
    <link href="https://leetcode.innenu.com/977-Squares-of-a-Sorted-Array/Java/"/>
    <updated>2021-02-17T16:18:42.707Z</updated>
    <content type="html"><![CDATA[<h2 id="lizncu"> lizncu</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>sortedSquares</span><span>(</span><span>int</span><span>[</span><span>]</span> <span>A</span><span>)</span> <span>{</span>
    <span>if</span> <span>(</span><span>A</span><span>[</span><span>0</span><span>]</span> <span>>=</span> <span>0</span><span>)</span> <span>{</span>
      <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> <span>A</span><span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
        <span>A</span><span>[</span>i<span>]</span> <span>=</span> <span>A</span><span>[</span>i<span>]</span> <span>*</span> <span>A</span><span>[</span>i<span>]</span><span>;</span>
      <span>}</span>
      <span>return</span> <span>A</span><span>;</span>
    <span>}</span>

    <span>else</span> <span>if</span> <span>(</span><span>A</span><span>[</span><span>A</span><span>.</span>length <span>-</span> <span>1</span><span>]</span> <span>&lt;</span> <span>0</span><span>)</span> <span>{</span>
      <span>int</span><span>[</span><span>]</span> target <span>=</span> <span>new</span> <span>int</span><span>[</span><span>A</span><span>.</span>length<span>]</span><span>;</span>
      <span>int</span> count <span>=</span> <span>0</span><span>;</span>

      <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>A</span><span>.</span>length <span>-</span> <span>1</span><span>;</span> i <span>>=</span> <span>0</span><span>;</span> i<span>--</span><span>)</span> <span>{</span>
        target<span>[</span>count<span>]</span> <span>=</span> <span>A</span><span>[</span>i<span>]</span> <span>*</span> <span>A</span><span>[</span>i<span>]</span><span>;</span>
        count<span>++</span><span>;</span>
      <span>}</span>

      <span>return</span> target<span>;</span>
    <span>}</span>

    <span>else</span> <span>{</span>
      <span>int</span> i <span>=</span> <span>0</span><span>;</span>
      <span>while</span> <span>(</span><span>!</span><span>(</span><span>A</span><span>[</span>i<span>]</span> <span>&lt;</span> <span>0</span> <span>&amp;&amp;</span> <span>A</span><span>[</span>i <span>+</span> <span>1</span><span>]</span> <span>>=</span> <span>0</span><span>)</span><span>)</span> <span>{</span>
        i<span>++</span><span>;</span>
      <span>}</span>
      <span>int</span> k <span>=</span> i<span>;</span>
      <span>int</span> j <span>=</span> i <span>+</span> <span>1</span><span>;</span>

      <span>int</span><span>[</span><span>]</span> target <span>=</span> <span>new</span> <span>int</span><span>[</span><span>A</span><span>.</span>length<span>]</span><span>;</span>
      <span>int</span> count <span>=</span> <span>0</span><span>;</span>

      <span>while</span> <span>(</span>k <span>>=</span> <span>0</span> <span>&amp;&amp;</span> j <span>&lt;</span> <span>A</span><span>.</span>length<span>)</span> <span>{</span>
        <span>if</span> <span>(</span><span>A</span><span>[</span>k<span>]</span> <span>*</span> <span>A</span><span>[</span>k<span>]</span> <span>></span> <span>A</span><span>[</span>j<span>]</span> <span>*</span> <span>A</span><span>[</span>j<span>]</span><span>)</span> <span>{</span>
          target<span>[</span>count<span>]</span> <span>=</span> <span>A</span><span>[</span>j<span>]</span> <span>*</span> <span>A</span><span>[</span>j<span>]</span><span>;</span>
          count<span>++</span><span>;</span>
          j<span>++</span><span>;</span>
        <span>}</span> <span>else</span> <span>if</span> <span>(</span><span>A</span><span>[</span>k<span>]</span> <span>*</span> <span>A</span><span>[</span>k<span>]</span> <span>&lt;</span> <span>A</span><span>[</span>j<span>]</span> <span>*</span> <span>A</span><span>[</span>j<span>]</span><span>)</span> <span>{</span>
          target<span>[</span>count<span>]</span> <span>=</span> <span>A</span><span>[</span>k<span>]</span> <span>*</span> <span>A</span><span>[</span>k<span>]</span><span>;</span>
          count<span>++</span><span>;</span>
          k<span>--</span><span>;</span>
        <span>}</span> <span>else</span> <span>{</span>
          target<span>[</span>count<span>]</span> <span>=</span> target<span>[</span>count <span>+</span> <span>1</span><span>]</span> <span>=</span> <span>A</span><span>[</span>k<span>]</span> <span>*</span> <span>A</span><span>[</span>k<span>]</span><span>;</span>
          count <span>+=</span> <span>2</span><span>;</span>
          k<span>--</span><span>;</span>
          j<span>++</span><span>;</span>
        <span>}</span>
      <span>}</span>

      <span>if</span> <span>(</span>count <span>&lt;=</span> <span>A</span><span>.</span>length <span>-</span> <span>1</span><span>)</span> <span>{</span>
        <span>while</span> <span>(</span>k <span>>=</span> <span>0</span><span>)</span> <span>{</span>
          target<span>[</span>count<span>]</span> <span>=</span> <span>A</span><span>[</span>k<span>]</span> <span>*</span> <span>A</span><span>[</span>k<span>]</span><span>;</span>
          count<span>++</span><span>;</span>
          k<span>--</span><span>;</span>
        <span>}</span>
        <span>while</span> <span>(</span>j <span>&lt;</span> <span>A</span><span>.</span>length<span>)</span> <span>{</span>
          target<span>[</span>count<span>]</span> <span>=</span> <span>A</span><span>[</span>j<span>]</span> <span>*</span> <span>A</span><span>[</span>j<span>]</span><span>;</span>
          count<span>++</span><span>;</span>
          j<span>++</span><span>;</span>
        <span>}</span>

        <span>return</span> target<span>;</span>
      <span>}</span>

      <span>return</span> target<span>;</span>
    <span>}</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br><span>65</span><br><span>66</span><br><span>67</span><br><span>68</span><br><span>69</span><br></div></div>]]></content>
    <author>
      <name>977. Squares of a Sorted Array</name>
    </author>
    <category term="Java"/>
    <contributor>
      <name>977. Squares of a Sorted Array</name>
    </contributor>
    <rights>Copyright by 977. Squares of a Sorted Array</rights>
  </entry>
  <entry>
    <title type="html">lizncu</title>
    <id>https://leetcode.innenu.com/977-Squares-of-a-Sorted-Array/lizncu/</id>
    <link href="https://leetcode.innenu.com/977-Squares-of-a-Sorted-Array/lizncu/"/>
    <updated>2021-02-17T16:18:42.708Z</updated>
    <content type="html"><![CDATA[<h2 id="java"> Java</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>sortedSquares</span><span>(</span><span>int</span><span>[</span><span>]</span> <span>A</span><span>)</span> <span>{</span>
    <span>if</span> <span>(</span><span>A</span><span>[</span><span>0</span><span>]</span> <span>>=</span> <span>0</span><span>)</span> <span>{</span>
      <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> <span>A</span><span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
        <span>A</span><span>[</span>i<span>]</span> <span>=</span> <span>A</span><span>[</span>i<span>]</span> <span>*</span> <span>A</span><span>[</span>i<span>]</span><span>;</span>
      <span>}</span>
      <span>return</span> <span>A</span><span>;</span>
    <span>}</span>

    <span>else</span> <span>if</span> <span>(</span><span>A</span><span>[</span><span>A</span><span>.</span>length <span>-</span> <span>1</span><span>]</span> <span>&lt;</span> <span>0</span><span>)</span> <span>{</span>
      <span>int</span><span>[</span><span>]</span> target <span>=</span> <span>new</span> <span>int</span><span>[</span><span>A</span><span>.</span>length<span>]</span><span>;</span>
      <span>int</span> count <span>=</span> <span>0</span><span>;</span>

      <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>A</span><span>.</span>length <span>-</span> <span>1</span><span>;</span> i <span>>=</span> <span>0</span><span>;</span> i<span>--</span><span>)</span> <span>{</span>
        target<span>[</span>count<span>]</span> <span>=</span> <span>A</span><span>[</span>i<span>]</span> <span>*</span> <span>A</span><span>[</span>i<span>]</span><span>;</span>
        count<span>++</span><span>;</span>
      <span>}</span>

      <span>return</span> target<span>;</span>
    <span>}</span>

    <span>else</span> <span>{</span>
      <span>int</span> i <span>=</span> <span>0</span><span>;</span>
      <span>while</span> <span>(</span><span>!</span><span>(</span><span>A</span><span>[</span>i<span>]</span> <span>&lt;</span> <span>0</span> <span>&amp;&amp;</span> <span>A</span><span>[</span>i <span>+</span> <span>1</span><span>]</span> <span>>=</span> <span>0</span><span>)</span><span>)</span> <span>{</span>
        i<span>++</span><span>;</span>
      <span>}</span>
      <span>int</span> k <span>=</span> i<span>;</span>
      <span>int</span> j <span>=</span> i <span>+</span> <span>1</span><span>;</span>

      <span>int</span><span>[</span><span>]</span> target <span>=</span> <span>new</span> <span>int</span><span>[</span><span>A</span><span>.</span>length<span>]</span><span>;</span>
      <span>int</span> count <span>=</span> <span>0</span><span>;</span>

      <span>while</span> <span>(</span>k <span>>=</span> <span>0</span> <span>&amp;&amp;</span> j <span>&lt;</span> <span>A</span><span>.</span>length<span>)</span> <span>{</span>
        <span>if</span> <span>(</span><span>A</span><span>[</span>k<span>]</span> <span>*</span> <span>A</span><span>[</span>k<span>]</span> <span>></span> <span>A</span><span>[</span>j<span>]</span> <span>*</span> <span>A</span><span>[</span>j<span>]</span><span>)</span> <span>{</span>
          target<span>[</span>count<span>]</span> <span>=</span> <span>A</span><span>[</span>j<span>]</span> <span>*</span> <span>A</span><span>[</span>j<span>]</span><span>;</span>
          count<span>++</span><span>;</span>
          j<span>++</span><span>;</span>
        <span>}</span> <span>else</span> <span>if</span> <span>(</span><span>A</span><span>[</span>k<span>]</span> <span>*</span> <span>A</span><span>[</span>k<span>]</span> <span>&lt;</span> <span>A</span><span>[</span>j<span>]</span> <span>*</span> <span>A</span><span>[</span>j<span>]</span><span>)</span> <span>{</span>
          target<span>[</span>count<span>]</span> <span>=</span> <span>A</span><span>[</span>k<span>]</span> <span>*</span> <span>A</span><span>[</span>k<span>]</span><span>;</span>
          count<span>++</span><span>;</span>
          k<span>--</span><span>;</span>
        <span>}</span> <span>else</span> <span>{</span>
          target<span>[</span>count<span>]</span> <span>=</span> target<span>[</span>count <span>+</span> <span>1</span><span>]</span> <span>=</span> <span>A</span><span>[</span>k<span>]</span> <span>*</span> <span>A</span><span>[</span>k<span>]</span><span>;</span>
          count <span>+=</span> <span>2</span><span>;</span>
          k<span>--</span><span>;</span>
          j<span>++</span><span>;</span>
        <span>}</span>
      <span>}</span>

      <span>if</span> <span>(</span>count <span>&lt;=</span> <span>A</span><span>.</span>length <span>-</span> <span>1</span><span>)</span> <span>{</span>
        <span>while</span> <span>(</span>k <span>>=</span> <span>0</span><span>)</span> <span>{</span>
          target<span>[</span>count<span>]</span> <span>=</span> <span>A</span><span>[</span>k<span>]</span> <span>*</span> <span>A</span><span>[</span>k<span>]</span><span>;</span>
          count<span>++</span><span>;</span>
          k<span>--</span><span>;</span>
        <span>}</span>
        <span>while</span> <span>(</span>j <span>&lt;</span> <span>A</span><span>.</span>length<span>)</span> <span>{</span>
          target<span>[</span>count<span>]</span> <span>=</span> <span>A</span><span>[</span>j<span>]</span> <span>*</span> <span>A</span><span>[</span>j<span>]</span><span>;</span>
          count<span>++</span><span>;</span>
          j<span>++</span><span>;</span>
        <span>}</span>

        <span>return</span> target<span>;</span>
      <span>}</span>

      <span>return</span> target<span>;</span>
    <span>}</span>
  <span>}</span>
<span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br><span>65</span><br><span>66</span><br><span>67</span><br><span>68</span><br><span>69</span><br></div></div>]]></content>
    <author>
      <name>977. Squares of a Sorted Array</name>
    </author>
    <category term="lizncu"/>
    <contributor>
      <name>977. Squares of a Sorted Array</name>
    </contributor>
    <rights>Copyright by 977. Squares of a Sorted Array</rights>
  </entry>
  <entry>
    <title type="html">977. Squares of a Sorted Array</title>
    <id>https://leetcode.innenu.com/977-Squares-of-a-Sorted-Array/</id>
    <link href="https://leetcode.innenu.com/977-Squares-of-a-Sorted-Array/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_977-squares-of-a-sorted-array"> <a href="https://leetcode.com/problems/squares-of-a-sorted-array/" target="_blank" rel="noopener noreferrer">977. Squares of a Sorted Array</a></h1>
<p>Given an array of integers <code>A</code> sorted in non-decreasing order, return an array of the squares of each number, also in sorted non-decreasing order.</p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> [-4,-1,0,3,10]</p>
<p><strong>Output:</strong> [0,1,9,16,100]</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> [-7,-3,2,3,11]</p>
<p><strong>Output:</strong> [4,9,9,49,121]</p>
<p><strong>Note:</strong></p>
<ol>
<li><code>1 &lt;= A.length &lt;= 10000</code></li>
<li><code>-10000 &lt;= A[i] &lt;= 10000</code></li>
<li><code>A</code> is sorted in non-decreasing order.</li>
</ol>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">题目列表</title>
    <id>https://leetcode.innenu.com/</id>
    <link href="https://leetcode.innenu.com/"/>
    <updated>2021-02-17T16:18:42.712Z</updated>
    <content type="html"><![CDATA[<ul>
<li>
<p><a href="./1-two-sum/">1. Two Sum</a></p>
</li>
<li>
<p><a href="./2-add-two-numbers/">2. Add Two Numbers</a></p>
</li>
<li>
<p><a href="./4-median-of-two-sorted-arrays/">4. Median of Two Sorted Arrays</a></p>
</li>
<li>
<p><a href="./7-reverse-integer/">7. Reverse Integer</a></p>
</li>
<li>
<p><a href="./9-palindrome-number/">9. Palindrome Number</a></p>
</li>
<li>
<p><a href="./12-integer-to-roman/">12. Integer to Roman</a></p>
</li>
<li>
<p><a href="./13-roman-to-integer/">13. Roman to Integer</a></p>
</li>
<li>
<p><a href="./15-3sum/">15. 3sum</a></p>
</li>
<li>
<p><a href="./43-multiply-strings/">43. Multiply Strings</a></p>
</li>
<li>
<p><a href="./53-maximum-subarray/">53. Maximum Subarray</a></p>
</li>
<li>
<p><a href="./58-uo-xuan-zhuan-zi-fu-chuan-lcof/">58. Uo Xuan Zhuan Zi Fu Chuan Lcof</a></p>
</li>
<li>
<p><a href="./66-plus-one/">66. Plus One</a></p>
</li>
<li>
<p><a href="./67-add-binary/">67. Add Binary</a></p>
</li>
<li>
<p><a href="./70-climbing-stairs/">70. Climbing Stairs</a></p>
</li>
<li>
<p><a href="./88-merge-sorted-array/">88. Merge Sorted Array</a></p>
</li>
<li>
<p><a href="./104-Maximum-Depth-Of-Binary-Tree/">104. Maximum Depth Of Binary Tree</a></p>
</li>
<li>
<p><a href="./122-best-time-to-buy-and-sell-stock-ii/">122. Best Time to Buy And Sell Stock Ii</a></p>
</li>
<li>
<p><a href="./136-Single-Number/">136. Single Number</a></p>
</li>
<li>
<p><a href="./167-two-sum-ii-input-array-is-sorted/">167. Two Sum Ii Input Array Is Sorted</a></p>
</li>
<li>
<p><a href="./198-house-robbe/">198. House Robbe</a></p>
</li>
<li>
<p><a href="./226-invert-binary-tree/">226. Invert Binary Tree</a></p>
</li>
<li>
<p><a href="./237-Delete-Node-in-a-Linked-List/">237. Delete Node in a Linked List</a></p>
</li>
<li>
<p><a href="./242-valid-anagram/">242. Valid Anagram</a></p>
</li>
<li>
<p><a href="./268-Missing-Number/">268. Missing Number</a></p>
</li>
<li>
<p><a href="./283-Move-Zeroes/">283. Move Zeroes</a></p>
</li>
<li>
<p><a href="./292-Nim-Game/">292. Nim Game</a></p>
</li>
<li>
<p><a href="./344-Reverse-String/">344. Reverse String</a></p>
</li>
<li>
<p><a href="./371-sum-of-two-integers/">371. Sum of Two Integers</a></p>
</li>
<li>
<p><a href="./387-First-Unique-Character-in-a-String/">387. First Unique Character in a String</a></p>
</li>
<li>
<p><a href="./389-find-the-difference/">389. Find the Difference</a></p>
</li>
<li>
<p><a href="./415-add-strings/">415. Add Strings</a></p>
</li>
<li>
<p><a href="./455-assign-cookies/">455. Assign Cookies</a></p>
</li>
<li>
<p><a href="./461-hamming-distance/">461. Hamming Distance</a></p>
</li>
<li>
<p><a href="./771-Jewels-and-Stones/">771. Jewels And Stones</a></p>
</li>
<li>
<p><a href="./860-Lemonade-Change/">860. Lemonade Change</a></p>
</li>
<li>
<p><a href="./867-Transpose-Matrix/">867. Transpose Matrix</a></p>
</li>
<li>
<p><a href="./905-Sort-Array-By-Parity/">905. Sort Array By Parity</a></p>
</li>
<li>
<p><a href="./922-Sort-Array-By-Parity-II/">922. Sort Array By Parity Ii</a></p>
</li>
<li>
<p><a href="./977-Squares-of-a-Sorted-Array/">977. Squares of a Sorted Array</a></p>
</li>
<li>
<p><a href="./1025-divisor-game/">1025. Divisor Game</a></p>
</li>
<li>
<p><a href="./1122-Relative-Sort-Array/">1122. Relative Sort Array</a></p>
</li>
<li>
<p><a href="./1221-Split-a-String-in-Balanced-Strings/">1221. Split a String in Balanced Strings</a></p>
</li>
<li>
<p><a href="./1281-Subtract-the-Product-and-Sum-of-Digits-of-an-Integer/">1281. Subtract the Product And Sum of Digits of An Integer</a></p>
</li>
<li>
<p><a href="./1295-Find-Numbers-with-Even-Number-of-Digits/">1295. Find Numbers with Even Number of Digits</a></p>
</li>
<li>
<p><a href="./1299-Replace-Elements-with-Greatest-Element-on-Right-Side/">1299. Replace Elements with Greatest Element on Right Side</a></p>
</li>
<li>
<p><a href="./1313-Decompress-Run-Length-Encoded-List/">1313. Decompress Run Length Encoded List</a></p>
</li>
<li>
<p><a href="./1317-Convert-Integer-to-the-Sum-of-Two-No-Zero-Integers/">1317. Convert Integer to the Sum of Two No Zero Integers</a></p>
</li>
<li>
<p><a href="./1323-Maximum-69-Number/">1323. Maximum 69 Number</a></p>
</li>
<li>
<p><a href="./1342-Number-of-Steps-to-Reduce-a-Number-to-Zero/">1342. Number of Steps to Reduce a Number to Zero</a></p>
</li>
<li>
<p><a href="./1365-How-Many-Numbers-Are-Smaller-Than-the-Current-Number/">1365. How Many Numbers Are Smaller Than the Current Number</a></p>
</li>
<li>
<p><a href="./1389-Create-Target-Array-in-the-Given-Order/">1389. Create Target Array in the Given Order</a></p>
</li>
<li>
<p><a href="./1431-Kids-With-the-Greatest-Number-of-Candies/">1431. Kids With the Greatest Number of Candies</a></p>
</li>
<li>
<p><a href="./1450-Number-of-Students-Doing-Homework-at-a-Given-Time/">1450. Number of Students Doing Homework at a Given Time</a></p>
</li>
<li>
<p><a href="./1470-Shuffle-the-Array/">1470. Shuffle the Array</a></p>
</li>
<li>
<p><a href="./1480-Running-Sum-of-1d-Array/">1480. Running Sum of 1d Array</a></p>
</li>
<li>
<p><a href="./1486-XOR-Operation-in-an-Array/">1486. Xor Operation in An Array</a></p>
</li>
<li>
<p><a href="./1491-average-salary-excluding-the-minimum-and-maximum-salary/">1491. Average Salary Excluding the Minimum And Maximum Salary</a></p>
</li>
<li>
<p><a href="./1502-can-make-arithmetic-progression-from-sequence/">1502. Can Make Arithmetic Progression From Sequence</a></p>
</li>
<li>
<p><a href="./1512-Number-of-Good-Pairs/">1512. Number of Good Pairs</a></p>
</li>
<li>
<p><a href="./1518-Wate-Bottles/">1518. Wate Bottles</a></p>
</li>
<li>
<p><a href="./1528-Shuffle-String/">1528. Shuffle String</a></p>
</li>
<li>
<p><a href="./1572-Matrix-Diagonal-Sum/">1572. Matrix Diagonal Sum</a></p>
</li>
<li>
<p><a href="./1603-Design-Parking-System/">1603. Design Parking System</a></p>
</li>
</ul>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
  <entry>
    <title type="html">lmy</title>
    <id>https://leetcode.innenu.com/1518-Wate-Bottles/lmy/</id>
    <link href="https://leetcode.innenu.com/1518-Wate-Bottles/lmy/"/>
    <updated>2021-02-17T16:18:42.713Z</updated>
    <content type="html"><![CDATA[<h2 id="c"> C++</h2>
<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>
 <span>public</span><span>:</span>
  <span>int</span> <span>numWaterBottles</span><span>(</span><span>int</span> numBottles<span>,</span> <span>int</span> numExchange<span>)</span> <span>{</span>
    <span>int</span> sum <span>=</span> <span>0</span><span>;</span>
    <span>int</span> emptybottles <span>=</span> numBottles<span>;</span>
    <span>while</span> <span>(</span>numBottles <span>!=</span> <span>0</span><span>)</span> <span>{</span>
      sum <span>+=</span> numBottles<span>;</span>
      numBottles <span>=</span> emptybottles <span>/</span> numExchange<span>;</span>
      emptybottles <span>=</span> emptybottles <span>-</span> numBottles <span>*</span> numExchange <span>+</span> numBottles<span>;</span>
    <span>}</span>
    <span>return</span> sum<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div>]]></content>
    <author>
      <name>1518. Wate Bottles</name>
    </author>
    <category term="lmy"/>
    <contributor>
      <name>1518. Wate Bottles</name>
    </contributor>
    <rights>Copyright by 1518. Wate Bottles</rights>
  </entry>
  <entry>
    <title type="html">867. Transpose Matrix</title>
    <id>https://leetcode.innenu.com/867-Transpose-Matrix/</id>
    <link href="https://leetcode.innenu.com/867-Transpose-Matrix/"/>
    <updated>2020-11-30T08:39:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="_867-transpose-matrix"> <a href="https://leetcode.com/problems/transpose-matrix/" target="_blank" rel="noopener noreferrer">867. Transpose Matrix</a></h1>
<p>Given a matrix <code>A</code>, return the transpose of <code>A</code>.</p>
<p>The transpose of a matrix is the matrix flipped over it's main diagonal, switching the row and column indices of the matrix.</p>
<p><img src="https://assets.leetcode.com/uploads/2019/10/20/hint_transpose.png" alt="LeetCode Image"></p>
<p><strong>Example 1:</strong></p>
<p><strong>Input:</strong> [[1,2,3],[4,5,6],[7,8,9]]</p>
<p><strong>Output:</strong> [[1,4,7],[2,5,8],[3,6,9]]</p>
<p><strong>Example 2:</strong></p>
<p><strong>Input:</strong> [[1,2,3],[4,5,6]]</p>
<p><strong>Output:</strong> [[1,4],[2,5],[3,6]]</p>
<p><strong>Note:</strong></p>
<ol>
<li><code>1 &lt;= A.length &lt;= 1000</code></li>
<li><code>1 &lt;= A[0].length &lt;= 1000</code></li>
</ol>
]]></content>
    <author>
      <name>LeetCode</name>
    </author>
    <contributor>
      <name>LeetCode</name>
    </contributor>
    <rights>Copyright by LeetCode</rights>
  </entry>
</feed>