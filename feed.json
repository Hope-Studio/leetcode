{
  "version": "https://jsonfeed.org/version/1.1",
  "title": "LeetCode",
  "home_page_url": "https://leetcode.innenu.com/",
  "feed_url": "https://leetcode.innenu.com/feed.json",
  "description": "LeetCode 练习",
  "author": {
    "name": "LeetCode"
  },
  "items": [
    {
      "title": "C++",
      "url": "https://leetcode.innenu.com/1-two-sum/C++/",
      "id": "https://leetcode.innenu.com/1-two-sum/C++/",
      "content_html": "<h2 id=\"mister-hope\"> Mister-Hope</h2>\n<div><pre><code><span>/*\n * Runtime: 188 ms, faster than 36.71% of C++ online submissions for Two Sum.\n *\n * Memory Usage: 52.9 MB, less than 13.71% of C++ online submissions for Two\n * Sum.\n */</span>\n\n<span><span>#</span><span>include</span> <span>&lt;unordered_map></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  vector<span>&lt;</span><span>int</span><span>></span> <span>twoSum</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums<span>,</span> <span>int</span> target<span>)</span> <span>{</span>\n    unordered_map<span>&lt;</span><span>int</span><span>,</span> <span>int</span><span>></span> prevMap<span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>int</span> j <span>=</span> target <span>-</span> nums<span>[</span>i<span>]</span><span>;</span>\n\n      <span>if</span> <span>(</span>prevMap<span>.</span><span>count</span><span>(</span>j<span>)</span><span>)</span> <span>return</span> <span>{</span>prevMap<span>[</span>j<span>]</span><span>,</span> i<span>}</span><span>;</span>\n      prevMap<span>[</span>nums<span>[</span>i<span>]</span><span>]</span> <span>=</span> i<span>;</span>\n    <span>}</span>\n\n    <span>return</span> <span>{</span><span>}</span><span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br></div></div><h2 id=\"virgil\"> Virgil</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>\n<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  vector<span>&lt;</span><span>int</span><span>></span> <span>twoSum</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums<span>,</span> <span>int</span> target<span>)</span> <span>{</span>\n    <span>int</span> n <span>=</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> n <span>-</span> <span>1</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>for</span> <span>(</span><span>int</span> j <span>=</span> i <span>+</span> <span>1</span><span>;</span> j <span>&lt;</span> n<span>;</span> j<span>++</span><span>)</span> <span>{</span>\n        <span>if</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>+</span> nums<span>[</span>j<span>]</span> <span>==</span> target<span>)</span> <span>{</span>\n          <span>return</span> <span>{</span>i<span>,</span> j<span>}</span><span>;</span>\n        <span>}</span>\n      <span>}</span>\n    <span>}</span>\n    <span>return</span> <span>{</span><span>}</span><span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div><h2 id=\"sqm\"> sqm</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  vector<span>&lt;</span><span>int</span><span>></span> <span>twoSum</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums<span>,</span> <span>int</span> target<span>)</span> <span>{</span>\n    <span>int</span> i<span>,</span> j<span>;</span>\n    <span>for</span> <span>(</span>i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>for</span> <span>(</span>j <span>=</span> i <span>+</span> <span>1</span><span>;</span> j <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> j<span>++</span><span>)</span> <span>{</span>\n        <span>if</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>+</span> nums<span>[</span>j<span>]</span> <span>==</span> target<span>)</span> <span>return</span> <span>{</span>i<span>,</span> j<span>}</span><span>;</span>\n      <span>}</span>\n    <span>}</span>\n    <span>return</span> <span>{</span>i<span>,</span> j<span>}</span><span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.664Z",
      "authors": [
        {
          "name": "1. Two Sum"
        }
      ],
      "tags": [
        "C++"
      ]
    },
    {
      "title": "Java",
      "url": "https://leetcode.innenu.com/1-two-sum/Java/",
      "id": "https://leetcode.innenu.com/1-two-sum/Java/",
      "content_html": "<h2 id=\"mister-hope\"> Mister-Hope</h2>\n<div><pre><code><span>/*\n * Runtime: 10 ms, faster than 41.97% of Java online submissions for Two Sum.\n *\n * Memory Usage: 56.5 MB, less than 6.02% of Java online submissions for Two Sum.\n */</span>\n\n<span>import</span> <span>java<span>.</span>util<span>.</span></span><span>HashMap</span><span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>twoSum</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>,</span> <span>int</span> target<span>)</span> <span>{</span>\n    <span>HashMap</span><span><span>&lt;</span><span>Integer</span><span>,</span> <span>Integer</span><span>></span></span> map <span>=</span> <span>new</span> <span>HashMap</span><span><span>&lt;</span><span>Integer</span><span>,</span> <span>Integer</span><span>></span></span><span>(</span><span>)</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>int</span> j <span>=</span> target <span>-</span> nums<span>[</span>i<span>]</span><span>;</span>\n\n      <span>if</span> <span>(</span>map<span>.</span><span>containsKey</span><span>(</span>j<span>)</span><span>)</span>\n        <span>return</span> <span>new</span> <span>int</span><span>[</span><span>]</span> <span>{</span>map<span>.</span><span>get</span><span>(</span>j<span>)</span><span>,</span> i<span>}</span><span>;</span>\n\n      map<span>.</span><span>put</span><span>(</span>nums<span>[</span>i<span>]</span><span>,</span> i<span>)</span><span>;</span>\n    <span>}</span>\n\n    <span>throw</span> <span>new</span> <span>IllegalArgumentException</span><span>(</span><span>\"No solution\"</span><span>)</span><span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br></div></div><h2 id=\"lizncu\"> lizncu</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>twoSum</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>,</span> <span>int</span> target<span>)</span> <span>{</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>for</span> <span>(</span><span>int</span> j <span>=</span> i <span>+</span> <span>1</span><span>;</span> j <span>&lt;</span> nums<span>.</span>length<span>;</span> j<span>++</span><span>)</span> <span>{</span>\n        <span>if</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>+</span> nums<span>[</span>j<span>]</span> <span>==</span> target<span>)</span> <span>{</span>\n          <span>return</span> <span>new</span> <span>int</span><span>[</span><span>]</span> <span>{</span>i<span>,</span> j<span>}</span><span>;</span>\n        <span>}</span>\n      <span>}</span>\n    <span>}</span>\n\n    <span>throw</span> <span>new</span> <span>IllegalArgumentException</span><span>(</span><span>\"No two sum solution\"</span><span>)</span><span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div><h2 id=\"lmy\"> lmy</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>twoSum</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>,</span> <span>int</span> target<span>)</span> <span>{</span>\n    <span>int</span> n <span>=</span> nums<span>.</span>length<span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> n<span>;</span> <span>++</span>i<span>)</span> <span>{</span>\n      <span>for</span> <span>(</span><span>int</span> j <span>=</span> i <span>+</span> <span>1</span><span>;</span> j <span>&lt;</span> n<span>;</span> <span>++</span>j<span>)</span> <span>{</span>\n        <span>if</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>+</span> nums<span>[</span>j<span>]</span> <span>==</span> target<span>)</span> <span>{</span>\n          <span>return</span> <span>new</span> <span>int</span><span>[</span><span>]</span> <span>{</span>i<span>,</span> j<span>}</span><span>;</span>\n        <span>}</span>\n      <span>}</span>\n    <span>}</span>\n    <span>return</span> <span>new</span> <span>int</span><span>[</span><span>0</span><span>]</span><span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.666Z",
      "authors": [
        {
          "name": "1. Two Sum"
        }
      ],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "JavaScript",
      "url": "https://leetcode.innenu.com/1-two-sum/JavaScript/",
      "id": "https://leetcode.innenu.com/1-two-sum/JavaScript/",
      "content_html": "<h2 id=\"mister-hope\"> Mister-Hope</h2>\n<div><pre><code><span>/*\n * Runtime: 112 ms, faster than 48.98% of JavaScript online submissions for Two Sum.\n *\n * Memory Usage: 48.3 MB, less than 5.73% of JavaScript online submissions for Two Sum.\n */</span>\n\n<span>const</span> <span>twoSum</span> <span>=</span> <span>(</span><span>nums<span>,</span> target</span><span>)</span> <span>=></span> <span>{</span>\n  <span>const</span> arr <span>=</span> <span>[</span><span>]</span><span>;</span>\n\n  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n    <span>let</span> j <span>=</span> arr<span>[</span>target <span>-</span> nums<span>[</span>i<span>]</span><span>]</span><span>;</span>\n    <span>if</span> <span>(</span>j <span>!==</span> <span>undefined</span><span>)</span> <span>return</span> <span>[</span>j<span>,</span> i<span>]</span><span>;</span>\n    arr<span>[</span>nums<span>[</span>i<span>]</span><span>]</span> <span>=</span> i<span>;</span>\n  <span>}</span>\n\n  <span>throw</span> <span>new</span> <span>Error</span><span>(</span><span>\"No solution\"</span><span>)</span><span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.666Z",
      "authors": [
        {
          "name": "1. Two Sum"
        }
      ],
      "tags": [
        "JavaScript"
      ]
    },
    {
      "title": "Mister-Hope",
      "url": "https://leetcode.innenu.com/1-two-sum/Mister-Hope/",
      "id": "https://leetcode.innenu.com/1-two-sum/Mister-Hope/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span>/*\n * Runtime: 188 ms, faster than 36.71% of C++ online submissions for Two Sum.\n *\n * Memory Usage: 52.9 MB, less than 13.71% of C++ online submissions for Two\n * Sum.\n */</span>\n\n<span><span>#</span><span>include</span> <span>&lt;unordered_map></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  vector<span>&lt;</span><span>int</span><span>></span> <span>twoSum</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums<span>,</span> <span>int</span> target<span>)</span> <span>{</span>\n    unordered_map<span>&lt;</span><span>int</span><span>,</span> <span>int</span><span>></span> prevMap<span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>int</span> j <span>=</span> target <span>-</span> nums<span>[</span>i<span>]</span><span>;</span>\n\n      <span>if</span> <span>(</span>prevMap<span>.</span><span>count</span><span>(</span>j<span>)</span><span>)</span> <span>return</span> <span>{</span>prevMap<span>[</span>j<span>]</span><span>,</span> i<span>}</span><span>;</span>\n      prevMap<span>[</span>nums<span>[</span>i<span>]</span><span>]</span> <span>=</span> i<span>;</span>\n    <span>}</span>\n\n    <span>return</span> <span>{</span><span>}</span><span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br></div></div><h2 id=\"java\"> Java</h2>\n<div><pre><code><span>/*\n * Runtime: 10 ms, faster than 41.97% of Java online submissions for Two Sum.\n *\n * Memory Usage: 56.5 MB, less than 6.02% of Java online submissions for Two Sum.\n */</span>\n\n<span>import</span> <span>java<span>.</span>util<span>.</span></span><span>HashMap</span><span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>twoSum</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>,</span> <span>int</span> target<span>)</span> <span>{</span>\n    <span>HashMap</span><span><span>&lt;</span><span>Integer</span><span>,</span> <span>Integer</span><span>></span></span> map <span>=</span> <span>new</span> <span>HashMap</span><span><span>&lt;</span><span>Integer</span><span>,</span> <span>Integer</span><span>></span></span><span>(</span><span>)</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>int</span> j <span>=</span> target <span>-</span> nums<span>[</span>i<span>]</span><span>;</span>\n\n      <span>if</span> <span>(</span>map<span>.</span><span>containsKey</span><span>(</span>j<span>)</span><span>)</span>\n        <span>return</span> <span>new</span> <span>int</span><span>[</span><span>]</span> <span>{</span>map<span>.</span><span>get</span><span>(</span>j<span>)</span><span>,</span> i<span>}</span><span>;</span>\n\n      map<span>.</span><span>put</span><span>(</span>nums<span>[</span>i<span>]</span><span>,</span> i<span>)</span><span>;</span>\n    <span>}</span>\n\n    <span>throw</span> <span>new</span> <span>IllegalArgumentException</span><span>(</span><span>\"No solution\"</span><span>)</span><span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br></div></div><h2 id=\"javascript\"> JavaScript</h2>\n<div><pre><code><span>/*\n * Runtime: 112 ms, faster than 48.98% of JavaScript online submissions for Two Sum.\n *\n * Memory Usage: 48.3 MB, less than 5.73% of JavaScript online submissions for Two Sum.\n */</span>\n\n<span>const</span> <span>twoSum</span> <span>=</span> <span>(</span><span>nums<span>,</span> target</span><span>)</span> <span>=></span> <span>{</span>\n  <span>const</span> arr <span>=</span> <span>[</span><span>]</span><span>;</span>\n\n  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n    <span>let</span> j <span>=</span> arr<span>[</span>target <span>-</span> nums<span>[</span>i<span>]</span><span>]</span><span>;</span>\n    <span>if</span> <span>(</span>j <span>!==</span> <span>undefined</span><span>)</span> <span>return</span> <span>[</span>j<span>,</span> i<span>]</span><span>;</span>\n    arr<span>[</span>nums<span>[</span>i<span>]</span><span>]</span> <span>=</span> i<span>;</span>\n  <span>}</span>\n\n  <span>throw</span> <span>new</span> <span>Error</span><span>(</span><span>\"No solution\"</span><span>)</span><span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div><h2 id=\"python3\"> Python3</h2>\n<div><pre><code><span># Runtime: 476 ms, faster than 32.13% of Python3 online submissions for Two Sum.</span>\n<span>#</span>\n<span># Memory Usage: 27.9 MB, less than 17.63% of Python3 online submissions for Two Sum.</span>\n\n<span>class</span> <span>Solution</span><span>:</span>\n  <span>def</span> <span>twoSum</span><span>(</span>self<span>,</span> nums<span>:</span> List<span>[</span><span>int</span><span>]</span><span>,</span> target<span>:</span> <span>int</span><span>)</span> <span>-</span><span>></span> List<span>[</span><span>int</span><span>]</span><span>:</span>\n    prevMap <span>=</span> <span>{</span><span>}</span>\n    \n    <span>for</span> i<span>,</span> v <span>in</span> <span>enumerate</span><span>(</span>nums<span>)</span><span>:</span>\n      j <span>=</span> target <span>-</span> v\n      <span>if</span> j <span>in</span> prevMap<span>:</span>\n        <span>return</span> <span>[</span>prevMap<span>[</span>j<span>]</span><span>,</span> i<span>]</span>\n      prevMap<span>[</span>v<span>]</span> <span>=</span> i\n    <span>return</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div><h2 id=\"typescript\"> TypeScript</h2>\n<div><pre><code><span>/*\n * Runtime: 124 ms, faster than 50.73% of TypeScript online submissions for Two Sum.\n *\n * Memory Usage: 48.7 MB, less than 5.74% of TypeScript online submissions for Two Sum.\n */</span>\n\n<span>const</span> twoSum <span>=</span> <span>(</span>nums<span>:</span> <span>number</span><span>[</span><span>]</span><span>,</span> target<span>:</span> <span>number</span><span>)</span><span>:</span> <span>number</span><span>[</span><span>]</span> <span>=></span> <span>{</span>\n  <span>const</span> arr <span>=</span> <span>[</span><span>]</span><span>;</span>\n\n  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n    <span>let</span> j <span>=</span> arr<span>[</span>target <span>-</span> nums<span>[</span>i<span>]</span><span>]</span><span>;</span>\n    <span>if</span> <span>(</span>j <span>!==</span> <span>undefined</span><span>)</span> <span>return</span> <span>[</span>j<span>,</span> i<span>]</span><span>;</span>\n    arr<span>[</span>nums<span>[</span>i<span>]</span><span>]</span> <span>=</span> i<span>;</span>\n  <span>}</span>\n\n  <span>throw</span> <span>new</span> <span>Error</span><span>(</span><span>\"No solution\"</span><span>)</span><span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.668Z",
      "authors": [
        {
          "name": "1. Two Sum"
        }
      ],
      "tags": [
        "Mister-Hope"
      ]
    },
    {
      "title": "Python3",
      "url": "https://leetcode.innenu.com/1-two-sum/Python3/",
      "id": "https://leetcode.innenu.com/1-two-sum/Python3/",
      "content_html": "<h2 id=\"mister-hope\"> Mister-Hope</h2>\n<div><pre><code><span># Runtime: 476 ms, faster than 32.13% of Python3 online submissions for Two Sum.</span>\n<span>#</span>\n<span># Memory Usage: 27.9 MB, less than 17.63% of Python3 online submissions for Two Sum.</span>\n\n<span>class</span> <span>Solution</span><span>:</span>\n  <span>def</span> <span>twoSum</span><span>(</span>self<span>,</span> nums<span>:</span> List<span>[</span><span>int</span><span>]</span><span>,</span> target<span>:</span> <span>int</span><span>)</span> <span>-</span><span>></span> List<span>[</span><span>int</span><span>]</span><span>:</span>\n    prevMap <span>=</span> <span>{</span><span>}</span>\n    \n    <span>for</span> i<span>,</span> v <span>in</span> <span>enumerate</span><span>(</span>nums<span>)</span><span>:</span>\n      j <span>=</span> target <span>-</span> v\n      <span>if</span> j <span>in</span> prevMap<span>:</span>\n        <span>return</span> <span>[</span>prevMap<span>[</span>j<span>]</span><span>,</span> i<span>]</span>\n      prevMap<span>[</span>v<span>]</span> <span>=</span> i\n    <span>return</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.668Z",
      "authors": [
        {
          "name": "1. Two Sum"
        }
      ],
      "tags": [
        "Python3"
      ]
    },
    {
      "title": "TypeScript",
      "url": "https://leetcode.innenu.com/1-two-sum/TypeScript/",
      "id": "https://leetcode.innenu.com/1-two-sum/TypeScript/",
      "content_html": "<h2 id=\"mister-hope\"> Mister-Hope</h2>\n<div><pre><code><span>/*\n * Runtime: 124 ms, faster than 50.73% of TypeScript online submissions for Two Sum.\n *\n * Memory Usage: 48.7 MB, less than 5.74% of TypeScript online submissions for Two Sum.\n */</span>\n\n<span>const</span> twoSum <span>=</span> <span>(</span>nums<span>:</span> <span>number</span><span>[</span><span>]</span><span>,</span> target<span>:</span> <span>number</span><span>)</span><span>:</span> <span>number</span><span>[</span><span>]</span> <span>=></span> <span>{</span>\n  <span>const</span> arr <span>=</span> <span>[</span><span>]</span><span>;</span>\n\n  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n    <span>let</span> j <span>=</span> arr<span>[</span>target <span>-</span> nums<span>[</span>i<span>]</span><span>]</span><span>;</span>\n    <span>if</span> <span>(</span>j <span>!==</span> <span>undefined</span><span>)</span> <span>return</span> <span>[</span>j<span>,</span> i<span>]</span><span>;</span>\n    arr<span>[</span>nums<span>[</span>i<span>]</span><span>]</span> <span>=</span> i<span>;</span>\n  <span>}</span>\n\n  <span>throw</span> <span>new</span> <span>Error</span><span>(</span><span>\"No solution\"</span><span>)</span><span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.668Z",
      "authors": [
        {
          "name": "1. Two Sum"
        }
      ],
      "tags": [
        "TypeScript"
      ]
    },
    {
      "title": "Virgil",
      "url": "https://leetcode.innenu.com/1-two-sum/Virgil/",
      "id": "https://leetcode.innenu.com/1-two-sum/Virgil/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>\n<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  vector<span>&lt;</span><span>int</span><span>></span> <span>twoSum</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums<span>,</span> <span>int</span> target<span>)</span> <span>{</span>\n    <span>int</span> n <span>=</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> n <span>-</span> <span>1</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>for</span> <span>(</span><span>int</span> j <span>=</span> i <span>+</span> <span>1</span><span>;</span> j <span>&lt;</span> n<span>;</span> j<span>++</span><span>)</span> <span>{</span>\n        <span>if</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>+</span> nums<span>[</span>j<span>]</span> <span>==</span> target<span>)</span> <span>{</span>\n          <span>return</span> <span>{</span>i<span>,</span> j<span>}</span><span>;</span>\n        <span>}</span>\n      <span>}</span>\n    <span>}</span>\n    <span>return</span> <span>{</span><span>}</span><span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.670Z",
      "authors": [
        {
          "name": "1. Two Sum"
        }
      ],
      "tags": [
        "Virgil"
      ]
    },
    {
      "title": "lizncu",
      "url": "https://leetcode.innenu.com/1-two-sum/lizncu/",
      "id": "https://leetcode.innenu.com/1-two-sum/lizncu/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>twoSum</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>,</span> <span>int</span> target<span>)</span> <span>{</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>for</span> <span>(</span><span>int</span> j <span>=</span> i <span>+</span> <span>1</span><span>;</span> j <span>&lt;</span> nums<span>.</span>length<span>;</span> j<span>++</span><span>)</span> <span>{</span>\n        <span>if</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>+</span> nums<span>[</span>j<span>]</span> <span>==</span> target<span>)</span> <span>{</span>\n          <span>return</span> <span>new</span> <span>int</span><span>[</span><span>]</span> <span>{</span>i<span>,</span> j<span>}</span><span>;</span>\n        <span>}</span>\n      <span>}</span>\n    <span>}</span>\n\n    <span>throw</span> <span>new</span> <span>IllegalArgumentException</span><span>(</span><span>\"No two sum solution\"</span><span>)</span><span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.671Z",
      "authors": [
        {
          "name": "1. Two Sum"
        }
      ],
      "tags": [
        "lizncu"
      ]
    },
    {
      "title": "lmy",
      "url": "https://leetcode.innenu.com/1-two-sum/lmy/",
      "id": "https://leetcode.innenu.com/1-two-sum/lmy/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>twoSum</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>,</span> <span>int</span> target<span>)</span> <span>{</span>\n    <span>int</span> n <span>=</span> nums<span>.</span>length<span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> n<span>;</span> <span>++</span>i<span>)</span> <span>{</span>\n      <span>for</span> <span>(</span><span>int</span> j <span>=</span> i <span>+</span> <span>1</span><span>;</span> j <span>&lt;</span> n<span>;</span> <span>++</span>j<span>)</span> <span>{</span>\n        <span>if</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>+</span> nums<span>[</span>j<span>]</span> <span>==</span> target<span>)</span> <span>{</span>\n          <span>return</span> <span>new</span> <span>int</span><span>[</span><span>]</span> <span>{</span>i<span>,</span> j<span>}</span><span>;</span>\n        <span>}</span>\n      <span>}</span>\n    <span>}</span>\n    <span>return</span> <span>new</span> <span>int</span><span>[</span><span>0</span><span>]</span><span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.671Z",
      "authors": [
        {
          "name": "1. Two Sum"
        }
      ],
      "tags": [
        "lmy"
      ]
    },
    {
      "title": "1. Two Sum",
      "url": "https://leetcode.innenu.com/1-two-sum/",
      "id": "https://leetcode.innenu.com/1-two-sum/",
      "content_html": "<h1 id=\"_1-two-sum\"> <a href=\"https://leetcode.com/problems/two-sum/\" target=\"_blank\" rel=\"noopener noreferrer\">1. Two Sum</a></h1>\n<p>Given an array of integers <code>nums</code> and an integer <code>target</code>, return <em>indices of the two numbers such that they add up to <code>target</code></em>.</p>\n<p>You may assume that each input would have <strong><em>exactly</em> one solution</strong>, and you may not use the <em>same</em> element twice.</p>\n<p>You can return the answer in any order.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> nums = [2,7,11,15], target = 9</p>\n<p><strong>Output:</strong> [0,1]</p>\n<p><strong>Output:</strong> Because nums[0] + nums[1] == 9, we return [0, 1].</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> nums = [3,2,4], target = 6</p>\n<p><strong>Output:</strong> [1,2]</p>\n<p><strong>Example 3:</strong></p>\n<p><strong>Input:</strong> nums = [3,3], target = 6</p>\n<p><strong>Output:</strong> [0,1]</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>2 &lt;= nums.length &lt;= 105</code></li>\n<li><code>-109 &lt;= nums[i] &lt;= 109</code></li>\n<li><code>-109 &lt;= target &lt;= 109</code></li>\n<li><strong>Only one valid answer exists.</strong></li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "sqm",
      "url": "https://leetcode.innenu.com/1-two-sum/sqm/",
      "id": "https://leetcode.innenu.com/1-two-sum/sqm/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  vector<span>&lt;</span><span>int</span><span>></span> <span>twoSum</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums<span>,</span> <span>int</span> target<span>)</span> <span>{</span>\n    <span>int</span> i<span>,</span> j<span>;</span>\n    <span>for</span> <span>(</span>i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>for</span> <span>(</span>j <span>=</span> i <span>+</span> <span>1</span><span>;</span> j <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> j<span>++</span><span>)</span> <span>{</span>\n        <span>if</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>+</span> nums<span>[</span>j<span>]</span> <span>==</span> target<span>)</span> <span>return</span> <span>{</span>i<span>,</span> j<span>}</span><span>;</span>\n      <span>}</span>\n    <span>}</span>\n    <span>return</span> <span>{</span>i<span>,</span> j<span>}</span><span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.672Z",
      "authors": [
        {
          "name": "1. Two Sum"
        }
      ],
      "tags": [
        "sqm"
      ]
    },
    {
      "title": "C++",
      "url": "https://leetcode.innenu.com/1025-divisor-game/C++/",
      "id": "https://leetcode.innenu.com/1025-divisor-game/C++/",
      "content_html": "<h2 id=\"virgil\"> Virgil</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>\n<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>bool</span> <span>divisorGame</span><span>(</span><span>int</span> N<span>)</span> <span>{</span>\n    <span>if</span> <span>(</span>N <span>%</span> <span>2</span> <span>==</span> <span>0</span><span>)</span>\n      <span>return</span> <span>true</span><span>;</span>\n    <span>else</span>\n      <span>return</span> <span>false</span><span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.672Z",
      "authors": [
        {
          "name": "1025. Divisor Game"
        }
      ],
      "tags": [
        "C++"
      ]
    },
    {
      "title": "Virgil",
      "url": "https://leetcode.innenu.com/1025-divisor-game/Virgil/",
      "id": "https://leetcode.innenu.com/1025-divisor-game/Virgil/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>\n<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>bool</span> <span>divisorGame</span><span>(</span><span>int</span> N<span>)</span> <span>{</span>\n    <span>if</span> <span>(</span>N <span>%</span> <span>2</span> <span>==</span> <span>0</span><span>)</span>\n      <span>return</span> <span>true</span><span>;</span>\n    <span>else</span>\n      <span>return</span> <span>false</span><span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.673Z",
      "authors": [
        {
          "name": "1025. Divisor Game"
        }
      ],
      "tags": [
        "Virgil"
      ]
    },
    {
      "title": "1025. Divisor Game",
      "url": "https://leetcode.innenu.com/1025-divisor-game/",
      "id": "https://leetcode.innenu.com/1025-divisor-game/",
      "content_html": "<h1 id=\"_1025-divisor-game\"> <a href=\"https://leetcode.com/problems/divisor-game/\" target=\"_blank\" rel=\"noopener noreferrer\">1025. Divisor Game</a></h1>\n<p>Alice and Bob take turns playing a game, with Alice starting first.</p>\n<p>Initially, there is a number <code>N</code> on the chalkboard. On each player's turn, that player makes a <em>move</em> consisting of:</p>\n<ul>\n<li>Choosing any <code>x</code> with <code>0 &lt; x &lt; N</code> and <code>N % x == 0</code>.</li>\n<li>Replacing the number <code>N</code> on the chalkboard with <code>N - x</code>.</li>\n</ul>\n<p>Also, if a player cannot make a move, they lose the game.</p>\n<p>Return <code>True</code> if and only if Alice wins the game, assuming both players play optimally.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> 2</p>\n<p><strong>Output:</strong> true</p>\n<p><strong>Explanation:</strong> Alice chooses 1, and Bob has no more moves.</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> 3</p>\n<p><strong>Output:</strong> false</p>\n<p><strong>Explanation:</strong> Alice chooses 1, Bob chooses 1, and Alice has no more moves.</p>\n<p><strong>Note:</strong></p>\n<ol>\n<li><code>1 &lt;= N &lt;= 1000</code></li>\n</ol>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "C++",
      "url": "https://leetcode.innenu.com/104-Maximum-Depth-Of-Binary-Tree/C++/",
      "id": "https://leetcode.innenu.com/104-Maximum-Depth-Of-Binary-Tree/C++/",
      "content_html": "<h2 id=\"sqm\"> sqm</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n<span>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>int</span> <span>maxDepth</span><span>(</span>TreeNode<span>*</span> root<span>)</span> <span>{</span>\n    <span>if</span> <span>(</span>root <span>==</span> <span>nullptr</span><span>)</span> <span>return</span> <span>0</span><span>;</span>\n    <span>return</span> <span>max</span><span>(</span><span>maxDepth</span><span>(</span>root<span>-></span>right<span>)</span><span>,</span> <span>maxDepth</span><span>(</span>root<span>-></span>left<span>)</span><span>)</span> <span>+</span> <span>1</span><span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.673Z",
      "authors": [
        {
          "name": "104. Maximum Depth Of Binary Tree"
        }
      ],
      "tags": [
        "C++"
      ]
    },
    {
      "title": "104. Maximum Depth of Binary Tree",
      "url": "https://leetcode.innenu.com/104-Maximum-Depth-Of-Binary-Tree/",
      "id": "https://leetcode.innenu.com/104-Maximum-Depth-Of-Binary-Tree/",
      "content_html": "<h1 id=\"_104-maximum-depth-of-binary-tree\"> <a href=\"https://leetcode.com/problems/maximum-depth-of-binary-tree/\" target=\"_blank\" rel=\"noopener noreferrer\">104. Maximum Depth of Binary Tree</a></h1>\n<p>Given a binary tree, find its maximum depth.</p>\n<p>The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.</p>\n<p><strong>Note:</strong> A leaf is a node with no children.</p>\n<p><strong>Example:</strong></p>\n<p>Given binary tree <code>[3,9,20,null,null,15,7]</code>,</p>\n<div><pre><code>    3\n   / \\\\\n  9  20\n    /  \\\\\n   15   7\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>return its depth = 3.</p>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "sqm",
      "url": "https://leetcode.innenu.com/104-Maximum-Depth-Of-Binary-Tree/sqm/",
      "id": "https://leetcode.innenu.com/104-Maximum-Depth-Of-Binary-Tree/sqm/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n<span>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>int</span> <span>maxDepth</span><span>(</span>TreeNode<span>*</span> root<span>)</span> <span>{</span>\n    <span>if</span> <span>(</span>root <span>==</span> <span>nullptr</span><span>)</span> <span>return</span> <span>0</span><span>;</span>\n    <span>return</span> <span>max</span><span>(</span><span>maxDepth</span><span>(</span>root<span>-></span>right<span>)</span><span>,</span> <span>maxDepth</span><span>(</span>root<span>-></span>left<span>)</span><span>)</span> <span>+</span> <span>1</span><span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.674Z",
      "authors": [
        {
          "name": "104. Maximum Depth Of Binary Tree"
        }
      ],
      "tags": [
        "sqm"
      ]
    },
    {
      "title": "C++",
      "url": "https://leetcode.innenu.com/1122-Relative-Sort-Array/C++/",
      "id": "https://leetcode.innenu.com/1122-Relative-Sort-Array/C++/",
      "content_html": "<h2 id=\"sqm\"> sqm</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>\n<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  vector<span>&lt;</span><span>int</span><span>></span> <span>relativeSortArray</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> arr1<span>,</span> vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> arr2<span>)</span> <span>{</span>\n    <span>int</span> tmp <span>=</span> <span>0</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> arr2<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>0</span><span>;</span> j <span>&lt;</span> arr1<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> j<span>++</span><span>)</span> <span>{</span>\n        <span>if</span> <span>(</span>arr1<span>[</span>j<span>]</span> <span>==</span> arr2<span>[</span>i<span>]</span><span>)</span> <span>{</span>\n          <span>swap</span><span>(</span>arr1<span>[</span>j<span>]</span><span>,</span> arr1<span>[</span>tmp<span>]</span><span>)</span><span>;</span>\n          tmp<span>++</span><span>;</span>\n        <span>}</span>\n      <span>}</span>\n    <span>}</span>\n    <span>sort</span><span>(</span>arr1<span>.</span><span>begin</span><span>(</span><span>)</span> <span>+</span> tmp<span>,</span> arr1<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>\n    <span>return</span> arr1<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.675Z",
      "authors": [
        {
          "name": "1122. Relative Sort Array"
        }
      ],
      "tags": [
        "C++"
      ]
    },
    {
      "title": "1122. Relative Sort Array",
      "url": "https://leetcode.innenu.com/1122-Relative-Sort-Array/",
      "id": "https://leetcode.innenu.com/1122-Relative-Sort-Array/",
      "content_html": "<h1 id=\"_1122-relative-sort-array\"> <a href=\"https://leetcode.com/problems/relative-sort-array/\" target=\"_blank\" rel=\"noopener noreferrer\">1122. Relative Sort Array</a></h1>\n<p>Given two arrays <code>arr1</code> and <code>arr2</code>, the elements of <code>arr2</code> are distinct, and all elements in <code>arr2</code> are also in <code>arr1</code>.</p>\n<p>Sort the elements of <code>arr1</code> such that the relative ordering of items in <code>arr1</code> are the same as in <code>arr2</code>. Elements that don't appear in <code>arr2</code> should be placed at the end of <code>arr1</code> in <strong>ascending</strong> order.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> arr1 = [2,3,1,3,2,4,6,7,9,2,19], arr2 = [2,1,4,3,9,6]</p>\n<p><strong>Output:</strong> [2,2,2,1,4,3,3,9,6,7,19]</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>1 &lt;= arr1.length, arr2.length &lt;= 1000</code></li>\n<li><code>0 &lt;= arr1[i], arr2[i] &lt;= 1000</code></li>\n<li>All the elements of <code>arr2</code> are <strong>distinct</strong>.</li>\n<li>Each <code>arr2[i]</code> is in <code>arr1</code>.</li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "sqm",
      "url": "https://leetcode.innenu.com/1122-Relative-Sort-Array/sqm/",
      "id": "https://leetcode.innenu.com/1122-Relative-Sort-Array/sqm/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>\n<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  vector<span>&lt;</span><span>int</span><span>></span> <span>relativeSortArray</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> arr1<span>,</span> vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> arr2<span>)</span> <span>{</span>\n    <span>int</span> tmp <span>=</span> <span>0</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> arr2<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>0</span><span>;</span> j <span>&lt;</span> arr1<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> j<span>++</span><span>)</span> <span>{</span>\n        <span>if</span> <span>(</span>arr1<span>[</span>j<span>]</span> <span>==</span> arr2<span>[</span>i<span>]</span><span>)</span> <span>{</span>\n          <span>swap</span><span>(</span>arr1<span>[</span>j<span>]</span><span>,</span> arr1<span>[</span>tmp<span>]</span><span>)</span><span>;</span>\n          tmp<span>++</span><span>;</span>\n        <span>}</span>\n      <span>}</span>\n    <span>}</span>\n    <span>sort</span><span>(</span>arr1<span>.</span><span>begin</span><span>(</span><span>)</span> <span>+</span> tmp<span>,</span> arr1<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>\n    <span>return</span> arr1<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.675Z",
      "authors": [
        {
          "name": "1122. Relative Sort Array"
        }
      ],
      "tags": [
        "sqm"
      ]
    },
    {
      "title": "C++",
      "url": "https://leetcode.innenu.com/12-integer-to-roman/C++/",
      "id": "https://leetcode.innenu.com/12-integer-to-roman/C++/",
      "content_html": "<h2 id=\"mister-hope\"> Mister-Hope</h2>\n<div><pre><code><span>/*\n * Runtime: 24 ms, faster than 22.26% of C++ online submissions for Integer to\n * Roman.\n *\n * Memory Usage: 12.6 MB, less than 11.00% of C++ online submissions for Integer\n * to Roman.\n */</span>\n\n<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  string <span>intToRoman</span><span>(</span><span>int</span> num<span>)</span> <span>{</span>\n    <span>if</span> <span>(</span>num <span>&lt;=</span> <span>0</span><span>)</span> <span>return</span> <span>\"\"</span><span>;</span>\n\n    vector<span>&lt;</span>string<span>></span> thousands<span>{</span><span>\"\"</span><span>,</span> <span>\"M\"</span><span>,</span> <span>\"MM\"</span><span>,</span> <span>\"MMM\"</span><span>}</span><span>;</span>\n    vector<span>&lt;</span>string<span>></span> hundreds<span>{</span><span>\"\"</span><span>,</span>  <span>\"C\"</span><span>,</span>  <span>\"CC\"</span><span>,</span>  <span>\"CCC\"</span><span>,</span>  <span>\"CD\"</span><span>,</span>\n                            <span>\"D\"</span><span>,</span> <span>\"DC\"</span><span>,</span> <span>\"DCC\"</span><span>,</span> <span>\"DCCC\"</span><span>,</span> <span>\"CM\"</span><span>}</span><span>;</span>\n    vector<span>&lt;</span>string<span>></span> tens<span>{</span><span>\"\"</span><span>,</span>  <span>\"X\"</span><span>,</span>  <span>\"XX\"</span><span>,</span>  <span>\"XXX\"</span><span>,</span>  <span>\"XL\"</span><span>,</span>\n                        <span>\"L\"</span><span>,</span> <span>\"LX\"</span><span>,</span> <span>\"LXX\"</span><span>,</span> <span>\"LXXX\"</span><span>,</span> <span>\"XC\"</span><span>}</span><span>;</span>\n    vector<span>&lt;</span>string<span>></span> units<span>{</span><span>\"\"</span><span>,</span>  <span>\"I\"</span><span>,</span>  <span>\"II\"</span><span>,</span>  <span>\"III\"</span><span>,</span>  <span>\"IV\"</span><span>,</span>\n                         <span>\"V\"</span><span>,</span> <span>\"VI\"</span><span>,</span> <span>\"VII\"</span><span>,</span> <span>\"VIII\"</span><span>,</span> <span>\"IX\"</span><span>}</span><span>;</span>\n\n    <span>return</span> thousands<span>[</span>num <span>/</span> <span>1000</span><span>]</span> <span>+</span> hundreds<span>[</span><span>(</span>num <span>%</span> <span>1000</span><span>)</span> <span>/</span> <span>100</span><span>]</span> <span>+</span>\n           tens<span>[</span><span>(</span>num <span>%</span> <span>100</span><span>)</span> <span>/</span> <span>10</span><span>]</span> <span>+</span> units<span>[</span>num <span>%</span> <span>10</span><span>]</span><span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br></div></div><h3 id=\"_1\"> 1</h3>\n<div><pre><code><span>/*\n * Runtime: 4 ms, faster than 93.51% of C++ online submissions for Integer to\n * Roman.\n *\n * Memory Usage: 9.2 MB, less than 11.00% of C++ online submissions for Integer\n * to Roman.\n */</span>\n\n<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  string <span>intToRoman</span><span>(</span><span>int</span> num<span>)</span> <span>{</span>\n    <span>if</span> <span>(</span>num <span>&lt;=</span> <span>0</span><span>)</span> <span>return</span> <span>\"\"</span><span>;</span>\n\n    vector<span>&lt;</span>string<span>></span> numerals<span>{</span>\n        <span>\"M\"</span><span>,</span> <span>\"CM\"</span><span>,</span> <span>\"D\"</span><span>,</span> <span>\"CD\"</span><span>,</span> <span>\"C\"</span><span>,</span> <span>\"XC\"</span><span>,</span> <span>\"L\"</span><span>,</span> <span>\"XL\"</span><span>,</span> <span>\"X\"</span><span>,</span> <span>\"IX\"</span><span>,</span> <span>\"V\"</span><span>,</span> <span>\"IV\"</span><span>,</span> <span>\"I\"</span><span>,</span>\n    <span>}</span><span>;</span>\n    vector<span>&lt;</span><span>int</span><span>></span> weights<span>{</span><span>1000</span><span>,</span> <span>900</span><span>,</span> <span>500</span><span>,</span> <span>400</span><span>,</span> <span>100</span><span>,</span> <span>90</span><span>,</span> <span>50</span><span>,</span> <span>40</span><span>,</span> <span>10</span><span>,</span> <span>9</span><span>,</span> <span>5</span><span>,</span> <span>4</span><span>,</span> <span>1</span><span>}</span><span>;</span>\n\n    string result <span>=</span> <span>\"\"</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> weights<span>.</span><span>size</span><span>(</span><span>)</span> <span>&amp;&amp;</span> num <span>!=</span> <span>0</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>1</span><span>;</span> j <span>&lt;=</span> num <span>/</span> weights<span>[</span>i<span>]</span><span>;</span> j<span>++</span><span>)</span> result <span>+=</span> numerals<span>[</span>i<span>]</span><span>;</span>\n\n      num <span>%=</span> weights<span>[</span>i<span>]</span><span>;</span>\n    <span>}</span>\n\n    <span>return</span> result<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.676Z",
      "authors": [
        {
          "name": "12. Integer to Roman"
        }
      ],
      "tags": [
        "C++"
      ]
    },
    {
      "title": "JavaScript",
      "url": "https://leetcode.innenu.com/12-integer-to-roman/JavaScript/",
      "id": "https://leetcode.innenu.com/12-integer-to-roman/JavaScript/",
      "content_html": "<h2 id=\"mister-hope\"> Mister-Hope</h2>\n<div><pre><code><span>/*\n * Runtime: 176 ms, faster than 33.68% of JavaScript online submissions for Integer to Roman.\n *\n * Memory Usage: 45.2 MB, less than 6.38% of JavaScript online submissions for Integer to Roman.\n */</span>\n\n<span>const</span> <span>intToRoman</span> <span>=</span> <span>(</span><span>num</span><span>)</span> <span>=></span> <span>{</span>\n  <span>const</span> numerals <span>=</span> <span>[</span>\n    <span>\"M\"</span><span>,</span>\n    <span>\"CM\"</span><span>,</span>\n    <span>\"D\"</span><span>,</span>\n    <span>\"CD\"</span><span>,</span>\n    <span>\"C\"</span><span>,</span>\n    <span>\"XC\"</span><span>,</span>\n    <span>\"L\"</span><span>,</span>\n    <span>\"XL\"</span><span>,</span>\n    <span>\"X\"</span><span>,</span>\n    <span>\"IX\"</span><span>,</span>\n    <span>\"V\"</span><span>,</span>\n    <span>\"IV\"</span><span>,</span>\n    <span>\"I\"</span><span>,</span>\n  <span>]</span><span>;</span>\n  <span>const</span> weights <span>=</span> <span>[</span><span>1000</span><span>,</span> <span>900</span><span>,</span> <span>500</span><span>,</span> <span>400</span><span>,</span> <span>100</span><span>,</span> <span>90</span><span>,</span> <span>50</span><span>,</span> <span>40</span><span>,</span> <span>10</span><span>,</span> <span>9</span><span>,</span> <span>5</span><span>,</span> <span>4</span><span>,</span> <span>1</span><span>]</span><span>;</span>\n\n  <span>let</span> result <span>=</span> <span>\"\"</span><span>;</span>\n\n  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> weights<span>.</span>length <span>&amp;&amp;</span> num <span>!==</span> <span>0</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n    <span>for</span> <span>(</span><span>let</span> j <span>=</span> <span>1</span><span>;</span> j <span>&lt;=</span> num <span>/</span> weights<span>[</span>i<span>]</span><span>;</span> j<span>++</span><span>)</span> result <span>+=</span> numerals<span>[</span>i<span>]</span><span>;</span>\n\n    num <span>%=</span> weights<span>[</span>i<span>]</span><span>;</span>\n  <span>}</span>\n\n  <span>return</span> result<span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br></div></div><h3 id=\"_1\"> 1</h3>\n<div><pre><code><span>/*\n * Runtime: 168 ms, faster than 53.26% of JavaScript online submissions for Integer to Roman.\n *\n * Memory Usage: 45.5 MB, less than 6.38% of JavaScript online submissions for Integer to Roman.\n */</span>\n\n<span>const</span> <span>intToRoman</span> <span>=</span> <span>(</span><span>num</span><span>)</span> <span>=></span> <span>{</span>\n  <span>const</span> thousands <span>=</span> <span>[</span><span>\"\"</span><span>,</span> <span>\"M\"</span><span>,</span> <span>\"MM\"</span><span>,</span> <span>\"MMM\"</span><span>]</span><span>;</span>\n  <span>const</span> hundreds <span>=</span> <span>[</span><span>\"\"</span><span>,</span> <span>\"C\"</span><span>,</span> <span>\"CC\"</span><span>,</span> <span>\"CCC\"</span><span>,</span> <span>\"CD\"</span><span>,</span> <span>\"D\"</span><span>,</span> <span>\"DC\"</span><span>,</span> <span>\"DCC\"</span><span>,</span> <span>\"DCCC\"</span><span>,</span> <span>\"CM\"</span><span>]</span><span>;</span>\n  <span>const</span> tens <span>=</span> <span>[</span><span>\"\"</span><span>,</span> <span>\"X\"</span><span>,</span> <span>\"XX\"</span><span>,</span> <span>\"XXX\"</span><span>,</span> <span>\"XL\"</span><span>,</span> <span>\"L\"</span><span>,</span> <span>\"LX\"</span><span>,</span> <span>\"LXX\"</span><span>,</span> <span>\"LXXX\"</span><span>,</span> <span>\"XC\"</span><span>]</span><span>;</span>\n  <span>const</span> units <span>=</span> <span>[</span><span>\"\"</span><span>,</span> <span>\"I\"</span><span>,</span> <span>\"II\"</span><span>,</span> <span>\"III\"</span><span>,</span> <span>\"IV\"</span><span>,</span> <span>\"V\"</span><span>,</span> <span>\"VI\"</span><span>,</span> <span>\"VII\"</span><span>,</span> <span>\"VIII\"</span><span>,</span> <span>\"IX\"</span><span>]</span><span>;</span>\n\n  <span>const</span> val1 <span>=</span> num <span>%</span> <span>1000</span><span>;</span>\n  <span>const</span> val2 <span>=</span> val1 <span>%</span> <span>100</span><span>;</span>\n  <span>const</span> val3 <span>=</span> val2 <span>%</span> <span>10</span><span>;</span>\n  <span>return</span> <span>(</span>\n    thousands<span>[</span><span>(</span>num <span>-</span> val1<span>)</span> <span>/</span> <span>1000</span><span>]</span> <span>+</span>\n    hundreds<span>[</span><span>(</span>val1 <span>-</span> val2<span>)</span> <span>/</span> <span>100</span><span>]</span> <span>+</span>\n    tens<span>[</span><span>(</span>val2 <span>-</span> val3<span>)</span> <span>/</span> <span>10</span><span>]</span> <span>+</span>\n    units<span>[</span>val3 <span>%</span> <span>10</span><span>]</span>\n  <span>)</span><span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.677Z",
      "authors": [
        {
          "name": "12. Integer to Roman"
        }
      ],
      "tags": [
        "JavaScript"
      ]
    },
    {
      "title": "Mister-Hope",
      "url": "https://leetcode.innenu.com/12-integer-to-roman/Mister-Hope/",
      "id": "https://leetcode.innenu.com/12-integer-to-roman/Mister-Hope/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span>/*\n * Runtime: 24 ms, faster than 22.26% of C++ online submissions for Integer to\n * Roman.\n *\n * Memory Usage: 12.6 MB, less than 11.00% of C++ online submissions for Integer\n * to Roman.\n */</span>\n\n<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  string <span>intToRoman</span><span>(</span><span>int</span> num<span>)</span> <span>{</span>\n    <span>if</span> <span>(</span>num <span>&lt;=</span> <span>0</span><span>)</span> <span>return</span> <span>\"\"</span><span>;</span>\n\n    vector<span>&lt;</span>string<span>></span> thousands<span>{</span><span>\"\"</span><span>,</span> <span>\"M\"</span><span>,</span> <span>\"MM\"</span><span>,</span> <span>\"MMM\"</span><span>}</span><span>;</span>\n    vector<span>&lt;</span>string<span>></span> hundreds<span>{</span><span>\"\"</span><span>,</span>  <span>\"C\"</span><span>,</span>  <span>\"CC\"</span><span>,</span>  <span>\"CCC\"</span><span>,</span>  <span>\"CD\"</span><span>,</span>\n                            <span>\"D\"</span><span>,</span> <span>\"DC\"</span><span>,</span> <span>\"DCC\"</span><span>,</span> <span>\"DCCC\"</span><span>,</span> <span>\"CM\"</span><span>}</span><span>;</span>\n    vector<span>&lt;</span>string<span>></span> tens<span>{</span><span>\"\"</span><span>,</span>  <span>\"X\"</span><span>,</span>  <span>\"XX\"</span><span>,</span>  <span>\"XXX\"</span><span>,</span>  <span>\"XL\"</span><span>,</span>\n                        <span>\"L\"</span><span>,</span> <span>\"LX\"</span><span>,</span> <span>\"LXX\"</span><span>,</span> <span>\"LXXX\"</span><span>,</span> <span>\"XC\"</span><span>}</span><span>;</span>\n    vector<span>&lt;</span>string<span>></span> units<span>{</span><span>\"\"</span><span>,</span>  <span>\"I\"</span><span>,</span>  <span>\"II\"</span><span>,</span>  <span>\"III\"</span><span>,</span>  <span>\"IV\"</span><span>,</span>\n                         <span>\"V\"</span><span>,</span> <span>\"VI\"</span><span>,</span> <span>\"VII\"</span><span>,</span> <span>\"VIII\"</span><span>,</span> <span>\"IX\"</span><span>}</span><span>;</span>\n\n    <span>return</span> thousands<span>[</span>num <span>/</span> <span>1000</span><span>]</span> <span>+</span> hundreds<span>[</span><span>(</span>num <span>%</span> <span>1000</span><span>)</span> <span>/</span> <span>100</span><span>]</span> <span>+</span>\n           tens<span>[</span><span>(</span>num <span>%</span> <span>100</span><span>)</span> <span>/</span> <span>10</span><span>]</span> <span>+</span> units<span>[</span>num <span>%</span> <span>10</span><span>]</span><span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br></div></div><h3 id=\"_1\"> 1</h3>\n<div><pre><code><span>/*\n * Runtime: 4 ms, faster than 93.51% of C++ online submissions for Integer to\n * Roman.\n *\n * Memory Usage: 9.2 MB, less than 11.00% of C++ online submissions for Integer\n * to Roman.\n */</span>\n\n<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  string <span>intToRoman</span><span>(</span><span>int</span> num<span>)</span> <span>{</span>\n    <span>if</span> <span>(</span>num <span>&lt;=</span> <span>0</span><span>)</span> <span>return</span> <span>\"\"</span><span>;</span>\n\n    vector<span>&lt;</span>string<span>></span> numerals<span>{</span>\n        <span>\"M\"</span><span>,</span> <span>\"CM\"</span><span>,</span> <span>\"D\"</span><span>,</span> <span>\"CD\"</span><span>,</span> <span>\"C\"</span><span>,</span> <span>\"XC\"</span><span>,</span> <span>\"L\"</span><span>,</span> <span>\"XL\"</span><span>,</span> <span>\"X\"</span><span>,</span> <span>\"IX\"</span><span>,</span> <span>\"V\"</span><span>,</span> <span>\"IV\"</span><span>,</span> <span>\"I\"</span><span>,</span>\n    <span>}</span><span>;</span>\n    vector<span>&lt;</span><span>int</span><span>></span> weights<span>{</span><span>1000</span><span>,</span> <span>900</span><span>,</span> <span>500</span><span>,</span> <span>400</span><span>,</span> <span>100</span><span>,</span> <span>90</span><span>,</span> <span>50</span><span>,</span> <span>40</span><span>,</span> <span>10</span><span>,</span> <span>9</span><span>,</span> <span>5</span><span>,</span> <span>4</span><span>,</span> <span>1</span><span>}</span><span>;</span>\n\n    string result <span>=</span> <span>\"\"</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> weights<span>.</span><span>size</span><span>(</span><span>)</span> <span>&amp;&amp;</span> num <span>!=</span> <span>0</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>1</span><span>;</span> j <span>&lt;=</span> num <span>/</span> weights<span>[</span>i<span>]</span><span>;</span> j<span>++</span><span>)</span> result <span>+=</span> numerals<span>[</span>i<span>]</span><span>;</span>\n\n      num <span>%=</span> weights<span>[</span>i<span>]</span><span>;</span>\n    <span>}</span>\n\n    <span>return</span> result<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br></div></div><h2 id=\"javascript\"> JavaScript</h2>\n<div><pre><code><span>/*\n * Runtime: 176 ms, faster than 33.68% of JavaScript online submissions for Integer to Roman.\n *\n * Memory Usage: 45.2 MB, less than 6.38% of JavaScript online submissions for Integer to Roman.\n */</span>\n\n<span>const</span> <span>intToRoman</span> <span>=</span> <span>(</span><span>num</span><span>)</span> <span>=></span> <span>{</span>\n  <span>const</span> numerals <span>=</span> <span>[</span>\n    <span>\"M\"</span><span>,</span>\n    <span>\"CM\"</span><span>,</span>\n    <span>\"D\"</span><span>,</span>\n    <span>\"CD\"</span><span>,</span>\n    <span>\"C\"</span><span>,</span>\n    <span>\"XC\"</span><span>,</span>\n    <span>\"L\"</span><span>,</span>\n    <span>\"XL\"</span><span>,</span>\n    <span>\"X\"</span><span>,</span>\n    <span>\"IX\"</span><span>,</span>\n    <span>\"V\"</span><span>,</span>\n    <span>\"IV\"</span><span>,</span>\n    <span>\"I\"</span><span>,</span>\n  <span>]</span><span>;</span>\n  <span>const</span> weights <span>=</span> <span>[</span><span>1000</span><span>,</span> <span>900</span><span>,</span> <span>500</span><span>,</span> <span>400</span><span>,</span> <span>100</span><span>,</span> <span>90</span><span>,</span> <span>50</span><span>,</span> <span>40</span><span>,</span> <span>10</span><span>,</span> <span>9</span><span>,</span> <span>5</span><span>,</span> <span>4</span><span>,</span> <span>1</span><span>]</span><span>;</span>\n\n  <span>let</span> result <span>=</span> <span>\"\"</span><span>;</span>\n\n  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> weights<span>.</span>length <span>&amp;&amp;</span> num <span>!==</span> <span>0</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n    <span>for</span> <span>(</span><span>let</span> j <span>=</span> <span>1</span><span>;</span> j <span>&lt;=</span> num <span>/</span> weights<span>[</span>i<span>]</span><span>;</span> j<span>++</span><span>)</span> result <span>+=</span> numerals<span>[</span>i<span>]</span><span>;</span>\n\n    num <span>%=</span> weights<span>[</span>i<span>]</span><span>;</span>\n  <span>}</span>\n\n  <span>return</span> result<span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br></div></div><h3 id=\"_1-2\"> 1</h3>\n<div><pre><code><span>/*\n * Runtime: 168 ms, faster than 53.26% of JavaScript online submissions for Integer to Roman.\n *\n * Memory Usage: 45.5 MB, less than 6.38% of JavaScript online submissions for Integer to Roman.\n */</span>\n\n<span>const</span> <span>intToRoman</span> <span>=</span> <span>(</span><span>num</span><span>)</span> <span>=></span> <span>{</span>\n  <span>const</span> thousands <span>=</span> <span>[</span><span>\"\"</span><span>,</span> <span>\"M\"</span><span>,</span> <span>\"MM\"</span><span>,</span> <span>\"MMM\"</span><span>]</span><span>;</span>\n  <span>const</span> hundreds <span>=</span> <span>[</span><span>\"\"</span><span>,</span> <span>\"C\"</span><span>,</span> <span>\"CC\"</span><span>,</span> <span>\"CCC\"</span><span>,</span> <span>\"CD\"</span><span>,</span> <span>\"D\"</span><span>,</span> <span>\"DC\"</span><span>,</span> <span>\"DCC\"</span><span>,</span> <span>\"DCCC\"</span><span>,</span> <span>\"CM\"</span><span>]</span><span>;</span>\n  <span>const</span> tens <span>=</span> <span>[</span><span>\"\"</span><span>,</span> <span>\"X\"</span><span>,</span> <span>\"XX\"</span><span>,</span> <span>\"XXX\"</span><span>,</span> <span>\"XL\"</span><span>,</span> <span>\"L\"</span><span>,</span> <span>\"LX\"</span><span>,</span> <span>\"LXX\"</span><span>,</span> <span>\"LXXX\"</span><span>,</span> <span>\"XC\"</span><span>]</span><span>;</span>\n  <span>const</span> units <span>=</span> <span>[</span><span>\"\"</span><span>,</span> <span>\"I\"</span><span>,</span> <span>\"II\"</span><span>,</span> <span>\"III\"</span><span>,</span> <span>\"IV\"</span><span>,</span> <span>\"V\"</span><span>,</span> <span>\"VI\"</span><span>,</span> <span>\"VII\"</span><span>,</span> <span>\"VIII\"</span><span>,</span> <span>\"IX\"</span><span>]</span><span>;</span>\n\n  <span>const</span> val1 <span>=</span> num <span>%</span> <span>1000</span><span>;</span>\n  <span>const</span> val2 <span>=</span> val1 <span>%</span> <span>100</span><span>;</span>\n  <span>const</span> val3 <span>=</span> val2 <span>%</span> <span>10</span><span>;</span>\n  <span>return</span> <span>(</span>\n    thousands<span>[</span><span>(</span>num <span>-</span> val1<span>)</span> <span>/</span> <span>1000</span><span>]</span> <span>+</span>\n    hundreds<span>[</span><span>(</span>val1 <span>-</span> val2<span>)</span> <span>/</span> <span>100</span><span>]</span> <span>+</span>\n    tens<span>[</span><span>(</span>val2 <span>-</span> val3<span>)</span> <span>/</span> <span>10</span><span>]</span> <span>+</span>\n    units<span>[</span>val3 <span>%</span> <span>10</span><span>]</span>\n  <span>)</span><span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br></div></div><h2 id=\"typescript\"> TypeScript</h2>\n<div><pre><code><span>/*\n * Runtime: 160 ms, faster than 77.17% of TypeScript online submissions for Integer to Roman.\n *\n * Memory Usage: 46.6 MB, less than 19.57% of TypeScript online submissions for Integer to Roman.\n */</span>\n\n<span>const</span> intToRoman <span>=</span> <span>(</span>num<span>:</span> <span>number</span><span>)</span><span>:</span> <span>string</span> <span>=></span> <span>{</span>\n  <span>const</span> numerals <span>=</span> <span>[</span>\n    <span>\"M\"</span><span>,</span>\n    <span>\"CM\"</span><span>,</span>\n    <span>\"D\"</span><span>,</span>\n    <span>\"CD\"</span><span>,</span>\n    <span>\"C\"</span><span>,</span>\n    <span>\"XC\"</span><span>,</span>\n    <span>\"L\"</span><span>,</span>\n    <span>\"XL\"</span><span>,</span>\n    <span>\"X\"</span><span>,</span>\n    <span>\"IX\"</span><span>,</span>\n    <span>\"V\"</span><span>,</span>\n    <span>\"IV\"</span><span>,</span>\n    <span>\"I\"</span><span>,</span>\n  <span>]</span><span>;</span>\n  <span>const</span> weights <span>=</span> <span>[</span><span>1000</span><span>,</span> <span>900</span><span>,</span> <span>500</span><span>,</span> <span>400</span><span>,</span> <span>100</span><span>,</span> <span>90</span><span>,</span> <span>50</span><span>,</span> <span>40</span><span>,</span> <span>10</span><span>,</span> <span>9</span><span>,</span> <span>5</span><span>,</span> <span>4</span><span>,</span> <span>1</span><span>]</span><span>;</span>\n\n  <span>let</span> result <span>=</span> <span>\"\"</span><span>;</span>\n\n  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> weights<span>.</span>length <span>&amp;&amp;</span> num <span>!==</span> <span>0</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n    <span>for</span> <span>(</span><span>let</span> j <span>=</span> <span>1</span><span>;</span> j <span>&lt;=</span> num <span>/</span> weights<span>[</span>i<span>]</span><span>;</span> j<span>++</span><span>)</span> result <span>+=</span> numerals<span>[</span>i<span>]</span><span>;</span>\n\n    num <span>%=</span> weights<span>[</span>i<span>]</span><span>;</span>\n  <span>}</span>\n\n  <span>return</span> result<span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br></div></div><h3 id=\"_1-3\"> 1</h3>\n<div><pre><code><span>/*\n * Runtime: 172 ms, faster than 43.48% of TypeScript online submissions for Integer to Roman.\n *\n * Memory Usage: 46.1 MB, less than 19.57% of TypeScript online submissions for Integer to Roman.\n */</span>\n\n<span>const</span> intToRoman <span>=</span> <span>(</span>num<span>:</span> <span>number</span><span>)</span><span>:</span> <span>string</span> <span>=></span> <span>{</span>\n  <span>const</span> thousands <span>=</span> <span>[</span><span>\"\"</span><span>,</span> <span>\"M\"</span><span>,</span> <span>\"MM\"</span><span>,</span> <span>\"MMM\"</span><span>]</span><span>;</span>\n  <span>const</span> hundreds <span>=</span> <span>[</span><span>\"\"</span><span>,</span> <span>\"C\"</span><span>,</span> <span>\"CC\"</span><span>,</span> <span>\"CCC\"</span><span>,</span> <span>\"CD\"</span><span>,</span> <span>\"D\"</span><span>,</span> <span>\"DC\"</span><span>,</span> <span>\"DCC\"</span><span>,</span> <span>\"DCCC\"</span><span>,</span> <span>\"CM\"</span><span>]</span><span>;</span>\n  <span>const</span> tens <span>=</span> <span>[</span><span>\"\"</span><span>,</span> <span>\"X\"</span><span>,</span> <span>\"XX\"</span><span>,</span> <span>\"XXX\"</span><span>,</span> <span>\"XL\"</span><span>,</span> <span>\"L\"</span><span>,</span> <span>\"LX\"</span><span>,</span> <span>\"LXX\"</span><span>,</span> <span>\"LXXX\"</span><span>,</span> <span>\"XC\"</span><span>]</span><span>;</span>\n  <span>const</span> units <span>=</span> <span>[</span><span>\"\"</span><span>,</span> <span>\"I\"</span><span>,</span> <span>\"II\"</span><span>,</span> <span>\"III\"</span><span>,</span> <span>\"IV\"</span><span>,</span> <span>\"V\"</span><span>,</span> <span>\"VI\"</span><span>,</span> <span>\"VII\"</span><span>,</span> <span>\"VIII\"</span><span>,</span> <span>\"IX\"</span><span>]</span><span>;</span>\n\n  <span>const</span> val1 <span>=</span> num <span>%</span> <span>1000</span><span>;</span>\n  <span>const</span> val2 <span>=</span> val1 <span>%</span> <span>100</span><span>;</span>\n  <span>const</span> val3 <span>=</span> val2 <span>%</span> <span>10</span><span>;</span>\n  <span>return</span> <span>(</span>\n    thousands<span>[</span><span>(</span>num <span>-</span> val1<span>)</span> <span>/</span> <span>1000</span><span>]</span> <span>+</span>\n    hundreds<span>[</span><span>(</span>val1 <span>-</span> val2<span>)</span> <span>/</span> <span>100</span><span>]</span> <span>+</span>\n    tens<span>[</span><span>(</span>val2 <span>-</span> val3<span>)</span> <span>/</span> <span>10</span><span>]</span> <span>+</span>\n    units<span>[</span>val3 <span>%</span> <span>10</span><span>]</span>\n  <span>)</span><span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.682Z",
      "authors": [
        {
          "name": "12. Integer to Roman"
        }
      ],
      "tags": [
        "Mister-Hope"
      ]
    },
    {
      "title": "TypeScript",
      "url": "https://leetcode.innenu.com/12-integer-to-roman/TypeScript/",
      "id": "https://leetcode.innenu.com/12-integer-to-roman/TypeScript/",
      "content_html": "<h2 id=\"mister-hope\"> Mister-Hope</h2>\n<div><pre><code><span>/*\n * Runtime: 160 ms, faster than 77.17% of TypeScript online submissions for Integer to Roman.\n *\n * Memory Usage: 46.6 MB, less than 19.57% of TypeScript online submissions for Integer to Roman.\n */</span>\n\n<span>const</span> intToRoman <span>=</span> <span>(</span>num<span>:</span> <span>number</span><span>)</span><span>:</span> <span>string</span> <span>=></span> <span>{</span>\n  <span>const</span> numerals <span>=</span> <span>[</span>\n    <span>\"M\"</span><span>,</span>\n    <span>\"CM\"</span><span>,</span>\n    <span>\"D\"</span><span>,</span>\n    <span>\"CD\"</span><span>,</span>\n    <span>\"C\"</span><span>,</span>\n    <span>\"XC\"</span><span>,</span>\n    <span>\"L\"</span><span>,</span>\n    <span>\"XL\"</span><span>,</span>\n    <span>\"X\"</span><span>,</span>\n    <span>\"IX\"</span><span>,</span>\n    <span>\"V\"</span><span>,</span>\n    <span>\"IV\"</span><span>,</span>\n    <span>\"I\"</span><span>,</span>\n  <span>]</span><span>;</span>\n  <span>const</span> weights <span>=</span> <span>[</span><span>1000</span><span>,</span> <span>900</span><span>,</span> <span>500</span><span>,</span> <span>400</span><span>,</span> <span>100</span><span>,</span> <span>90</span><span>,</span> <span>50</span><span>,</span> <span>40</span><span>,</span> <span>10</span><span>,</span> <span>9</span><span>,</span> <span>5</span><span>,</span> <span>4</span><span>,</span> <span>1</span><span>]</span><span>;</span>\n\n  <span>let</span> result <span>=</span> <span>\"\"</span><span>;</span>\n\n  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> weights<span>.</span>length <span>&amp;&amp;</span> num <span>!==</span> <span>0</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n    <span>for</span> <span>(</span><span>let</span> j <span>=</span> <span>1</span><span>;</span> j <span>&lt;=</span> num <span>/</span> weights<span>[</span>i<span>]</span><span>;</span> j<span>++</span><span>)</span> result <span>+=</span> numerals<span>[</span>i<span>]</span><span>;</span>\n\n    num <span>%=</span> weights<span>[</span>i<span>]</span><span>;</span>\n  <span>}</span>\n\n  <span>return</span> result<span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br></div></div><h3 id=\"_1\"> 1</h3>\n<div><pre><code><span>/*\n * Runtime: 172 ms, faster than 43.48% of TypeScript online submissions for Integer to Roman.\n *\n * Memory Usage: 46.1 MB, less than 19.57% of TypeScript online submissions for Integer to Roman.\n */</span>\n\n<span>const</span> intToRoman <span>=</span> <span>(</span>num<span>:</span> <span>number</span><span>)</span><span>:</span> <span>string</span> <span>=></span> <span>{</span>\n  <span>const</span> thousands <span>=</span> <span>[</span><span>\"\"</span><span>,</span> <span>\"M\"</span><span>,</span> <span>\"MM\"</span><span>,</span> <span>\"MMM\"</span><span>]</span><span>;</span>\n  <span>const</span> hundreds <span>=</span> <span>[</span><span>\"\"</span><span>,</span> <span>\"C\"</span><span>,</span> <span>\"CC\"</span><span>,</span> <span>\"CCC\"</span><span>,</span> <span>\"CD\"</span><span>,</span> <span>\"D\"</span><span>,</span> <span>\"DC\"</span><span>,</span> <span>\"DCC\"</span><span>,</span> <span>\"DCCC\"</span><span>,</span> <span>\"CM\"</span><span>]</span><span>;</span>\n  <span>const</span> tens <span>=</span> <span>[</span><span>\"\"</span><span>,</span> <span>\"X\"</span><span>,</span> <span>\"XX\"</span><span>,</span> <span>\"XXX\"</span><span>,</span> <span>\"XL\"</span><span>,</span> <span>\"L\"</span><span>,</span> <span>\"LX\"</span><span>,</span> <span>\"LXX\"</span><span>,</span> <span>\"LXXX\"</span><span>,</span> <span>\"XC\"</span><span>]</span><span>;</span>\n  <span>const</span> units <span>=</span> <span>[</span><span>\"\"</span><span>,</span> <span>\"I\"</span><span>,</span> <span>\"II\"</span><span>,</span> <span>\"III\"</span><span>,</span> <span>\"IV\"</span><span>,</span> <span>\"V\"</span><span>,</span> <span>\"VI\"</span><span>,</span> <span>\"VII\"</span><span>,</span> <span>\"VIII\"</span><span>,</span> <span>\"IX\"</span><span>]</span><span>;</span>\n\n  <span>const</span> val1 <span>=</span> num <span>%</span> <span>1000</span><span>;</span>\n  <span>const</span> val2 <span>=</span> val1 <span>%</span> <span>100</span><span>;</span>\n  <span>const</span> val3 <span>=</span> val2 <span>%</span> <span>10</span><span>;</span>\n  <span>return</span> <span>(</span>\n    thousands<span>[</span><span>(</span>num <span>-</span> val1<span>)</span> <span>/</span> <span>1000</span><span>]</span> <span>+</span>\n    hundreds<span>[</span><span>(</span>val1 <span>-</span> val2<span>)</span> <span>/</span> <span>100</span><span>]</span> <span>+</span>\n    tens<span>[</span><span>(</span>val2 <span>-</span> val3<span>)</span> <span>/</span> <span>10</span><span>]</span> <span>+</span>\n    units<span>[</span>val3 <span>%</span> <span>10</span><span>]</span>\n  <span>)</span><span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.684Z",
      "authors": [
        {
          "name": "12. Integer to Roman"
        }
      ],
      "tags": [
        "TypeScript"
      ]
    },
    {
      "title": "12. Integer to Roman",
      "url": "https://leetcode.innenu.com/12-integer-to-roman/",
      "id": "https://leetcode.innenu.com/12-integer-to-roman/",
      "content_html": "<h1 id=\"_12-integer-to-roman\"> <a href=\"https://leetcode.com/problems/integer-to-roman/\" target=\"_blank\" rel=\"noopener noreferrer\">12. Integer to Roman</a></h1>\n<p>Roman numerals are represented by seven different symbols: <code>I</code>, <code>V</code>, <code>X</code>, <code>L</code>, <code>C</code>, <code>D</code> and <code>M</code>.</p>\n<table>\n<thead>\n<tr>\n<th>Symbol</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>I</td>\n<td>1</td>\n</tr>\n<tr>\n<td>V</td>\n<td>5</td>\n</tr>\n<tr>\n<td>X</td>\n<td>10</td>\n</tr>\n<tr>\n<td>L</td>\n<td>50</td>\n</tr>\n<tr>\n<td>C</td>\n<td>100</td>\n</tr>\n<tr>\n<td>D</td>\n<td>500</td>\n</tr>\n<tr>\n<td>M</td>\n<td>1000</td>\n</tr>\n</tbody>\n</table>\n<p>For example, <code>2</code> is written as <code>II</code> in Roman numeral, just two one's added together. <code>12</code> is written as <code>XII</code>, which is simply <code>X + II</code>. The number <code>27</code> is written as <code>XXVII</code>, which is <code>XX + V + II</code>.</p>\n<p>Roman numerals are usually written largest to smallest from left to right. However, the numeral for four is not <code>IIII</code>. Instead, the number four is written as <code>IV</code>. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as <code>IX</code>. There are six instances where subtraction is used:</p>\n<ul>\n<li><code>I</code> can be placed before <code>V</code> (5) and <code>X</code> (10) to make 4 and 9.</li>\n<li><code>X</code> can be placed before <code>L</code> (50) and <code>C</code> (100) to make 40 and 90.</li>\n<li><code>C</code> can be placed before <code>D</code> (500) and <code>M</code> (1000) to make 400 and 900.</li>\n</ul>\n<p>Given an integer, convert it to a roman numeral.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> num = 3</p>\n<p><strong>Output:</strong> &quot;III&quot;</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> num = 4</p>\n<p><strong>Output:</strong> &quot;IV&quot;</p>\n<p><strong>Example 3:</strong></p>\n<p><strong>Input:</strong> num = 9</p>\n<p><strong>Output:</strong> &quot;IX&quot;</p>\n<p><strong>Example 4:</strong></p>\n<p><strong>Input:</strong> num = 58</p>\n<p><strong>Output:</strong> &quot;LVIII&quot;</p>\n<p><strong>Explanation:</strong> L = 50, V = 5, III = 3.</p>\n<p><strong>Example 5:</strong></p>\n<p><strong>Input:</strong> num = 1994</p>\n<p><strong>Output:</strong> &quot;MCMXCIV&quot;</p>\n<p><strong>Explanation:</strong> M = 1000, CM = 900, XC = 90 and IV = 4.</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>1 &lt;= num &lt;= 3999</code></li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "C++",
      "url": "https://leetcode.innenu.com/122-best-time-to-buy-and-sell-stock-ii/C++/",
      "id": "https://leetcode.innenu.com/122-best-time-to-buy-and-sell-stock-ii/C++/",
      "content_html": "<h2 id=\"lmy\"> lmy</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>int</span> <span>maxProfit</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> prices<span>)</span> <span>{</span>\n    <span>int</span> sum <span>=</span> <span>0</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>1</span><span>;</span> i <span>&lt;</span> prices<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      sum <span>+=</span> <span>max</span><span>(</span>prices<span>[</span>i<span>]</span> <span>-</span> prices<span>[</span>i <span>-</span> <span>1</span><span>]</span><span>,</span> <span>0</span><span>)</span><span>;</span>\n    <span>}</span>\n    <span>return</span> sum<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.686Z",
      "authors": [
        {
          "name": "122. Best Time to Buy And Sell Stock Ii"
        }
      ],
      "tags": [
        "C++"
      ]
    },
    {
      "title": "lmy",
      "url": "https://leetcode.innenu.com/122-best-time-to-buy-and-sell-stock-ii/lmy/",
      "id": "https://leetcode.innenu.com/122-best-time-to-buy-and-sell-stock-ii/lmy/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>int</span> <span>maxProfit</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> prices<span>)</span> <span>{</span>\n    <span>int</span> sum <span>=</span> <span>0</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>1</span><span>;</span> i <span>&lt;</span> prices<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      sum <span>+=</span> <span>max</span><span>(</span>prices<span>[</span>i<span>]</span> <span>-</span> prices<span>[</span>i <span>-</span> <span>1</span><span>]</span><span>,</span> <span>0</span><span>)</span><span>;</span>\n    <span>}</span>\n    <span>return</span> sum<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.686Z",
      "authors": [
        {
          "name": "122. Best Time to Buy And Sell Stock Ii"
        }
      ],
      "tags": [
        "lmy"
      ]
    },
    {
      "title": "122. Best Time to Buy and Sell Stock II",
      "url": "https://leetcode.innenu.com/122-best-time-to-buy-and-sell-stock-ii/",
      "id": "https://leetcode.innenu.com/122-best-time-to-buy-and-sell-stock-ii/",
      "content_html": "<h1 id=\"_122-best-time-to-buy-and-sell-stock-ii\"> <a href=\"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/\" target=\"_blank\" rel=\"noopener noreferrer\">122. Best Time to Buy and Sell Stock II</a></h1>\n<p>Say you have an array <code>prices</code> for which the <em>i</em>th element is the price of a given stock on day <em>i</em>.</p>\n<p>Design an algorithm to find the maximum profit. You may complete as many transactions as you like (i.e., buy one and sell one share of the stock multiple times).</p>\n<p><strong>Note:</strong> You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> [7,1,5,3,6,4]</p>\n<p><strong>Output:</strong> 7</p>\n<p><strong>Explanation:</strong></p>\n<p>Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4.</p>\n<p>Then buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3.</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> [1,2,3,4,5]</p>\n<p><strong>Output:</strong> 4</p>\n<p><strong>Explanation:</strong></p>\n<p>Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.</p>\n<p>Note that you cannot buy on day 1, buy on day 2 and sell them later, as you are engaging multiple transactions at the same time. You must sell before buying again.</p>\n<p><strong>Example 3:</strong></p>\n<p><strong>Input:</strong> [7,6,4,3,1]</p>\n<p><strong>Output:</strong> 0</p>\n<p><strong>Explanation:</strong> In this case, no transaction is done, i.e. max profit = 0.</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>1 &lt;= prices.length &lt;= 3 * 10 ^ 4</code></li>\n<li><code>0 &lt;= prices[i] &lt;= 10 ^ 4</code></li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "Java",
      "url": "https://leetcode.innenu.com/1221-Split-a-String-in-Balanced-Strings/Java/",
      "id": "https://leetcode.innenu.com/1221-Split-a-String-in-Balanced-Strings/Java/",
      "content_html": "<h2 id=\"lizncu\"> lizncu</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span> <span>balancedStringSplit</span><span>(</span><span>String</span> s<span>)</span> <span>{</span>\n    <span>int</span> flag <span>=</span> <span>0</span><span>;</span>\n    <span>int</span> ans <span>=</span> <span>0</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> s<span>.</span><span>length</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>s<span>.</span><span>charAt</span><span>(</span>i<span>)</span> <span>==</span> <span>'L'</span><span>)</span> <span>{</span>\n        flag<span>++</span><span>;</span>\n      <span>}</span> <span>else</span> <span>{</span>\n        flag<span>--</span><span>;</span>\n      <span>}</span>\n\n      <span>if</span> <span>(</span>flag <span>==</span> <span>0</span><span>)</span> <span>{</span>\n        ans<span>++</span><span>;</span>\n      <span>}</span>\n    <span>}</span>\n\n    <span>return</span> ans<span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.687Z",
      "authors": [
        {
          "name": "1221. Split a String in Balanced Strings"
        }
      ],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "lizncu",
      "url": "https://leetcode.innenu.com/1221-Split-a-String-in-Balanced-Strings/lizncu/",
      "id": "https://leetcode.innenu.com/1221-Split-a-String-in-Balanced-Strings/lizncu/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span> <span>balancedStringSplit</span><span>(</span><span>String</span> s<span>)</span> <span>{</span>\n    <span>int</span> flag <span>=</span> <span>0</span><span>;</span>\n    <span>int</span> ans <span>=</span> <span>0</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> s<span>.</span><span>length</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>s<span>.</span><span>charAt</span><span>(</span>i<span>)</span> <span>==</span> <span>'L'</span><span>)</span> <span>{</span>\n        flag<span>++</span><span>;</span>\n      <span>}</span> <span>else</span> <span>{</span>\n        flag<span>--</span><span>;</span>\n      <span>}</span>\n\n      <span>if</span> <span>(</span>flag <span>==</span> <span>0</span><span>)</span> <span>{</span>\n        ans<span>++</span><span>;</span>\n      <span>}</span>\n    <span>}</span>\n\n    <span>return</span> ans<span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.687Z",
      "authors": [
        {
          "name": "1221. Split a String in Balanced Strings"
        }
      ],
      "tags": [
        "lizncu"
      ]
    },
    {
      "title": "1221. Split a String in Balanced Strings",
      "url": "https://leetcode.innenu.com/1221-Split-a-String-in-Balanced-Strings/",
      "id": "https://leetcode.innenu.com/1221-Split-a-String-in-Balanced-Strings/",
      "content_html": "<h1 id=\"_1221-split-a-string-in-balanced-strings\"> <a href=\"https://leetcode.com/problems/split-a-string-in-balanced-strings/\" target=\"_blank\" rel=\"noopener noreferrer\">1221. Split a String in Balanced Strings</a></h1>\n<p><em>Balanced</em> strings are those who have equal quantity of 'L' and 'R' characters.</p>\n<p>Given a balanced string <code>s</code> split it in the maximum amount of balanced strings.</p>\n<p>Return the maximum amount of splitted balanced strings.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> s = &quot;RLRRLLRLRL&quot;</p>\n<p><strong>Output:</strong> 4</p>\n<p><strong>Explanation:</strong> s can be split into &quot;RL&quot;, &quot;RRLL&quot;, &quot;RL&quot;, &quot;RL&quot;, each substring contains same number of 'L' and 'R'.</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> s = &quot;RLLLLRRRLR&quot;</p>\n<p><strong>Output:</strong> 3</p>\n<p><strong>Explanation:</strong> s can be split into &quot;RL&quot;, &quot;LLLRRR&quot;, &quot;LR&quot;, each substring contains same number of 'L' and 'R'.</p>\n<p><strong>Example 3:</strong></p>\n<p><strong>Input:</strong> s = &quot;LLLLRRRR&quot;</p>\n<p><strong>Output:</strong> 1</p>\n<p><strong>Explanation:</strong> s can be split into &quot;LLLLRRRR&quot;.</p>\n<p><strong>Example 4:</strong></p>\n<p><strong>Input:</strong> s = &quot;RLRRRLLRLL&quot;</p>\n<p><strong>Output:</strong> 2</p>\n<p><strong>Explanation:</strong> s can be split into &quot;RL&quot;, &quot;RRRLLRLL&quot;, since each substring contains an equal number of 'L' and 'R'</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>1 &lt;= s.length &lt;= 1000</code></li>\n<li><code>s[i] = 'L' or 'R'</code></li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "Java",
      "url": "https://leetcode.innenu.com/1281-Subtract-the-Product-and-Sum-of-Digits-of-an-Integer/Java/",
      "id": "https://leetcode.innenu.com/1281-Subtract-the-Product-and-Sum-of-Digits-of-an-Integer/Java/",
      "content_html": "<h2 id=\"lizncu\"> lizncu</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span> <span>subtractProductAndSum</span><span>(</span><span>int</span> n<span>)</span> <span>{</span>\n    <span>int</span> add <span>=</span> <span>0</span><span>;</span>\n    <span>int</span> mul <span>=</span> <span>1</span><span>;</span>\n\n    <span>while</span> <span>(</span>n <span>!=</span> <span>0</span><span>)</span> <span>{</span>\n      add <span>+=</span> n <span>%</span> <span>10</span><span>;</span>\n      mul <span>*=</span> n <span>%</span> <span>10</span><span>;</span>\n      n <span>=</span> n <span>/</span> <span>10</span><span>;</span>\n    <span>}</span>\n\n    <span>return</span> <span>(</span>mul <span>-</span> add<span>)</span><span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.688Z",
      "authors": [
        {
          "name": "1281. Subtract the Product And Sum of Digits of An Integer"
        }
      ],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "lizncu",
      "url": "https://leetcode.innenu.com/1281-Subtract-the-Product-and-Sum-of-Digits-of-an-Integer/lizncu/",
      "id": "https://leetcode.innenu.com/1281-Subtract-the-Product-and-Sum-of-Digits-of-an-Integer/lizncu/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span> <span>subtractProductAndSum</span><span>(</span><span>int</span> n<span>)</span> <span>{</span>\n    <span>int</span> add <span>=</span> <span>0</span><span>;</span>\n    <span>int</span> mul <span>=</span> <span>1</span><span>;</span>\n\n    <span>while</span> <span>(</span>n <span>!=</span> <span>0</span><span>)</span> <span>{</span>\n      add <span>+=</span> n <span>%</span> <span>10</span><span>;</span>\n      mul <span>*=</span> n <span>%</span> <span>10</span><span>;</span>\n      n <span>=</span> n <span>/</span> <span>10</span><span>;</span>\n    <span>}</span>\n\n    <span>return</span> <span>(</span>mul <span>-</span> add<span>)</span><span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.689Z",
      "authors": [
        {
          "name": "1281. Subtract the Product And Sum of Digits of An Integer"
        }
      ],
      "tags": [
        "lizncu"
      ]
    },
    {
      "title": "1281. Subtract the Product and Sum of Digits of an Integer",
      "url": "https://leetcode.innenu.com/1281-Subtract-the-Product-and-Sum-of-Digits-of-an-Integer/",
      "id": "https://leetcode.innenu.com/1281-Subtract-the-Product-and-Sum-of-Digits-of-an-Integer/",
      "content_html": "<h1 id=\"_1281-subtract-the-product-and-sum-of-digits-of-an-integer\"> <a href=\"https://leetcode.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer/\" target=\"_blank\" rel=\"noopener noreferrer\">1281. Subtract the Product and Sum of Digits of an Integer</a></h1>\n<p>Given an integer number <code>n</code>, return the difference between the product of its digits and the sum of its digits.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> n = 234</p>\n<p><strong>Output:</strong> 15</p>\n<p><strong>Explanation:</strong></p>\n<p>Product of digits = 2 * 3 * 4 = 24</p>\n<p>Sum of digits = 2 + 3 + 4 = 9</p>\n<p>Result = 24 - 9 = 15</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> n = 4421</p>\n<p><strong>Output:</strong> 21</p>\n<p><strong>Explanation:</strong></p>\n<p>Product of digits = 4 * 4 * 2 * 1 = 32</p>\n<p>Sum of digits = 4 + 4 + 2 + 1 = 11</p>\n<p>Result = 32 - 11 = 21</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>1 &lt;= n &lt;= 10^5</code></li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "Java",
      "url": "https://leetcode.innenu.com/1295-Find-Numbers-with-Even-Number-of-Digits/Java/",
      "id": "https://leetcode.innenu.com/1295-Find-Numbers-with-Even-Number-of-Digits/Java/",
      "content_html": "<h2 id=\"lizncu\"> lizncu</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span> <span>findNumbers</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>)</span> <span>{</span>\n    <span>int</span> ans <span>=</span> <span>0</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>int</span> count <span>=</span> <span>0</span><span>;</span>\n      <span>if</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>==</span> <span>0</span><span>)</span> <span>{</span>\n        <span>continue</span><span>;</span>\n      <span>}</span> <span>else</span> <span>{</span>\n        <span>while</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>!=</span> <span>0</span><span>)</span> <span>{</span>\n          nums<span>[</span>i<span>]</span> <span>/=</span> <span>10</span><span>;</span>\n          count<span>++</span><span>;</span>\n        <span>}</span>\n      <span>}</span>\n      <span>if</span> <span>(</span>count <span>%</span> <span>2</span> <span>==</span> <span>0</span><span>)</span> <span>{</span>\n        ans<span>++</span><span>;</span>\n      <span>}</span>\n    <span>}</span>\n\n    <span>return</span> ans<span>;</span>\n  <span>}</span>\n<span>}</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.690Z",
      "authors": [
        {
          "name": "1295. Find Numbers with Even Number of Digits"
        }
      ],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "lizncu",
      "url": "https://leetcode.innenu.com/1295-Find-Numbers-with-Even-Number-of-Digits/lizncu/",
      "id": "https://leetcode.innenu.com/1295-Find-Numbers-with-Even-Number-of-Digits/lizncu/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span> <span>findNumbers</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>)</span> <span>{</span>\n    <span>int</span> ans <span>=</span> <span>0</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>int</span> count <span>=</span> <span>0</span><span>;</span>\n      <span>if</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>==</span> <span>0</span><span>)</span> <span>{</span>\n        <span>continue</span><span>;</span>\n      <span>}</span> <span>else</span> <span>{</span>\n        <span>while</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>!=</span> <span>0</span><span>)</span> <span>{</span>\n          nums<span>[</span>i<span>]</span> <span>/=</span> <span>10</span><span>;</span>\n          count<span>++</span><span>;</span>\n        <span>}</span>\n      <span>}</span>\n      <span>if</span> <span>(</span>count <span>%</span> <span>2</span> <span>==</span> <span>0</span><span>)</span> <span>{</span>\n        ans<span>++</span><span>;</span>\n      <span>}</span>\n    <span>}</span>\n\n    <span>return</span> ans<span>;</span>\n  <span>}</span>\n<span>}</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.690Z",
      "authors": [
        {
          "name": "1295. Find Numbers with Even Number of Digits"
        }
      ],
      "tags": [
        "lizncu"
      ]
    },
    {
      "title": "1295. Find Numbers with Even Number of Digits",
      "url": "https://leetcode.innenu.com/1295-Find-Numbers-with-Even-Number-of-Digits/",
      "id": "https://leetcode.innenu.com/1295-Find-Numbers-with-Even-Number-of-Digits/",
      "content_html": "<h1 id=\"_1295-find-numbers-with-even-number-of-digits\"> <a href=\"https://leetcode.com/problems/find-numbers-with-even-number-of-digits/\" target=\"_blank\" rel=\"noopener noreferrer\">1295. Find Numbers with Even Number of Digits</a></h1>\n<p>Given an array <code>nums</code> of integers, return how many of them contain an <strong>even number</strong> of digits.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> nums = [12,345,2,6,7896]</p>\n<p><strong>Output:</strong> 2</p>\n<p><strong>Explanation:</strong> 12 contains 2 digits (even number of digits).\n345 contains 3 digits (odd number of digits).\n2 contains 1 digit (odd number of digits).\n6 contains 1 digit (odd number of digits).\n7896 contains 4 digits (even number of digits).\nTherefore only 12 and 7896 contain an even number of digits.</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> nums = [555,901,482,1771]</p>\n<p><strong>Output:</strong> 1</p>\n<p><strong>Explanation:</strong>\nOnly 1771 contains an even number of digits.</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 500</code></li>\n<li><code>1 &lt;= nums[i] &lt;= 10^5</code></li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "Java",
      "url": "https://leetcode.innenu.com/1299-Replace-Elements-with-Greatest-Element-on-Right-Side/Java/",
      "id": "https://leetcode.innenu.com/1299-Replace-Elements-with-Greatest-Element-on-Right-Side/Java/",
      "content_html": "<h2 id=\"lizncu\"> lizncu</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>replaceElements</span><span>(</span><span>int</span><span>[</span><span>]</span> arr<span>)</span> <span>{</span>\n    <span>int</span> max <span>=</span> <span>-</span><span>1</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> arr<span>.</span>length <span>-</span> <span>1</span><span>;</span> i <span>>=</span> <span>0</span><span>;</span> i<span>--</span><span>)</span> <span>{</span>\n      <span>int</span> temp <span>=</span> arr<span>[</span>i<span>]</span><span>;</span>\n      arr<span>[</span>i<span>]</span> <span>=</span> max<span>;</span>\n      <span>if</span> <span>(</span>temp <span>></span> max<span>)</span> <span>{</span>\n        max <span>=</span> temp<span>;</span>\n      <span>}</span>\n    <span>}</span>\n    <span>return</span> arr<span>;</span>\n  <span>}</span>\n<span>}</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.691Z",
      "authors": [
        {
          "name": "1299. Replace Elements with Greatest Element on Right Side"
        }
      ],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "lizncu",
      "url": "https://leetcode.innenu.com/1299-Replace-Elements-with-Greatest-Element-on-Right-Side/lizncu/",
      "id": "https://leetcode.innenu.com/1299-Replace-Elements-with-Greatest-Element-on-Right-Side/lizncu/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>replaceElements</span><span>(</span><span>int</span><span>[</span><span>]</span> arr<span>)</span> <span>{</span>\n    <span>int</span> max <span>=</span> <span>-</span><span>1</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> arr<span>.</span>length <span>-</span> <span>1</span><span>;</span> i <span>>=</span> <span>0</span><span>;</span> i<span>--</span><span>)</span> <span>{</span>\n      <span>int</span> temp <span>=</span> arr<span>[</span>i<span>]</span><span>;</span>\n      arr<span>[</span>i<span>]</span> <span>=</span> max<span>;</span>\n      <span>if</span> <span>(</span>temp <span>></span> max<span>)</span> <span>{</span>\n        max <span>=</span> temp<span>;</span>\n      <span>}</span>\n    <span>}</span>\n    <span>return</span> arr<span>;</span>\n  <span>}</span>\n<span>}</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.691Z",
      "authors": [
        {
          "name": "1299. Replace Elements with Greatest Element on Right Side"
        }
      ],
      "tags": [
        "lizncu"
      ]
    },
    {
      "title": "1299. Replace Elements with Greatest Element on Right Side",
      "url": "https://leetcode.innenu.com/1299-Replace-Elements-with-Greatest-Element-on-Right-Side/",
      "id": "https://leetcode.innenu.com/1299-Replace-Elements-with-Greatest-Element-on-Right-Side/",
      "content_html": "<h1 id=\"_1299-replace-elements-with-greatest-element-on-right-side\"> <a href=\"https://leetcode.com/problems/replace-elements-with-greatest-element-on-right-side/\" target=\"_blank\" rel=\"noopener noreferrer\">1299. Replace Elements with Greatest Element on Right Side</a></h1>\n<p>Given an array <code>arr</code>, replace every element in that array with the greatest element among the elements to its right, and replace the last element with <code>-1</code>.</p>\n<p>After doing so, return the array.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> arr = [17,18,5,4,6,1]</p>\n<p><strong>Output:</strong> [18,6,6,6,1,-1]</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>1 &lt;= arr.length &lt;= 10^4</code></li>\n<li><code>1 &lt;= arr[i] &lt;= 10^5</code></li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "C++",
      "url": "https://leetcode.innenu.com/13-roman-to-integer/C++/",
      "id": "https://leetcode.innenu.com/13-roman-to-integer/C++/",
      "content_html": "<h2 id=\"virgil\"> Virgil</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>\n<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>int</span> <span>romanToInt</span><span>(</span>string s<span>)</span> <span>{</span>\n    <span>int</span> m<span>[</span><span>90</span><span>]</span> <span>=</span> <span>{</span><span>}</span><span>;</span>\n    m<span>[</span><span>'I'</span><span>]</span> <span>=</span> <span>1</span><span>;</span>\n    m<span>[</span><span>'V'</span><span>]</span> <span>=</span> <span>5</span><span>;</span>\n    m<span>[</span><span>'X'</span><span>]</span> <span>=</span> <span>10</span><span>;</span>\n    m<span>[</span><span>'L'</span><span>]</span> <span>=</span> <span>50</span><span>;</span>\n    m<span>[</span><span>'C'</span><span>]</span> <span>=</span> <span>100</span><span>;</span>\n    m<span>[</span><span>'D'</span><span>]</span> <span>=</span> <span>500</span><span>;</span>\n    m<span>[</span><span>'M'</span><span>]</span> <span>=</span> <span>1000</span><span>;</span>\n    <span>int</span> sum <span>=</span> <span>0</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> s<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> <span>++</span>i<span>)</span>\n      m<span>[</span>s<span>[</span>i<span>]</span><span>]</span> <span>&lt;</span> m<span>[</span>s<span>[</span>i <span>+</span> <span>1</span><span>]</span><span>]</span> <span>?</span> sum <span>-=</span> m<span>[</span>s<span>[</span>i<span>]</span><span>]</span> <span>:</span> sum <span>+=</span> m<span>[</span>s<span>[</span>i<span>]</span><span>]</span><span>;</span>\n    <span>return</span> sum<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br></div></div><h2 id=\"lmy\"> lmy</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>int</span> <span>romanToInt</span><span>(</span>string s<span>)</span> <span>{</span>\n    <span>int</span> l <span>=</span> s<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span>\n    <span>int</span> m<span>[</span><span>99</span><span>]</span> <span>=</span> <span>{</span><span>}</span><span>;</span>\n    m<span>[</span><span>'I'</span><span>]</span> <span>=</span> <span>1</span><span>;</span>\n    m<span>[</span><span>'V'</span><span>]</span> <span>=</span> <span>5</span><span>;</span>\n    m<span>[</span><span>'X'</span><span>]</span> <span>=</span> <span>10</span><span>;</span>\n    m<span>[</span><span>'L'</span><span>]</span> <span>=</span> <span>50</span><span>;</span>\n    m<span>[</span><span>'C'</span><span>]</span> <span>=</span> <span>100</span><span>;</span>\n    m<span>[</span><span>'D'</span><span>]</span> <span>=</span> <span>500</span><span>;</span>\n    m<span>[</span><span>'M'</span><span>]</span> <span>=</span> <span>1000</span><span>;</span>\n    <span>int</span> sum <span>=</span> <span>0</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> s<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      m<span>[</span>s<span>[</span>i<span>]</span><span>]</span> <span>&lt;</span> m<span>[</span>s<span>[</span>i <span>+</span> <span>1</span><span>]</span><span>]</span> <span>?</span> sum <span>-=</span> m<span>[</span>s<span>[</span>i<span>]</span><span>]</span> <span>:</span> sum <span>+=</span> m<span>[</span>s<span>[</span>i<span>]</span><span>]</span><span>;</span>\n    <span>}</span>\n    <span>return</span> sum<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div><h2 id=\"sqm\"> sqm</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>int</span> <span>romanToInt</span><span>(</span>string s<span>)</span> <span>{</span>\n    <span>int</span> l <span>=</span> s<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span>\n    <span>int</span> m<span>[</span><span>99</span><span>]</span> <span>=</span> <span>{</span><span>}</span><span>;</span>\n    m<span>[</span><span>'I'</span><span>]</span> <span>=</span> <span>1</span><span>;</span>\n    m<span>[</span><span>'V'</span><span>]</span> <span>=</span> <span>5</span><span>;</span>\n    m<span>[</span><span>'X'</span><span>]</span> <span>=</span> <span>10</span><span>;</span>\n    m<span>[</span><span>'L'</span><span>]</span> <span>=</span> <span>50</span><span>;</span>\n    m<span>[</span><span>'C'</span><span>]</span> <span>=</span> <span>100</span><span>;</span>\n    m<span>[</span><span>'D'</span><span>]</span> <span>=</span> <span>500</span><span>;</span>\n    m<span>[</span><span>'M'</span><span>]</span> <span>=</span> <span>1000</span><span>;</span>\n    <span>int</span> sum <span>=</span> <span>0</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> s<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      m<span>[</span>s<span>[</span>i<span>]</span><span>]</span> <span>&lt;</span> m<span>[</span>s<span>[</span>i <span>+</span> <span>1</span><span>]</span><span>]</span> <span>?</span> sum <span>-=</span> m<span>[</span>s<span>[</span>i<span>]</span><span>]</span> <span>:</span> sum <span>+=</span> m<span>[</span>s<span>[</span>i<span>]</span><span>]</span><span>;</span>\n    <span>}</span>\n    <span>return</span> sum<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.693Z",
      "authors": [
        {
          "name": "13. Roman to Integer"
        }
      ],
      "tags": [
        "C++"
      ]
    },
    {
      "title": "Java",
      "url": "https://leetcode.innenu.com/13-roman-to-integer/Java/",
      "id": "https://leetcode.innenu.com/13-roman-to-integer/Java/",
      "content_html": "<h2 id=\"lizncu\"> lizncu</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span> <span>romanToInt</span><span>(</span><span>String</span> s<span>)</span> <span>{</span>\n    <span>int</span> n <span>=</span> s<span>.</span><span>length</span><span>(</span><span>)</span><span>;</span>\n    <span>int</span> number <span>=</span> <span>0</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> n<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>switch</span> <span>(</span>s<span>.</span><span>charAt</span><span>(</span>i<span>)</span><span>)</span> <span>{</span>\n        <span>case</span> <span>'I'</span><span>:</span>\n          number <span>=</span> number <span>+</span> <span>1</span><span>;</span>\n          <span>break</span><span>;</span>\n        <span>case</span> <span>'V'</span><span>:</span>\n          number <span>=</span> number <span>+</span> <span>5</span><span>;</span>\n          <span>break</span><span>;</span>\n        <span>case</span> <span>'X'</span><span>:</span>\n          number <span>=</span> number <span>+</span> <span>10</span><span>;</span>\n          <span>break</span><span>;</span>\n        <span>case</span> <span>'L'</span><span>:</span>\n          number <span>=</span> number <span>+</span> <span>50</span><span>;</span>\n          <span>break</span><span>;</span>\n        <span>case</span> <span>'C'</span><span>:</span>\n          number <span>=</span> number <span>+</span> <span>100</span><span>;</span>\n          <span>break</span><span>;</span>\n        <span>case</span> <span>'D'</span><span>:</span>\n          number <span>=</span> number <span>+</span> <span>500</span><span>;</span>\n          <span>break</span><span>;</span>\n        <span>case</span> <span>'M'</span><span>:</span>\n          number <span>=</span> number <span>+</span> <span>1000</span><span>;</span>\n          <span>break</span><span>;</span>\n        <span>default</span><span>:</span>\n          <span>System</span><span>.</span>out<span>.</span><span>println</span><span>(</span><span>\"default\"</span><span>)</span><span>;</span>\n          <span>break</span><span>;</span>\n      <span>}</span>\n\n      <span>if</span> <span>(</span>i <span>></span> <span>0</span><span>)</span> <span>{</span>\n        <span>if</span> <span>(</span><span>(</span>s<span>.</span><span>charAt</span><span>(</span>i<span>)</span> <span>==</span> <span>'V'</span> <span>||</span> s<span>.</span><span>charAt</span><span>(</span>i<span>)</span> <span>==</span> <span>'X'</span><span>)</span> <span>&amp;&amp;</span> s<span>.</span><span>charAt</span><span>(</span>i <span>-</span> <span>1</span><span>)</span> <span>==</span> <span>'I'</span><span>)</span> <span>{</span>\n          number <span>-=</span> <span>2</span><span>;</span>\n        <span>}</span>\n        <span>if</span> <span>(</span><span>(</span>s<span>.</span><span>charAt</span><span>(</span>i<span>)</span> <span>==</span> <span>'L'</span> <span>||</span> s<span>.</span><span>charAt</span><span>(</span>i<span>)</span> <span>==</span> <span>'C'</span><span>)</span> <span>&amp;&amp;</span> s<span>.</span><span>charAt</span><span>(</span>i <span>-</span> <span>1</span><span>)</span> <span>==</span> <span>'X'</span><span>)</span> <span>{</span>\n          number <span>-=</span> <span>20</span><span>;</span>\n        <span>}</span>\n        <span>if</span> <span>(</span><span>(</span>s<span>.</span><span>charAt</span><span>(</span>i<span>)</span> <span>==</span> <span>'D'</span> <span>||</span> s<span>.</span><span>charAt</span><span>(</span>i<span>)</span> <span>==</span> <span>'M'</span><span>)</span> <span>&amp;&amp;</span> s<span>.</span><span>charAt</span><span>(</span>i <span>-</span> <span>1</span><span>)</span> <span>==</span> <span>'C'</span><span>)</span> <span>{</span>\n          number <span>-=</span> <span>200</span><span>;</span>\n        <span>}</span>\n      <span>}</span>\n    <span>}</span>\n    <span>return</span> number<span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.694Z",
      "authors": [
        {
          "name": "13. Roman to Integer"
        }
      ],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "JavaScript",
      "url": "https://leetcode.innenu.com/13-roman-to-integer/JavaScript/",
      "id": "https://leetcode.innenu.com/13-roman-to-integer/JavaScript/",
      "content_html": "<h2 id=\"mister-hope\"> Mister-Hope</h2>\n<div><pre><code><span>/**\n * Runtime: 160 ms, faster than 80.43% of JavaScript online submissions for Roman to Integer.\n *\n * Memory Usage: 43.6 MB, less than 5.78% of JavaScript online submissions for Roman to Integer.\n */</span>\n\n<span>const</span> <span>romanToInt</span> <span>=</span> <span>(</span><span>s</span><span>)</span> <span>=></span> <span>{</span>\n  <span>let</span> result <span>=</span> <span>0</span><span>,</span>\n    map <span>=</span> <span>{</span> <span>I</span><span>:</span> <span>1</span><span>,</span> <span>V</span><span>:</span> <span>5</span><span>,</span> <span>X</span><span>:</span> <span>10</span><span>,</span> <span>L</span><span>:</span> <span>50</span><span>,</span> <span>C</span><span>:</span> <span>100</span><span>,</span> <span>D</span><span>:</span> <span>500</span><span>,</span> <span>M</span><span>:</span> <span>1000</span> <span>}</span><span>;</span>\n  <span>for</span> <span>(</span><span>let</span> i <span>=</span> s<span>.</span>length <span>-</span> <span>1</span><span>;</span> i <span>>=</span> <span>0</span><span>;</span> i<span>--</span><span>)</span> <span>{</span>\n    <span>let</span> val <span>=</span> map<span>[</span>s<span>.</span><span>charAt</span><span>(</span>i<span>)</span><span>]</span><span>;</span>\n    <span>if</span> <span>(</span>i <span>&lt;</span> s<span>.</span>length <span>-</span> <span>1</span> <span>&amp;&amp;</span> val <span>&lt;</span> map<span>[</span>s<span>.</span><span>charAt</span><span>(</span>i <span>+</span> <span>1</span><span>)</span><span>]</span><span>)</span> val <span>=</span> <span>-</span>val<span>;</span>\n    result <span>+=</span> val<span>;</span>\n  <span>}</span>\n  <span>return</span> result<span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.694Z",
      "authors": [
        {
          "name": "13. Roman to Integer"
        }
      ],
      "tags": [
        "JavaScript"
      ]
    },
    {
      "title": "Mister-Hope",
      "url": "https://leetcode.innenu.com/13-roman-to-integer/Mister-Hope/",
      "id": "https://leetcode.innenu.com/13-roman-to-integer/Mister-Hope/",
      "content_html": "<h2 id=\"javascript\"> JavaScript</h2>\n<div><pre><code><span>/**\n * Runtime: 160 ms, faster than 80.43% of JavaScript online submissions for Roman to Integer.\n *\n * Memory Usage: 43.6 MB, less than 5.78% of JavaScript online submissions for Roman to Integer.\n */</span>\n\n<span>const</span> <span>romanToInt</span> <span>=</span> <span>(</span><span>s</span><span>)</span> <span>=></span> <span>{</span>\n  <span>let</span> result <span>=</span> <span>0</span><span>,</span>\n    map <span>=</span> <span>{</span> <span>I</span><span>:</span> <span>1</span><span>,</span> <span>V</span><span>:</span> <span>5</span><span>,</span> <span>X</span><span>:</span> <span>10</span><span>,</span> <span>L</span><span>:</span> <span>50</span><span>,</span> <span>C</span><span>:</span> <span>100</span><span>,</span> <span>D</span><span>:</span> <span>500</span><span>,</span> <span>M</span><span>:</span> <span>1000</span> <span>}</span><span>;</span>\n  <span>for</span> <span>(</span><span>let</span> i <span>=</span> s<span>.</span>length <span>-</span> <span>1</span><span>;</span> i <span>>=</span> <span>0</span><span>;</span> i<span>--</span><span>)</span> <span>{</span>\n    <span>let</span> val <span>=</span> map<span>[</span>s<span>.</span><span>charAt</span><span>(</span>i<span>)</span><span>]</span><span>;</span>\n    <span>if</span> <span>(</span>i <span>&lt;</span> s<span>.</span>length <span>-</span> <span>1</span> <span>&amp;&amp;</span> val <span>&lt;</span> map<span>[</span>s<span>.</span><span>charAt</span><span>(</span>i <span>+</span> <span>1</span><span>)</span><span>]</span><span>)</span> val <span>=</span> <span>-</span>val<span>;</span>\n    result <span>+=</span> val<span>;</span>\n  <span>}</span>\n  <span>return</span> result<span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div><h2 id=\"typescript\"> TypeScript</h2>\n<div><pre><code><span>/*\n * Runtime: 184 ms, faster than 27.46% of TypeScript online submissions for Roman to Integer.\n *\n * Memory Usage: 45.8 MB, less than 5.18% of TypeScript online submissions for Roman to Integer.\n */</span>\n\n<span>const</span> romanToInt <span>=</span> <span>(</span>s<span>:</span> <span>string</span><span>)</span><span>:</span> <span>number</span> <span>=></span> <span>{</span>\n  <span>let</span> result <span>=</span> <span>0</span><span>;</span>\n  <span>const</span> map<span>:</span> Record<span>&lt;</span><span>string</span><span>,</span> <span>number</span><span>></span> <span>=</span> <span>{</span>\n    <span>I</span><span>:</span> <span>1</span><span>,</span>\n    <span>V</span><span>:</span> <span>5</span><span>,</span>\n    <span>X</span><span>:</span> <span>10</span><span>,</span>\n    <span>L</span><span>:</span> <span>50</span><span>,</span>\n    <span>C</span><span>:</span> <span>100</span><span>,</span>\n    <span>D</span><span>:</span> <span>500</span><span>,</span>\n    <span>M</span><span>:</span> <span>1000</span><span>,</span>\n  <span>}</span><span>;</span>\n\n  <span>for</span> <span>(</span><span>let</span> i <span>=</span> s<span>.</span>length <span>-</span> <span>1</span><span>;</span> i <span>>=</span> <span>0</span><span>;</span> i<span>--</span><span>)</span> <span>{</span>\n    <span>let</span> val <span>=</span> map<span>[</span>s<span>.</span><span>charAt</span><span>(</span>i<span>)</span><span>]</span><span>;</span>\n    <span>if</span> <span>(</span>i <span>&lt;</span> s<span>.</span>length <span>-</span> <span>1</span> <span>&amp;&amp;</span> val <span>&lt;</span> map<span>[</span>s<span>.</span><span>charAt</span><span>(</span>i <span>+</span> <span>1</span><span>)</span><span>]</span><span>)</span> val <span>=</span> <span>-</span>val<span>;</span>\n    result <span>+=</span> val<span>;</span>\n  <span>}</span>\n  <span>return</span> result<span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.695Z",
      "authors": [
        {
          "name": "13. Roman to Integer"
        }
      ],
      "tags": [
        "Mister-Hope"
      ]
    },
    {
      "title": "TypeScript",
      "url": "https://leetcode.innenu.com/13-roman-to-integer/TypeScript/",
      "id": "https://leetcode.innenu.com/13-roman-to-integer/TypeScript/",
      "content_html": "<h2 id=\"mister-hope\"> Mister-Hope</h2>\n<div><pre><code><span>/*\n * Runtime: 184 ms, faster than 27.46% of TypeScript online submissions for Roman to Integer.\n *\n * Memory Usage: 45.8 MB, less than 5.18% of TypeScript online submissions for Roman to Integer.\n */</span>\n\n<span>const</span> romanToInt <span>=</span> <span>(</span>s<span>:</span> <span>string</span><span>)</span><span>:</span> <span>number</span> <span>=></span> <span>{</span>\n  <span>let</span> result <span>=</span> <span>0</span><span>;</span>\n  <span>const</span> map<span>:</span> Record<span>&lt;</span><span>string</span><span>,</span> <span>number</span><span>></span> <span>=</span> <span>{</span>\n    <span>I</span><span>:</span> <span>1</span><span>,</span>\n    <span>V</span><span>:</span> <span>5</span><span>,</span>\n    <span>X</span><span>:</span> <span>10</span><span>,</span>\n    <span>L</span><span>:</span> <span>50</span><span>,</span>\n    <span>C</span><span>:</span> <span>100</span><span>,</span>\n    <span>D</span><span>:</span> <span>500</span><span>,</span>\n    <span>M</span><span>:</span> <span>1000</span><span>,</span>\n  <span>}</span><span>;</span>\n\n  <span>for</span> <span>(</span><span>let</span> i <span>=</span> s<span>.</span>length <span>-</span> <span>1</span><span>;</span> i <span>>=</span> <span>0</span><span>;</span> i<span>--</span><span>)</span> <span>{</span>\n    <span>let</span> val <span>=</span> map<span>[</span>s<span>.</span><span>charAt</span><span>(</span>i<span>)</span><span>]</span><span>;</span>\n    <span>if</span> <span>(</span>i <span>&lt;</span> s<span>.</span>length <span>-</span> <span>1</span> <span>&amp;&amp;</span> val <span>&lt;</span> map<span>[</span>s<span>.</span><span>charAt</span><span>(</span>i <span>+</span> <span>1</span><span>)</span><span>]</span><span>)</span> val <span>=</span> <span>-</span>val<span>;</span>\n    result <span>+=</span> val<span>;</span>\n  <span>}</span>\n  <span>return</span> result<span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.695Z",
      "authors": [
        {
          "name": "13. Roman to Integer"
        }
      ],
      "tags": [
        "TypeScript"
      ]
    },
    {
      "title": "Virgil",
      "url": "https://leetcode.innenu.com/13-roman-to-integer/Virgil/",
      "id": "https://leetcode.innenu.com/13-roman-to-integer/Virgil/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>\n<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>int</span> <span>romanToInt</span><span>(</span>string s<span>)</span> <span>{</span>\n    <span>int</span> m<span>[</span><span>90</span><span>]</span> <span>=</span> <span>{</span><span>}</span><span>;</span>\n    m<span>[</span><span>'I'</span><span>]</span> <span>=</span> <span>1</span><span>;</span>\n    m<span>[</span><span>'V'</span><span>]</span> <span>=</span> <span>5</span><span>;</span>\n    m<span>[</span><span>'X'</span><span>]</span> <span>=</span> <span>10</span><span>;</span>\n    m<span>[</span><span>'L'</span><span>]</span> <span>=</span> <span>50</span><span>;</span>\n    m<span>[</span><span>'C'</span><span>]</span> <span>=</span> <span>100</span><span>;</span>\n    m<span>[</span><span>'D'</span><span>]</span> <span>=</span> <span>500</span><span>;</span>\n    m<span>[</span><span>'M'</span><span>]</span> <span>=</span> <span>1000</span><span>;</span>\n    <span>int</span> sum <span>=</span> <span>0</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> s<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> <span>++</span>i<span>)</span>\n      m<span>[</span>s<span>[</span>i<span>]</span><span>]</span> <span>&lt;</span> m<span>[</span>s<span>[</span>i <span>+</span> <span>1</span><span>]</span><span>]</span> <span>?</span> sum <span>-=</span> m<span>[</span>s<span>[</span>i<span>]</span><span>]</span> <span>:</span> sum <span>+=</span> m<span>[</span>s<span>[</span>i<span>]</span><span>]</span><span>;</span>\n    <span>return</span> sum<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.696Z",
      "authors": [
        {
          "name": "13. Roman to Integer"
        }
      ],
      "tags": [
        "Virgil"
      ]
    },
    {
      "title": "lizncu",
      "url": "https://leetcode.innenu.com/13-roman-to-integer/lizncu/",
      "id": "https://leetcode.innenu.com/13-roman-to-integer/lizncu/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span> <span>romanToInt</span><span>(</span><span>String</span> s<span>)</span> <span>{</span>\n    <span>int</span> n <span>=</span> s<span>.</span><span>length</span><span>(</span><span>)</span><span>;</span>\n    <span>int</span> number <span>=</span> <span>0</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> n<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>switch</span> <span>(</span>s<span>.</span><span>charAt</span><span>(</span>i<span>)</span><span>)</span> <span>{</span>\n        <span>case</span> <span>'I'</span><span>:</span>\n          number <span>=</span> number <span>+</span> <span>1</span><span>;</span>\n          <span>break</span><span>;</span>\n        <span>case</span> <span>'V'</span><span>:</span>\n          number <span>=</span> number <span>+</span> <span>5</span><span>;</span>\n          <span>break</span><span>;</span>\n        <span>case</span> <span>'X'</span><span>:</span>\n          number <span>=</span> number <span>+</span> <span>10</span><span>;</span>\n          <span>break</span><span>;</span>\n        <span>case</span> <span>'L'</span><span>:</span>\n          number <span>=</span> number <span>+</span> <span>50</span><span>;</span>\n          <span>break</span><span>;</span>\n        <span>case</span> <span>'C'</span><span>:</span>\n          number <span>=</span> number <span>+</span> <span>100</span><span>;</span>\n          <span>break</span><span>;</span>\n        <span>case</span> <span>'D'</span><span>:</span>\n          number <span>=</span> number <span>+</span> <span>500</span><span>;</span>\n          <span>break</span><span>;</span>\n        <span>case</span> <span>'M'</span><span>:</span>\n          number <span>=</span> number <span>+</span> <span>1000</span><span>;</span>\n          <span>break</span><span>;</span>\n        <span>default</span><span>:</span>\n          <span>System</span><span>.</span>out<span>.</span><span>println</span><span>(</span><span>\"default\"</span><span>)</span><span>;</span>\n          <span>break</span><span>;</span>\n      <span>}</span>\n\n      <span>if</span> <span>(</span>i <span>></span> <span>0</span><span>)</span> <span>{</span>\n        <span>if</span> <span>(</span><span>(</span>s<span>.</span><span>charAt</span><span>(</span>i<span>)</span> <span>==</span> <span>'V'</span> <span>||</span> s<span>.</span><span>charAt</span><span>(</span>i<span>)</span> <span>==</span> <span>'X'</span><span>)</span> <span>&amp;&amp;</span> s<span>.</span><span>charAt</span><span>(</span>i <span>-</span> <span>1</span><span>)</span> <span>==</span> <span>'I'</span><span>)</span> <span>{</span>\n          number <span>-=</span> <span>2</span><span>;</span>\n        <span>}</span>\n        <span>if</span> <span>(</span><span>(</span>s<span>.</span><span>charAt</span><span>(</span>i<span>)</span> <span>==</span> <span>'L'</span> <span>||</span> s<span>.</span><span>charAt</span><span>(</span>i<span>)</span> <span>==</span> <span>'C'</span><span>)</span> <span>&amp;&amp;</span> s<span>.</span><span>charAt</span><span>(</span>i <span>-</span> <span>1</span><span>)</span> <span>==</span> <span>'X'</span><span>)</span> <span>{</span>\n          number <span>-=</span> <span>20</span><span>;</span>\n        <span>}</span>\n        <span>if</span> <span>(</span><span>(</span>s<span>.</span><span>charAt</span><span>(</span>i<span>)</span> <span>==</span> <span>'D'</span> <span>||</span> s<span>.</span><span>charAt</span><span>(</span>i<span>)</span> <span>==</span> <span>'M'</span><span>)</span> <span>&amp;&amp;</span> s<span>.</span><span>charAt</span><span>(</span>i <span>-</span> <span>1</span><span>)</span> <span>==</span> <span>'C'</span><span>)</span> <span>{</span>\n          number <span>-=</span> <span>200</span><span>;</span>\n        <span>}</span>\n      <span>}</span>\n    <span>}</span>\n    <span>return</span> number<span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.696Z",
      "authors": [
        {
          "name": "13. Roman to Integer"
        }
      ],
      "tags": [
        "lizncu"
      ]
    },
    {
      "title": "lmy",
      "url": "https://leetcode.innenu.com/13-roman-to-integer/lmy/",
      "id": "https://leetcode.innenu.com/13-roman-to-integer/lmy/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>int</span> <span>romanToInt</span><span>(</span>string s<span>)</span> <span>{</span>\n    <span>int</span> l <span>=</span> s<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span>\n    <span>int</span> m<span>[</span><span>99</span><span>]</span> <span>=</span> <span>{</span><span>}</span><span>;</span>\n    m<span>[</span><span>'I'</span><span>]</span> <span>=</span> <span>1</span><span>;</span>\n    m<span>[</span><span>'V'</span><span>]</span> <span>=</span> <span>5</span><span>;</span>\n    m<span>[</span><span>'X'</span><span>]</span> <span>=</span> <span>10</span><span>;</span>\n    m<span>[</span><span>'L'</span><span>]</span> <span>=</span> <span>50</span><span>;</span>\n    m<span>[</span><span>'C'</span><span>]</span> <span>=</span> <span>100</span><span>;</span>\n    m<span>[</span><span>'D'</span><span>]</span> <span>=</span> <span>500</span><span>;</span>\n    m<span>[</span><span>'M'</span><span>]</span> <span>=</span> <span>1000</span><span>;</span>\n    <span>int</span> sum <span>=</span> <span>0</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> s<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      m<span>[</span>s<span>[</span>i<span>]</span><span>]</span> <span>&lt;</span> m<span>[</span>s<span>[</span>i <span>+</span> <span>1</span><span>]</span><span>]</span> <span>?</span> sum <span>-=</span> m<span>[</span>s<span>[</span>i<span>]</span><span>]</span> <span>:</span> sum <span>+=</span> m<span>[</span>s<span>[</span>i<span>]</span><span>]</span><span>;</span>\n    <span>}</span>\n    <span>return</span> sum<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.697Z",
      "authors": [
        {
          "name": "13. Roman to Integer"
        }
      ],
      "tags": [
        "lmy"
      ]
    },
    {
      "title": "13. Roman to Integer",
      "url": "https://leetcode.innenu.com/13-roman-to-integer/",
      "id": "https://leetcode.innenu.com/13-roman-to-integer/",
      "content_html": "<h1 id=\"_13-roman-to-integer\"> <a href=\"https://leetcode.com/problems/roman-to-integer/\" target=\"_blank\" rel=\"noopener noreferrer\">13. Roman to Integer</a></h1>\n<p>Roman numerals are represented by seven different symbols: <code>I</code>, <code>V</code>, <code>X</code>, <code>L</code>, <code>C</code>, <code>D</code> and <code>M</code>.</p>\n<table>\n<thead>\n<tr>\n<th>Symbol</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>I</td>\n<td>1</td>\n</tr>\n<tr>\n<td>V</td>\n<td>5</td>\n</tr>\n<tr>\n<td>X</td>\n<td>10</td>\n</tr>\n<tr>\n<td>L</td>\n<td>50</td>\n</tr>\n<tr>\n<td>C</td>\n<td>100</td>\n</tr>\n<tr>\n<td>D</td>\n<td>500</td>\n</tr>\n<tr>\n<td>M</td>\n<td>1000</td>\n</tr>\n</tbody>\n</table>\n<p>For example, <code>2</code> is written as <code>II</code> in Roman numeral, just two one's added together. <code>12</code> is written as <code>XII</code>, which is simply <code>X + II</code>. The number <code>27</code> is written as <code>XXVII</code>, which is <code>XX + V + II</code>.</p>\n<p>Roman numerals are usually written largest to smallest from left to right. However, the numeral for four is not <code>IIII</code>. Instead, the number four is written as <code>IV</code>. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as <code>IX</code>. There are six instances where subtraction is used:</p>\n<ul>\n<li><code>I</code> can be placed before <code>V</code> (5) and <code>X</code> (10) to make 4 and 9.</li>\n<li><code>X</code> can be placed before <code>L</code> (50) and <code>C</code> (100) to make 40 and 90.</li>\n<li><code>C</code> can be placed before <code>D</code> (500) and <code>M</code> (1000) to make 400 and 900.</li>\n</ul>\n<p>Given a roman numeral, convert it to an integer.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> s = &quot;III&quot;</p>\n<p><strong>Output:</strong> 3</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> s = &quot;IV&quot;</p>\n<p><strong>Output:</strong> 4</p>\n<p><strong>Example 3:</strong></p>\n<p><strong>Input:</strong> s = &quot;IX&quot;</p>\n<p><strong>Output:</strong> 9</p>\n<p><strong>Example 4:</strong></p>\n<p><strong>Input:</strong> s = &quot;LVIII&quot;</p>\n<p><strong>Output:</strong> 58</p>\n<p><strong>Explanation:</strong> L = 50, V= 5, III = 3.</p>\n<p><strong>Example 5:</strong></p>\n<p><strong>Input:</strong> s = &quot;MCMXCIV&quot;</p>\n<p><strong>Output:</strong> 1994</p>\n<p><strong>Explanation:</strong> M = 1000, CM = 900, XC = 90 and IV = 4.</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>1 &lt;= s.length &lt;= 15</code></li>\n<li><code>s</code> contains only the characters <code>('I', 'V', 'X', 'L', 'C', 'D', 'M')</code>.</li>\n<li>It is <strong>guaranteed</strong> that <code>s</code> is a valid roman numeral in the range <code>[1, 3999]</code>.</li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "sqm",
      "url": "https://leetcode.innenu.com/13-roman-to-integer/sqm/",
      "id": "https://leetcode.innenu.com/13-roman-to-integer/sqm/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>int</span> <span>romanToInt</span><span>(</span>string s<span>)</span> <span>{</span>\n    <span>int</span> l <span>=</span> s<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span>\n    <span>int</span> m<span>[</span><span>99</span><span>]</span> <span>=</span> <span>{</span><span>}</span><span>;</span>\n    m<span>[</span><span>'I'</span><span>]</span> <span>=</span> <span>1</span><span>;</span>\n    m<span>[</span><span>'V'</span><span>]</span> <span>=</span> <span>5</span><span>;</span>\n    m<span>[</span><span>'X'</span><span>]</span> <span>=</span> <span>10</span><span>;</span>\n    m<span>[</span><span>'L'</span><span>]</span> <span>=</span> <span>50</span><span>;</span>\n    m<span>[</span><span>'C'</span><span>]</span> <span>=</span> <span>100</span><span>;</span>\n    m<span>[</span><span>'D'</span><span>]</span> <span>=</span> <span>500</span><span>;</span>\n    m<span>[</span><span>'M'</span><span>]</span> <span>=</span> <span>1000</span><span>;</span>\n    <span>int</span> sum <span>=</span> <span>0</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> s<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      m<span>[</span>s<span>[</span>i<span>]</span><span>]</span> <span>&lt;</span> m<span>[</span>s<span>[</span>i <span>+</span> <span>1</span><span>]</span><span>]</span> <span>?</span> sum <span>-=</span> m<span>[</span>s<span>[</span>i<span>]</span><span>]</span> <span>:</span> sum <span>+=</span> m<span>[</span>s<span>[</span>i<span>]</span><span>]</span><span>;</span>\n    <span>}</span>\n    <span>return</span> sum<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.709Z",
      "authors": [
        {
          "name": "13. Roman to Integer"
        }
      ],
      "tags": [
        "sqm"
      ]
    },
    {
      "title": "Java",
      "url": "https://leetcode.innenu.com/1313-Decompress-Run-Length-Encoded-List/Java/",
      "id": "https://leetcode.innenu.com/1313-Decompress-Run-Length-Encoded-List/Java/",
      "content_html": "<h2 id=\"lizncu\"> lizncu</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>decompressRLElist</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>)</span> <span>{</span>\n    <span>int</span> mount <span>=</span> <span>0</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i <span>=</span> i <span>+</span> <span>2</span><span>)</span> <span>{</span>\n      mount <span>+=</span> nums<span>[</span>i<span>]</span><span>;</span>\n    <span>}</span>\n\n    <span>int</span><span>[</span><span>]</span> ans <span>=</span> <span>new</span> <span>int</span><span>[</span>mount<span>]</span><span>;</span>\n\n    <span>int</span> count <span>=</span> <span>0</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>+</span> <span>1</span> <span>&lt;</span> nums<span>.</span>length<span>;</span> i <span>=</span> i <span>+</span> <span>2</span><span>)</span> <span>{</span>\n      <span>for</span> <span>(</span><span>int</span> j <span>=</span> nums<span>[</span>i<span>]</span><span>;</span> j <span>></span> <span>0</span><span>;</span> j<span>--</span><span>)</span> <span>{</span>\n        ans<span>[</span>count<span>++</span><span>]</span> <span>=</span> nums<span>[</span>i <span>+</span> <span>1</span><span>]</span><span>;</span>\n      <span>}</span>\n    <span>}</span>\n\n    <span>return</span> ans<span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.710Z",
      "authors": [
        {
          "name": "1313. Decompress Run Length Encoded List"
        }
      ],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "lizncu",
      "url": "https://leetcode.innenu.com/1313-Decompress-Run-Length-Encoded-List/lizncu/",
      "id": "https://leetcode.innenu.com/1313-Decompress-Run-Length-Encoded-List/lizncu/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>decompressRLElist</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>)</span> <span>{</span>\n    <span>int</span> mount <span>=</span> <span>0</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i <span>=</span> i <span>+</span> <span>2</span><span>)</span> <span>{</span>\n      mount <span>+=</span> nums<span>[</span>i<span>]</span><span>;</span>\n    <span>}</span>\n\n    <span>int</span><span>[</span><span>]</span> ans <span>=</span> <span>new</span> <span>int</span><span>[</span>mount<span>]</span><span>;</span>\n\n    <span>int</span> count <span>=</span> <span>0</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>+</span> <span>1</span> <span>&lt;</span> nums<span>.</span>length<span>;</span> i <span>=</span> i <span>+</span> <span>2</span><span>)</span> <span>{</span>\n      <span>for</span> <span>(</span><span>int</span> j <span>=</span> nums<span>[</span>i<span>]</span><span>;</span> j <span>></span> <span>0</span><span>;</span> j<span>--</span><span>)</span> <span>{</span>\n        ans<span>[</span>count<span>++</span><span>]</span> <span>=</span> nums<span>[</span>i <span>+</span> <span>1</span><span>]</span><span>;</span>\n      <span>}</span>\n    <span>}</span>\n\n    <span>return</span> ans<span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.710Z",
      "authors": [
        {
          "name": "1313. Decompress Run Length Encoded List"
        }
      ],
      "tags": [
        "lizncu"
      ]
    },
    {
      "title": "1313. Decompress Run-Length Encoded List",
      "url": "https://leetcode.innenu.com/1313-Decompress-Run-Length-Encoded-List/",
      "id": "https://leetcode.innenu.com/1313-Decompress-Run-Length-Encoded-List/",
      "content_html": "<h1 id=\"_1313-decompress-run-length-encoded-list\"> <a href=\"https://leetcode.com/problems/decompress-run-length-encoded-list/\" target=\"_blank\" rel=\"noopener noreferrer\">1313. Decompress Run-Length Encoded List</a></h1>\n<p>We are given a list <code>nums</code> of integers representing a list compressed with run-length encoding.</p>\n<p>Consider each adjacent pair of elements <code>[freq, val] = [nums[2*i], nums[2*i+1]]</code> (with <code>i &gt;= 0</code>). For each such pair, there are <code>freq</code> elements with value <code>val</code> concatenated in a sublist. Concatenate all the sublists from left to right to generate the decompressed list.</p>\n<p>Return the decompressed list.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> nums = [1,2,3,4]</p>\n<p><strong>Output:</strong> [2,4,4,4]</p>\n<p><strong>Explanation:</strong> The first pair [1,2] means we have freq = 1 and val = 2 so we generate the array [2].\nThe second pair [3,4] means we have freq = 3 and val = 4 so we generate [4,4,4].\nAt the end the concatenation [2] + [4,4,4] is [2,4,4,4].</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> nums = [1,1,2,3]</p>\n<p><strong>Output:</strong> [1,3,3]</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>2 &lt;= nums.length &lt;= 100</code></li>\n<li><code>nums.length % 2 == 0</code></li>\n<li><code>1 &lt;= nums[i] &lt;= 100</code></li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "Java",
      "url": "https://leetcode.innenu.com/1317-Convert-Integer-to-the-Sum-of-Two-No-Zero-Integers/Java/",
      "id": "https://leetcode.innenu.com/1317-Convert-Integer-to-the-Sum-of-Two-No-Zero-Integers/Java/",
      "content_html": "<h2 id=\"lizncu\"> lizncu</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>getNoZeroIntegers</span><span>(</span><span>int</span> n<span>)</span> <span>{</span>\n    <span>int</span> i <span>=</span> <span>1</span><span>;</span>\n    <span>int</span> j <span>=</span> n <span>-</span> i<span>;</span>\n    <span>while</span> <span>(</span><span>true</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span><span>!</span><span>String</span><span>.</span><span>valueOf</span><span>(</span>i<span>)</span><span>.</span><span>contains</span><span>(</span><span>\"0\"</span><span>)</span> <span>&amp;&amp;</span> <span>!</span><span>String</span><span>.</span><span>valueOf</span><span>(</span>j<span>)</span><span>.</span><span>contains</span><span>(</span><span>\"0\"</span><span>)</span><span>)</span>\n        <span>return</span> <span>new</span> <span>int</span><span>[</span><span>]</span> <span>{</span>i<span>,</span> j<span>}</span><span>;</span>\n      i <span>+=</span> <span>1</span><span>;</span>\n      j <span>=</span> n <span>-</span> i<span>;</span>\n    <span>}</span>\n  <span>}</span>\n<span>}</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.711Z",
      "authors": [
        {
          "name": "1317. Convert Integer to the Sum of Two No Zero Integers"
        }
      ],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "lizncu",
      "url": "https://leetcode.innenu.com/1317-Convert-Integer-to-the-Sum-of-Two-No-Zero-Integers/lizncu/",
      "id": "https://leetcode.innenu.com/1317-Convert-Integer-to-the-Sum-of-Two-No-Zero-Integers/lizncu/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>getNoZeroIntegers</span><span>(</span><span>int</span> n<span>)</span> <span>{</span>\n    <span>int</span> i <span>=</span> <span>1</span><span>;</span>\n    <span>int</span> j <span>=</span> n <span>-</span> i<span>;</span>\n    <span>while</span> <span>(</span><span>true</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span><span>!</span><span>String</span><span>.</span><span>valueOf</span><span>(</span>i<span>)</span><span>.</span><span>contains</span><span>(</span><span>\"0\"</span><span>)</span> <span>&amp;&amp;</span> <span>!</span><span>String</span><span>.</span><span>valueOf</span><span>(</span>j<span>)</span><span>.</span><span>contains</span><span>(</span><span>\"0\"</span><span>)</span><span>)</span>\n        <span>return</span> <span>new</span> <span>int</span><span>[</span><span>]</span> <span>{</span>i<span>,</span> j<span>}</span><span>;</span>\n      i <span>+=</span> <span>1</span><span>;</span>\n      j <span>=</span> n <span>-</span> i<span>;</span>\n    <span>}</span>\n  <span>}</span>\n<span>}</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.711Z",
      "authors": [
        {
          "name": "1317. Convert Integer to the Sum of Two No Zero Integers"
        }
      ],
      "tags": [
        "lizncu"
      ]
    },
    {
      "title": "1317. Convert Integer to the Sum of Two No-Zero Integers",
      "url": "https://leetcode.innenu.com/1317-Convert-Integer-to-the-Sum-of-Two-No-Zero-Integers/",
      "id": "https://leetcode.innenu.com/1317-Convert-Integer-to-the-Sum-of-Two-No-Zero-Integers/",
      "content_html": "<h1 id=\"_1317-convert-integer-to-the-sum-of-two-no-zero-integers\"> <a href=\"https://leetcode.com/problems/convert-integer-to-the-sum-of-two-no-zero-integers/\" target=\"_blank\" rel=\"noopener noreferrer\">1317. Convert Integer to the Sum of Two No-Zero Integers</a></h1>\n<p>Given an integer <code>n</code>. No-Zero integer is a positive integer which <strong>doesn't contain any 0</strong> in its decimal representation.</p>\n<p>Return <em>a list of two integers</em> <code>[A, B]</code> where:</p>\n<ul>\n<li><code>A</code> and <code>B</code> are No-Zero integers.</li>\n<li><span><span><i>Not supported content</i></span><span aria-hidden=\"true\"><span><span style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span>A</span><span style=\"margin-right:0.2222222222222222em;\"></span><span>+</span><span style=\"margin-right:0.2222222222222222em;\"></span></span><span><span style=\"height:0.68333em;vertical-align:0em;\"></span><span style=\"margin-right:0.05017em;\">B</span><span style=\"margin-right:0.2777777777777778em;\"></span><span>=</span><span style=\"margin-right:0.2777777777777778em;\"></span></span><span><span style=\"height:0.43056em;vertical-align:0em;\"></span><span>n</span></span></span></span></li>\n</ul>\n<p>It's guarateed that there is at least one valid solution. If there are many valid solutions you can return any of them.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> n = 2</p>\n<p><strong>Output:</strong> [1,1]</p>\n<p><strong>Explanation:</strong> <span><span><i>Not supported content</i></span><span aria-hidden=\"true\"><span><span style=\"height:0.68333em;vertical-align:0em;\"></span><span>A</span><span style=\"margin-right:0.2777777777777778em;\"></span><span>=</span><span style=\"margin-right:0.2777777777777778em;\"></span></span><span><span style=\"height:0.64444em;vertical-align:0em;\"></span><span>1</span></span></span></span>, $B = 1. <span><span><i>Not supported content</i></span><span aria-hidden=\"true\"><span><span style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span>A</span><span style=\"margin-right:0.2222222222222222em;\"></span><span>+</span><span style=\"margin-right:0.2222222222222222em;\"></span></span><span><span style=\"height:0.68333em;vertical-align:0em;\"></span><span style=\"margin-right:0.05017em;\">B</span><span style=\"margin-right:0.2777777777777778em;\"></span><span>=</span><span style=\"margin-right:0.2777777777777778em;\"></span></span><span><span style=\"height:0.43056em;vertical-align:0em;\"></span><span>n</span></span></span></span> and both <span><span><i>Not supported content</i></span><span aria-hidden=\"true\"><span><span style=\"height:0.68333em;vertical-align:0em;\"></span><span>A</span></span></span></span> and <span><span><i>Not supported content</i></span><span aria-hidden=\"true\"><span><span style=\"height:0.68333em;vertical-align:0em;\"></span><span style=\"margin-right:0.05017em;\">B</span></span></span></span> don't contain any <span><span><i>Not supported content</i></span><span aria-hidden=\"true\"><span><span style=\"height:0.64444em;vertical-align:0em;\"></span><span>0</span></span></span></span> in their decimal representation.</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> n = 11</p>\n<p><strong>Output:</strong> [2,9]</p>\n<p><strong>Example 3:</strong></p>\n<p><strong>Input:</strong> n = 10000</p>\n<p><strong>Output:</strong> [1,9999]</p>\n<p><strong>Example 4:</strong></p>\n<p><strong>Input:</strong> n = 69</p>\n<p><strong>Output:</strong> [1,68]</p>\n<p><strong>Example 5:</strong></p>\n<p><strong>Input:</strong> n = 1010</p>\n<p><strong>Output:</strong> [11,999]</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><span><span><i>Not supported content</i></span><span aria-hidden=\"true\"><span><span style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span>2</span><span style=\"margin-right:0.2777777777777778em;\"></span><span>≤</span><span style=\"margin-right:0.2777777777777778em;\"></span></span><span><span style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span>n</span><span style=\"margin-right:0.2777777777777778em;\"></span><span>≤</span><span style=\"margin-right:0.2777777777777778em;\"></span></span><span><span style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span>1</span><span><span>0</span><span><span><span><span style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span style=\"height:2.7em;\"></span><span><span>4</span></span></span></span></span></span></span></span></span></span></span></li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "Java",
      "url": "https://leetcode.innenu.com/1323-Maximum-69-Number/Java/",
      "id": "https://leetcode.innenu.com/1323-Maximum-69-Number/Java/",
      "content_html": "<h2 id=\"lizncu\"> lizncu</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span> <span>maximum69Number</span><span>(</span><span>int</span> num<span>)</span> <span>{</span>\n    <span>return</span> <span>Integer</span><span>.</span><span>valueOf</span><span>(</span><span>String</span><span>.</span><span>valueOf</span><span>(</span>num<span>)</span><span>.</span><span>replaceFirst</span><span>(</span><span>\"6\"</span><span>,</span> <span>\"9\"</span><span>)</span><span>)</span><span>;</span>\n  <span>}</span>\n<span>}</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.723Z",
      "authors": [
        {
          "name": "1323. Maximum 69 Number"
        }
      ],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "lizncu",
      "url": "https://leetcode.innenu.com/1323-Maximum-69-Number/lizncu/",
      "id": "https://leetcode.innenu.com/1323-Maximum-69-Number/lizncu/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span> <span>maximum69Number</span><span>(</span><span>int</span> num<span>)</span> <span>{</span>\n    <span>return</span> <span>Integer</span><span>.</span><span>valueOf</span><span>(</span><span>String</span><span>.</span><span>valueOf</span><span>(</span>num<span>)</span><span>.</span><span>replaceFirst</span><span>(</span><span>\"6\"</span><span>,</span> <span>\"9\"</span><span>)</span><span>)</span><span>;</span>\n  <span>}</span>\n<span>}</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.723Z",
      "authors": [
        {
          "name": "1323. Maximum 69 Number"
        }
      ],
      "tags": [
        "lizncu"
      ]
    },
    {
      "title": "1323. Maximum 69 Number",
      "url": "https://leetcode.innenu.com/1323-Maximum-69-Number/",
      "id": "https://leetcode.innenu.com/1323-Maximum-69-Number/",
      "content_html": "<h1 id=\"_1323-maximum-69-number\"> <a href=\"https://leetcode.com/problems/maximum-69-number/\" target=\"_blank\" rel=\"noopener noreferrer\">1323. Maximum 69 Number</a></h1>\n<p>Given a positive integer <code>num</code> consisting only of digits 6 and 9.</p>\n<p>Return the maximum number you can get by changing <strong>at most</strong> one digit (6 becomes 9, and 9 becomes 6).</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> num = 9669</p>\n<p><strong>Output:</strong> 9969</p>\n<p><strong>Explanation:</strong></p>\n<p>Changing the first digit results in 6669.</p>\n<p>Changing the second digit results in 9969.</p>\n<p>Changing the third digit results in 9699.</p>\n<p>Changing the fourth digit results in 9666.</p>\n<p>The maximum number is 9969.</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> num = 9996</p>\n<p><strong>Output:</strong> 9999</p>\n<p><strong>Explanation:</strong> Changing the last digit 6 to 9 results in the maximum number.</p>\n<p><strong>Example 3:</strong></p>\n<p><strong>Input:</strong> num = 9999</p>\n<p><strong>Output:</strong> 9999</p>\n<p><strong>Explanation:</strong> It is better not to apply any change.</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li>1 &lt;= num &lt;= 10<sup>4</sup></li>\n<li><code>num</code>'s digits are 6 or 9.</li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "Java",
      "url": "https://leetcode.innenu.com/1342-Number-of-Steps-to-Reduce-a-Number-to-Zero/Java/",
      "id": "https://leetcode.innenu.com/1342-Number-of-Steps-to-Reduce-a-Number-to-Zero/Java/",
      "content_html": "<h2 id=\"lizncu\"> lizncu</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span> <span>numberOfSteps</span><span>(</span><span>int</span> num<span>)</span> <span>{</span>\n    <span>int</span> count <span>=</span> <span>0</span><span>;</span>\n\n    <span>while</span> <span>(</span>num <span>!=</span> <span>0</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>num <span>%</span> <span>2</span> <span>==</span> <span>0</span><span>)</span> <span>{</span>\n        num <span>/=</span> <span>2</span><span>;</span>\n      <span>}</span> <span>else</span> <span>{</span>\n        num<span>--</span><span>;</span>\n      <span>}</span>\n      count<span>++</span><span>;</span>\n    <span>}</span>\n\n    <span>return</span> count<span>;</span>\n  <span>}</span>\n<span>}</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.724Z",
      "authors": [
        {
          "name": "1342. Number of Steps to Reduce a Number to Zero"
        }
      ],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "lizncu",
      "url": "https://leetcode.innenu.com/1342-Number-of-Steps-to-Reduce-a-Number-to-Zero/lizncu/",
      "id": "https://leetcode.innenu.com/1342-Number-of-Steps-to-Reduce-a-Number-to-Zero/lizncu/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span> <span>numberOfSteps</span><span>(</span><span>int</span> num<span>)</span> <span>{</span>\n    <span>int</span> count <span>=</span> <span>0</span><span>;</span>\n\n    <span>while</span> <span>(</span>num <span>!=</span> <span>0</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>num <span>%</span> <span>2</span> <span>==</span> <span>0</span><span>)</span> <span>{</span>\n        num <span>/=</span> <span>2</span><span>;</span>\n      <span>}</span> <span>else</span> <span>{</span>\n        num<span>--</span><span>;</span>\n      <span>}</span>\n      count<span>++</span><span>;</span>\n    <span>}</span>\n\n    <span>return</span> count<span>;</span>\n  <span>}</span>\n<span>}</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.724Z",
      "authors": [
        {
          "name": "1342. Number of Steps to Reduce a Number to Zero"
        }
      ],
      "tags": [
        "lizncu"
      ]
    },
    {
      "title": "1342. Number of Steps to Reduce a Number to Zero",
      "url": "https://leetcode.innenu.com/1342-Number-of-Steps-to-Reduce-a-Number-to-Zero/",
      "id": "https://leetcode.innenu.com/1342-Number-of-Steps-to-Reduce-a-Number-to-Zero/",
      "content_html": "<h1 id=\"_1342-number-of-steps-to-reduce-a-number-to-zero\"> <a href=\"https://leetcode.com/problems/number-of-steps-to-reduce-a-number-to-zero/\" target=\"_blank\" rel=\"noopener noreferrer\">1342. Number of Steps to Reduce a Number to Zero</a></h1>\n<p>Given a non-negative integer <code>num</code>, return the number of steps to reduce it to zero. If the current number is even, you have to divide it by 2, otherwise, you have to subtract 1 from it.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> num = 14</p>\n<p><strong>Output:</strong> 6</p>\n<p><strong>Explanation:</strong></p>\n<p>Step 1: 14 is even; divide by 2 and obtain 7.</p>\n<p>Step 2: 7 is odd; subtract 1 and obtain 6.</p>\n<p>Step 3: 6 is even; divide by 2 and obtain 3.</p>\n<p>Step 4: 3 is odd; subtract 1 and obtain 2.</p>\n<p>Step 5: 2 is even; divide by 2 and obtain 1.</p>\n<p>Step 6: 1 is odd; subtract 1 and obtain 0.</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> num = 8</p>\n<p><strong>Output:</strong> 4</p>\n<p><strong>Explanation:</strong></p>\n<p>Step 1: 8 is even; divide by 2 and obtain 4.</p>\n<p>Step 2: 4 is even; divide by 2 and obtain 2.</p>\n<p>Step 3: 2 is even; divide by 2 and obtain 1.</p>\n<p>Step 4: 1 is odd; subtract 1 and obtain 0.</p>\n<p><strong>Example 3:</strong></p>\n<p><strong>Input:</strong> num = 123</p>\n<p><strong>Output:</strong> 12</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>0 &lt;= num &lt;= 10^6</code></li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "C++",
      "url": "https://leetcode.innenu.com/136-Single-Number/C++/",
      "id": "https://leetcode.innenu.com/136-Single-Number/C++/",
      "content_html": "<h2 id=\"sqm\"> sqm</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>\n<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>int</span> <span>singleNumber</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums<span>)</span> <span>{</span>\n    <span>sort</span><span>(</span>nums<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> nums<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>\n    <span>int</span> tmp<span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i <span>+=</span> <span>2</span><span>)</span> <span>{</span>\n      tmp <span>=</span> nums<span>[</span>i<span>]</span><span>;</span>\n      <span>if</span> <span>(</span>i <span>==</span> nums<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>)</span> <span>return</span> tmp<span>;</span>\n      <span>if</span> <span>(</span>tmp <span>!=</span> nums<span>[</span>i <span>+</span> <span>1</span><span>]</span><span>)</span> <span>return</span> tmp<span>;</span>\n    <span>}</span>\n    <span>return</span> <span>-</span><span>1</span><span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.725Z",
      "authors": [
        {
          "name": "136. Single Number"
        }
      ],
      "tags": [
        "C++"
      ]
    },
    {
      "title": "136. Single Number",
      "url": "https://leetcode.innenu.com/136-Single-Number/",
      "id": "https://leetcode.innenu.com/136-Single-Number/",
      "content_html": "<h1 id=\"_136-single-number\"> <a href=\"https://leetcode.com/problems/single-number/\" target=\"_blank\" rel=\"noopener noreferrer\">136. Single Number</a></h1>\n<p>Given a <strong>non-empty</strong> array of integers <code>nums</code>, every element appears <em>twice</em> except for one. Find that single one.</p>\n<p><strong>Follow up:</strong> Could you implement a solution with a linear runtime complexity and without using extra memory?</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> nums = [2,2,1]</p>\n<p><strong>Output:</strong> 1</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> nums = [4,1,2,1,2]</p>\n<p><strong>Output:</strong> 4</p>\n<p><strong>Example 3:</strong></p>\n<p><strong>Input:</strong> nums = [1]</p>\n<p><strong>Output:</strong> 1</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 3 * 104</code></li>\n<li><code>-3 * 104 &lt;= nums[i] &lt;= 3 * 104</code></li>\n<li>Each element in the array appears twice except for one element which appears only once.</li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "sqm",
      "url": "https://leetcode.innenu.com/136-Single-Number/sqm/",
      "id": "https://leetcode.innenu.com/136-Single-Number/sqm/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>\n<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>int</span> <span>singleNumber</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums<span>)</span> <span>{</span>\n    <span>sort</span><span>(</span>nums<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> nums<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>\n    <span>int</span> tmp<span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i <span>+=</span> <span>2</span><span>)</span> <span>{</span>\n      tmp <span>=</span> nums<span>[</span>i<span>]</span><span>;</span>\n      <span>if</span> <span>(</span>i <span>==</span> nums<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>)</span> <span>return</span> tmp<span>;</span>\n      <span>if</span> <span>(</span>tmp <span>!=</span> nums<span>[</span>i <span>+</span> <span>1</span><span>]</span><span>)</span> <span>return</span> tmp<span>;</span>\n    <span>}</span>\n    <span>return</span> <span>-</span><span>1</span><span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.726Z",
      "authors": [
        {
          "name": "136. Single Number"
        }
      ],
      "tags": [
        "sqm"
      ]
    },
    {
      "title": "C++",
      "url": "https://leetcode.innenu.com/1365-How-Many-Numbers-Are-Smaller-Than-the-Current-Number/C++/",
      "id": "https://leetcode.innenu.com/1365-How-Many-Numbers-Are-Smaller-Than-the-Current-Number/C++/",
      "content_html": "<h2 id=\"sqm\"> sqm</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  vector<span>&lt;</span><span>int</span><span>></span> <span>smallerNumbersThanCurrent</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums<span>)</span> <span>{</span>\n    vector<span>&lt;</span><span>int</span><span>></span> ans<span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>int</span> count <span>=</span> <span>0</span><span>;</span>\n      <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>0</span><span>;</span> j <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> j<span>++</span><span>)</span> <span>{</span>\n        <span>if</span> <span>(</span>nums<span>[</span>j<span>]</span> <span>&lt;</span> nums<span>[</span>i<span>]</span><span>)</span> count<span>++</span><span>;</span>\n      <span>}</span>\n      ans<span>.</span><span>push_back</span><span>(</span>count<span>)</span><span>;</span>\n    <span>}</span>\n    <span>return</span> ans<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.726Z",
      "authors": [
        {
          "name": "1365. How Many Numbers Are Smaller Than the Current Number"
        }
      ],
      "tags": [
        "C++"
      ]
    },
    {
      "title": "Java",
      "url": "https://leetcode.innenu.com/1365-How-Many-Numbers-Are-Smaller-Than-the-Current-Number/Java/",
      "id": "https://leetcode.innenu.com/1365-How-Many-Numbers-Are-Smaller-Than-the-Current-Number/Java/",
      "content_html": "<h2 id=\"lizncu\"> lizncu</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>smallerNumbersThanCurrent</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>)</span> <span>{</span>\n    <span>int</span><span>[</span><span>]</span> count <span>=</span> <span>new</span> <span>int</span><span>[</span>nums<span>.</span>length<span>]</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>0</span><span>;</span> j <span>&lt;</span> nums<span>.</span>length<span>;</span> j<span>++</span><span>)</span> <span>{</span>\n        <span>if</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>></span> nums<span>[</span>j<span>]</span><span>)</span> <span>{</span>\n          count<span>[</span>i<span>]</span><span>++</span><span>;</span>\n        <span>}</span>\n      <span>}</span>\n    <span>}</span>\n\n    <span>return</span> count<span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.726Z",
      "authors": [
        {
          "name": "1365. How Many Numbers Are Smaller Than the Current Number"
        }
      ],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "lizncu",
      "url": "https://leetcode.innenu.com/1365-How-Many-Numbers-Are-Smaller-Than-the-Current-Number/lizncu/",
      "id": "https://leetcode.innenu.com/1365-How-Many-Numbers-Are-Smaller-Than-the-Current-Number/lizncu/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>smallerNumbersThanCurrent</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>)</span> <span>{</span>\n    <span>int</span><span>[</span><span>]</span> count <span>=</span> <span>new</span> <span>int</span><span>[</span>nums<span>.</span>length<span>]</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>0</span><span>;</span> j <span>&lt;</span> nums<span>.</span>length<span>;</span> j<span>++</span><span>)</span> <span>{</span>\n        <span>if</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>></span> nums<span>[</span>j<span>]</span><span>)</span> <span>{</span>\n          count<span>[</span>i<span>]</span><span>++</span><span>;</span>\n        <span>}</span>\n      <span>}</span>\n    <span>}</span>\n\n    <span>return</span> count<span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.727Z",
      "authors": [
        {
          "name": "1365. How Many Numbers Are Smaller Than the Current Number"
        }
      ],
      "tags": [
        "lizncu"
      ]
    },
    {
      "title": "1365. How Many Numbers Are Smaller Than the Current Number",
      "url": "https://leetcode.innenu.com/1365-How-Many-Numbers-Are-Smaller-Than-the-Current-Number/",
      "id": "https://leetcode.innenu.com/1365-How-Many-Numbers-Are-Smaller-Than-the-Current-Number/",
      "content_html": "<h1 id=\"_1365-how-many-numbers-are-smaller-than-the-current-number\"> <a href=\"https://leetcode.com/problems/how-many-numbers-are-smaller-than-the-current-number/\" target=\"_blank\" rel=\"noopener noreferrer\">1365. How Many Numbers Are Smaller Than the Current Number</a></h1>\n<p>Given the array <code>nums</code>, for each <code>nums[i]</code> find out how many numbers in the array are smaller than it. That is, for each <code>nums[i]</code> you have to count the number of valid <code>j's</code> such that <code>j != i</code> <strong>and</strong> <code>nums[j] &lt; nums[i]</code>.</p>\n<p>Return the answer in an array.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> nums = [8,1,2,2,3]</p>\n<p><strong>Output:</strong> [4,0,1,1,3]</p>\n<p><strong>Explanation:</strong></p>\n<ul>\n<li>\n<p>For nums[0]=8 there exist four smaller numbers than it (1, 2, 2 and 3).</p>\n</li>\n<li>\n<p>For nums[1]=1 does not exist any smaller number than it.</p>\n</li>\n<li>\n<p>For nums[2]=2 there exist one smaller number than it (1).</p>\n</li>\n<li>\n<p>For nums[3]=2 there exist one smaller number than it (1).</p>\n</li>\n<li>\n<p>For nums[4]=3 there exist three smaller numbers than it (1, 2 and 2).</p>\n</li>\n</ul>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> nums = [6,5,4,8]</p>\n<p><strong>Output:</strong> [2,1,0,3]</p>\n<p><strong>Example 3:</strong></p>\n<p><strong>Input:</strong> nums = [7,7,7,7]</p>\n<p><strong>Output:</strong> [0,0,0,0]</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>2 &lt;= nums.length &lt;= 500</code></li>\n<li><code>0 &lt;= nums[i] &lt;= 100</code></li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "sqm",
      "url": "https://leetcode.innenu.com/1365-How-Many-Numbers-Are-Smaller-Than-the-Current-Number/sqm/",
      "id": "https://leetcode.innenu.com/1365-How-Many-Numbers-Are-Smaller-Than-the-Current-Number/sqm/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  vector<span>&lt;</span><span>int</span><span>></span> <span>smallerNumbersThanCurrent</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums<span>)</span> <span>{</span>\n    vector<span>&lt;</span><span>int</span><span>></span> ans<span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>int</span> count <span>=</span> <span>0</span><span>;</span>\n      <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>0</span><span>;</span> j <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> j<span>++</span><span>)</span> <span>{</span>\n        <span>if</span> <span>(</span>nums<span>[</span>j<span>]</span> <span>&lt;</span> nums<span>[</span>i<span>]</span><span>)</span> count<span>++</span><span>;</span>\n      <span>}</span>\n      ans<span>.</span><span>push_back</span><span>(</span>count<span>)</span><span>;</span>\n    <span>}</span>\n    <span>return</span> ans<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.728Z",
      "authors": [
        {
          "name": "1365. How Many Numbers Are Smaller Than the Current Number"
        }
      ],
      "tags": [
        "sqm"
      ]
    },
    {
      "title": "Java",
      "url": "https://leetcode.innenu.com/1389-Create-Target-Array-in-the-Given-Order/Java/",
      "id": "https://leetcode.innenu.com/1389-Create-Target-Array-in-the-Given-Order/Java/",
      "content_html": "<h2 id=\"lizncu\"> lizncu</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>createTargetArray</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>,</span> <span>int</span><span>[</span><span>]</span> index<span>)</span> <span>{</span>\n    <span>int</span><span>[</span><span>]</span> target <span>=</span> <span>new</span> <span>int</span><span>[</span>index<span>.</span>length<span>]</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> index<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>index<span>[</span>i<span>]</span> <span>>=</span> i<span>)</span> <span>{</span>\n        target<span>[</span>index<span>[</span>i<span>]</span><span>]</span> <span>=</span> nums<span>[</span>i<span>]</span><span>;</span>\n      <span>}</span> <span>else</span> <span>{</span>\n        <span>for</span> <span>(</span><span>int</span> j <span>=</span> nums<span>.</span>length <span>-</span> <span>1</span><span>;</span> j <span>></span> index<span>[</span>i<span>]</span><span>;</span> j<span>--</span><span>)</span> <span>{</span>\n          target<span>[</span>j<span>]</span> <span>=</span> target<span>[</span>j <span>-</span> <span>1</span><span>]</span><span>;</span>\n        <span>}</span>\n        target<span>[</span>index<span>[</span>i<span>]</span><span>]</span> <span>=</span> nums<span>[</span>i<span>]</span><span>;</span>\n      <span>}</span>\n    <span>}</span>\n\n    <span>return</span> target<span>;</span>\n  <span>}</span>\n<span>}</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.728Z",
      "authors": [
        {
          "name": "1389. Create Target Array in the Given Order"
        }
      ],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "lizncu",
      "url": "https://leetcode.innenu.com/1389-Create-Target-Array-in-the-Given-Order/lizncu/",
      "id": "https://leetcode.innenu.com/1389-Create-Target-Array-in-the-Given-Order/lizncu/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>createTargetArray</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>,</span> <span>int</span><span>[</span><span>]</span> index<span>)</span> <span>{</span>\n    <span>int</span><span>[</span><span>]</span> target <span>=</span> <span>new</span> <span>int</span><span>[</span>index<span>.</span>length<span>]</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> index<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>index<span>[</span>i<span>]</span> <span>>=</span> i<span>)</span> <span>{</span>\n        target<span>[</span>index<span>[</span>i<span>]</span><span>]</span> <span>=</span> nums<span>[</span>i<span>]</span><span>;</span>\n      <span>}</span> <span>else</span> <span>{</span>\n        <span>for</span> <span>(</span><span>int</span> j <span>=</span> nums<span>.</span>length <span>-</span> <span>1</span><span>;</span> j <span>></span> index<span>[</span>i<span>]</span><span>;</span> j<span>--</span><span>)</span> <span>{</span>\n          target<span>[</span>j<span>]</span> <span>=</span> target<span>[</span>j <span>-</span> <span>1</span><span>]</span><span>;</span>\n        <span>}</span>\n        target<span>[</span>index<span>[</span>i<span>]</span><span>]</span> <span>=</span> nums<span>[</span>i<span>]</span><span>;</span>\n      <span>}</span>\n    <span>}</span>\n\n    <span>return</span> target<span>;</span>\n  <span>}</span>\n<span>}</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.729Z",
      "authors": [
        {
          "name": "1389. Create Target Array in the Given Order"
        }
      ],
      "tags": [
        "lizncu"
      ]
    },
    {
      "title": "1389. Create Target Array in the Given Order",
      "url": "https://leetcode.innenu.com/1389-Create-Target-Array-in-the-Given-Order/",
      "id": "https://leetcode.innenu.com/1389-Create-Target-Array-in-the-Given-Order/",
      "content_html": "<h1 id=\"_1389-create-target-array-in-the-given-order\"> <a href=\"https://leetcode.com/problems/create-target-array-in-the-given-order/\" target=\"_blank\" rel=\"noopener noreferrer\">1389. Create Target Array in the Given Order</a></h1>\n<p>Given two arrays of integers <code>nums</code> and <code>index</code>. Your task is to create <em>target</em> array under the following rules:</p>\n<ul>\n<li>Initially <em>target</em> array is empty.</li>\n<li>From left to right read nums[i] and index[i], insert at index <code>index[i]</code> the value <code>nums[i]</code> in <em>target</em> array.</li>\n<li>Repeat the previous step until there are no elements to read in <code>nums</code> and <code>index.</code></li>\n</ul>\n<p>Return the <em>target</em> array.</p>\n<p>It is guaranteed that the insertion operations will be valid.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> nums = [0,1,2,3,4], index = [0,1,2,2,1]</p>\n<p><strong>Output:</strong> [0,4,1,3,2]</p>\n<p><strong>Explanation:</strong></p>\n<table>\n<thead>\n<tr>\n<th>nums</th>\n<th>index</th>\n<th>target</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>0</td>\n<td>[0]</td>\n</tr>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>[0,1]</td>\n</tr>\n<tr>\n<td>2</td>\n<td>2</td>\n<td>[0,1,2]</td>\n</tr>\n<tr>\n<td>3</td>\n<td>2</td>\n<td>[0,1,3,2]</td>\n</tr>\n<tr>\n<td>4</td>\n<td>1</td>\n<td>[0,4,1,3,2]</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> nums = [1,2,3,4,0], index = [0,1,2,3,0]</p>\n<p><strong>Output:</strong> [0,1,2,3,4]</p>\n<p><strong>Explanation:</strong></p>\n<table>\n<thead>\n<tr>\n<th>nums</th>\n<th>index</th>\n<th>target</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>0</td>\n<td>[1]</td>\n</tr>\n<tr>\n<td>2</td>\n<td>1</td>\n<td>[1,2]</td>\n</tr>\n<tr>\n<td>3</td>\n<td>2</td>\n<td>[1,2,3]</td>\n</tr>\n<tr>\n<td>4</td>\n<td>3</td>\n<td>[1,2,3,4]</td>\n</tr>\n<tr>\n<td>0</td>\n<td>0</td>\n<td>[0,1,2,3,4]</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Example 3:</strong></p>\n<p><strong>Input:</strong> nums = [1], index = [0]</p>\n<p><strong>Output:</strong> [1]</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>1 &lt;= nums.length, index.length &lt;= 100</code></li>\n<li><code>nums.length == index.length</code></li>\n<li><code>0 &lt;= nums[i] &lt;= 100</code></li>\n<li><code>0 &lt;= index[i] &lt;= i</code></li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "C++",
      "url": "https://leetcode.innenu.com/1431-Kids-With-the-Greatest-Number-of-Candies/C++/",
      "id": "https://leetcode.innenu.com/1431-Kids-With-the-Greatest-Number-of-Candies/C++/",
      "content_html": "<h2 id=\"lmy\"> lmy</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  vector<span>&lt;</span><span>bool</span><span>></span> <span>kidsWithCandies</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> candies<span>,</span> <span>int</span> extraCandies<span>)</span> <span>{</span>\n    vector<span>&lt;</span><span>bool</span><span>></span> ans<span>;</span>\n    <span>int</span> n <span>=</span> candies<span>[</span><span>0</span><span>]</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> candies<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> n <span>=</span> <span>max</span><span>(</span>n<span>,</span> candies<span>[</span>i<span>]</span><span>)</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> candies<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>candies<span>[</span>i<span>]</span> <span>+</span> extraCandies <span>>=</span> n<span>)</span>\n        ans<span>.</span><span>push_back</span><span>(</span><span>true</span><span>)</span><span>;</span>\n      <span>else</span>\n        ans<span>.</span><span>push_back</span><span>(</span><span>false</span><span>)</span><span>;</span>\n    <span>}</span>\n    <span>return</span> ans<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.730Z",
      "authors": [
        {
          "name": "1431. Kids With the Greatest Number of Candies"
        }
      ],
      "tags": [
        "C++"
      ]
    },
    {
      "title": "Java",
      "url": "https://leetcode.innenu.com/1431-Kids-With-the-Greatest-Number-of-Candies/Java/",
      "id": "https://leetcode.innenu.com/1431-Kids-With-the-Greatest-Number-of-Candies/Java/",
      "content_html": "<h2 id=\"lizncu\"> lizncu</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>List</span><span><span>&lt;</span><span>Boolean</span><span>></span></span> <span>kidsWithCandies</span><span>(</span><span>int</span><span>[</span><span>]</span> candies<span>,</span> <span>int</span> extraCandies<span>)</span> <span>{</span>\n    <span>int</span> max <span>=</span> candies<span>[</span><span>0</span><span>]</span><span>;</span>\n\n    <span>List</span><span><span>&lt;</span><span>Boolean</span><span>></span></span> answer <span>=</span> <span>new</span> <span>ArrayList</span><span><span>&lt;</span><span>Boolean</span><span>></span></span><span>(</span><span>)</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>1</span><span>;</span> i <span>&lt;</span> candies<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>max <span>&lt;</span> candies<span>[</span>i<span>]</span><span>)</span> <span>{</span>\n        max <span>=</span> candies<span>[</span>i<span>]</span><span>;</span>\n      <span>}</span>\n    <span>}</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> candies<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>max <span>-</span> candies<span>[</span>i<span>]</span> <span>&lt;=</span> extraCandies<span>)</span> <span>{</span>\n        answer<span>.</span><span>add</span><span>(</span><span>true</span><span>)</span><span>;</span>\n      <span>}</span> <span>else</span> <span>{</span>\n        answer<span>.</span><span>add</span><span>(</span><span>false</span><span>)</span><span>;</span>\n      <span>}</span>\n    <span>}</span>\n\n    <span>return</span> answer<span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.731Z",
      "authors": [
        {
          "name": "1431. Kids With the Greatest Number of Candies"
        }
      ],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "lizncu",
      "url": "https://leetcode.innenu.com/1431-Kids-With-the-Greatest-Number-of-Candies/lizncu/",
      "id": "https://leetcode.innenu.com/1431-Kids-With-the-Greatest-Number-of-Candies/lizncu/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>List</span><span><span>&lt;</span><span>Boolean</span><span>></span></span> <span>kidsWithCandies</span><span>(</span><span>int</span><span>[</span><span>]</span> candies<span>,</span> <span>int</span> extraCandies<span>)</span> <span>{</span>\n    <span>int</span> max <span>=</span> candies<span>[</span><span>0</span><span>]</span><span>;</span>\n\n    <span>List</span><span><span>&lt;</span><span>Boolean</span><span>></span></span> answer <span>=</span> <span>new</span> <span>ArrayList</span><span><span>&lt;</span><span>Boolean</span><span>></span></span><span>(</span><span>)</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>1</span><span>;</span> i <span>&lt;</span> candies<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>max <span>&lt;</span> candies<span>[</span>i<span>]</span><span>)</span> <span>{</span>\n        max <span>=</span> candies<span>[</span>i<span>]</span><span>;</span>\n      <span>}</span>\n    <span>}</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> candies<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>max <span>-</span> candies<span>[</span>i<span>]</span> <span>&lt;=</span> extraCandies<span>)</span> <span>{</span>\n        answer<span>.</span><span>add</span><span>(</span><span>true</span><span>)</span><span>;</span>\n      <span>}</span> <span>else</span> <span>{</span>\n        answer<span>.</span><span>add</span><span>(</span><span>false</span><span>)</span><span>;</span>\n      <span>}</span>\n    <span>}</span>\n\n    <span>return</span> answer<span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.731Z",
      "authors": [
        {
          "name": "1431. Kids With the Greatest Number of Candies"
        }
      ],
      "tags": [
        "lizncu"
      ]
    },
    {
      "title": "lmy",
      "url": "https://leetcode.innenu.com/1431-Kids-With-the-Greatest-Number-of-Candies/lmy/",
      "id": "https://leetcode.innenu.com/1431-Kids-With-the-Greatest-Number-of-Candies/lmy/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  vector<span>&lt;</span><span>bool</span><span>></span> <span>kidsWithCandies</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> candies<span>,</span> <span>int</span> extraCandies<span>)</span> <span>{</span>\n    vector<span>&lt;</span><span>bool</span><span>></span> ans<span>;</span>\n    <span>int</span> n <span>=</span> candies<span>[</span><span>0</span><span>]</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> candies<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> n <span>=</span> <span>max</span><span>(</span>n<span>,</span> candies<span>[</span>i<span>]</span><span>)</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> candies<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>candies<span>[</span>i<span>]</span> <span>+</span> extraCandies <span>>=</span> n<span>)</span>\n        ans<span>.</span><span>push_back</span><span>(</span><span>true</span><span>)</span><span>;</span>\n      <span>else</span>\n        ans<span>.</span><span>push_back</span><span>(</span><span>false</span><span>)</span><span>;</span>\n    <span>}</span>\n    <span>return</span> ans<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.731Z",
      "authors": [
        {
          "name": "1431. Kids With the Greatest Number of Candies"
        }
      ],
      "tags": [
        "lmy"
      ]
    },
    {
      "title": "1431. Kids With the Greatest Number of Candies",
      "url": "https://leetcode.innenu.com/1431-Kids-With-the-Greatest-Number-of-Candies/",
      "id": "https://leetcode.innenu.com/1431-Kids-With-the-Greatest-Number-of-Candies/",
      "content_html": "<h1 id=\"_1431-kids-with-the-greatest-number-of-candies\"> <a href=\"https://leetcode.com/problems/kids-with-the-greatest-number-of-candies/\" target=\"_blank\" rel=\"noopener noreferrer\">1431. Kids With the Greatest Number of Candies</a></h1>\n<p>Given the array <code>candies</code> and the integer <code>extraCandies</code>, where <code>candies[i]</code> represents the number of candies that the <strong><em>ith</em></strong> kid has.</p>\n<p>For each kid check if there is a way to distribute <code>extraCandies</code> among the kids such that he or she can have the <strong>greatest</strong> number of candies among them. Notice that multiple kids can have the <strong>greatest</strong> number of candies.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> candies = [2,3,5,1,3], extraCandies = 3</p>\n<p><strong>Output:</strong> [true,true,true,false,true]</p>\n<p><strong>Explanation:</strong></p>\n<ul>\n<li>Kid 1 has 2 candies and if he or she receives all extra candies (3) will have 5 candies --- the greatest number of candies among the kids.</li>\n<li>Kid 2 has 3 candies and if he or she receives at least 2 extra candies will have the greatest number of candies among the kids.</li>\n<li>Kid 3 has 5 candies and this is already the greatest number of candies among the kids.</li>\n<li>Kid 4 has 1 candy and even if he or she receives all extra candies will only have 4 candies.</li>\n<li>Kid 5 has 3 candies and if he or she receives at least 2 extra candies will have the greatest number of candies among the kids.</li>\n</ul>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> candies = [4,2,1,1,2], extraCandies = 1</p>\n<p><strong>Output:</strong> [true,false,false,false,false]</p>\n<p><strong>Explanation:</strong> There is only 1 extra candy, therefore only kid 1 will have the greatest number of candies among the kids regardless of who takes the extra candy.</p>\n<p><strong>Example 3:</strong></p>\n<p><strong>Input:</strong> candies = [12,1,12], extraCandies = 10</p>\n<p><strong>Output:</strong> [true,false,true]</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>2 &lt;= candies.length &lt;= 100</code></li>\n<li><code>1 &lt;= candies[i] &lt;= 100</code></li>\n<li><code>1 &lt;= extraCandies &lt;= 50</code></li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "Java",
      "url": "https://leetcode.innenu.com/1450-Number-of-Students-Doing-Homework-at-a-Given-Time/Java/",
      "id": "https://leetcode.innenu.com/1450-Number-of-Students-Doing-Homework-at-a-Given-Time/Java/",
      "content_html": "<h2 id=\"lizncu\"> lizncu</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span> <span>busyStudent</span><span>(</span><span>int</span><span>[</span><span>]</span> startTime<span>,</span> <span>int</span><span>[</span><span>]</span> endTime<span>,</span> <span>int</span> queryTime<span>)</span> <span>{</span>\n    <span>int</span> count <span>=</span> <span>0</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> startTime<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      count <span>+=</span> startTime<span>[</span>i<span>]</span> <span>&lt;=</span> queryTime <span>&amp;&amp;</span> queryTime <span>&lt;=</span> endTime<span>[</span>i<span>]</span> <span>?</span> <span>1</span> <span>:</span> <span>0</span><span>;</span>\n    <span>}</span>\n\n    <span>return</span> count<span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.733Z",
      "authors": [
        {
          "name": "1450. Number of Students Doing Homework at a Given Time"
        }
      ],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "lizncu",
      "url": "https://leetcode.innenu.com/1450-Number-of-Students-Doing-Homework-at-a-Given-Time/lizncu/",
      "id": "https://leetcode.innenu.com/1450-Number-of-Students-Doing-Homework-at-a-Given-Time/lizncu/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span> <span>busyStudent</span><span>(</span><span>int</span><span>[</span><span>]</span> startTime<span>,</span> <span>int</span><span>[</span><span>]</span> endTime<span>,</span> <span>int</span> queryTime<span>)</span> <span>{</span>\n    <span>int</span> count <span>=</span> <span>0</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> startTime<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      count <span>+=</span> startTime<span>[</span>i<span>]</span> <span>&lt;=</span> queryTime <span>&amp;&amp;</span> queryTime <span>&lt;=</span> endTime<span>[</span>i<span>]</span> <span>?</span> <span>1</span> <span>:</span> <span>0</span><span>;</span>\n    <span>}</span>\n\n    <span>return</span> count<span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.733Z",
      "authors": [
        {
          "name": "1450. Number of Students Doing Homework at a Given Time"
        }
      ],
      "tags": [
        "lizncu"
      ]
    },
    {
      "title": "1450. Number of Students Doing Homework at a Given Time",
      "url": "https://leetcode.innenu.com/1450-Number-of-Students-Doing-Homework-at-a-Given-Time/",
      "id": "https://leetcode.innenu.com/1450-Number-of-Students-Doing-Homework-at-a-Given-Time/",
      "content_html": "<h1 id=\"_1450-number-of-students-doing-homework-at-a-given-time\"> <a href=\"https://leetcode.com/problems/number-of-students-doing-homework-at-a-given-time/\" target=\"_blank\" rel=\"noopener noreferrer\">1450. Number of Students Doing Homework at a Given Time</a></h1>\n<p>Given two integer arrays <code>startTime</code> and <code>endTime</code> and given an integer <code>queryTime</code>.</p>\n<p>The <code>ith</code> student started doing their homework at the time <code>startTime[i]</code> and finished it at time <code>endTime[i]</code>.</p>\n<p>Return <em>the number of students</em> doing their homework at time <code>queryTime</code>. More formally, return the number of students where <code>queryTime</code> lays in the interval <code>[startTime[i], endTime[i]]</code> inclusive.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> startTime = [1,2,3], endTime = [3,2,7], queryTime = 4</p>\n<p><strong>Output:</strong> 1</p>\n<p><strong>Explanation:</strong> We have 3 students where:</p>\n<ul>\n<li>The first student started doing homework at time 1 and finished at time 3 and wasn't doing anything at time 4.</li>\n<li>The second student started doing homework at time 2 and finished at time 2 and also wasn't doing anything at time 4.</li>\n<li>The third student started doing homework at time 3 and finished at time 7 and was the only student doing homework at time 4.</li>\n</ul>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> startTime = [4], endTime = [4], queryTime = 4</p>\n<p><strong>Output:</strong> 1</p>\n<p><strong>Explanation:</strong> The only student was doing their homework at the queryTime.</p>\n<p><strong>Example 3:</strong></p>\n<p><strong>Input:</strong> startTime = [4], endTime = [4], queryTime = 5</p>\n<p><strong>Output:</strong> 0</p>\n<p><strong>Example 4:</strong></p>\n<p><strong>Input:</strong> startTime = [1,1,1,1], endTime = [1,3,2,4], queryTime = 7</p>\n<p><strong>Output:</strong> 0</p>\n<p><strong>Example 5:</strong></p>\n<p><strong>Input:</strong> startTime = [9,8,7,6,5,4,3,2,1], endTime = [10,10,10,10,10,10,10,10,10], queryTime = 5</p>\n<p><strong>Output:</strong> 5</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>startTime.length == endTime.length</code></li>\n<li><code>1 &lt;= startTime.length &lt;= 100</code></li>\n<li><code>1 &lt;= startTime[i] &lt;= endTime[i] &lt;= 1000</code></li>\n<li><code>1 &lt;= queryTime &lt;= 1000</code></li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "Java",
      "url": "https://leetcode.innenu.com/1470-Shuffle-the-Array/Java/",
      "id": "https://leetcode.innenu.com/1470-Shuffle-the-Array/Java/",
      "content_html": "<h2 id=\"lizncu\"> lizncu</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>shuffle</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>,</span> <span>int</span> n<span>)</span> <span>{</span>\n    <span>int</span><span>[</span><span>]</span> ans <span>=</span> <span>new</span> <span>int</span><span>[</span>nums<span>.</span>length<span>]</span><span>;</span>\n    <span>int</span> count <span>=</span> <span>0</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> n<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      ans<span>[</span>count<span>++</span><span>]</span> <span>=</span> nums<span>[</span>i<span>]</span><span>;</span>\n\n      ans<span>[</span>count<span>++</span><span>]</span> <span>=</span> nums<span>[</span>i <span>+</span> n<span>]</span><span>;</span>\n    <span>}</span>\n\n    <span>return</span> ans<span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.735Z",
      "authors": [
        {
          "name": "1470. Shuffle the Array"
        }
      ],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "lizncu",
      "url": "https://leetcode.innenu.com/1470-Shuffle-the-Array/lizncu/",
      "id": "https://leetcode.innenu.com/1470-Shuffle-the-Array/lizncu/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>shuffle</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>,</span> <span>int</span> n<span>)</span> <span>{</span>\n    <span>int</span><span>[</span><span>]</span> ans <span>=</span> <span>new</span> <span>int</span><span>[</span>nums<span>.</span>length<span>]</span><span>;</span>\n    <span>int</span> count <span>=</span> <span>0</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> n<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      ans<span>[</span>count<span>++</span><span>]</span> <span>=</span> nums<span>[</span>i<span>]</span><span>;</span>\n\n      ans<span>[</span>count<span>++</span><span>]</span> <span>=</span> nums<span>[</span>i <span>+</span> n<span>]</span><span>;</span>\n    <span>}</span>\n\n    <span>return</span> ans<span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.735Z",
      "authors": [
        {
          "name": "1470. Shuffle the Array"
        }
      ],
      "tags": [
        "lizncu"
      ]
    },
    {
      "title": "1470. Shuffle the Array",
      "url": "https://leetcode.innenu.com/1470-Shuffle-the-Array/",
      "id": "https://leetcode.innenu.com/1470-Shuffle-the-Array/",
      "content_html": "<h1 id=\"_1470-shuffle-the-array\"> <a href=\"https://leetcode.com/problems/shuffle-the-array/\" target=\"_blank\" rel=\"noopener noreferrer\">1470. Shuffle the Array</a></h1>\n<p>Given the array <code>nums</code> consisting of <code>2n</code> elements in the form <code>[x1,x2,...,xn,y1,y2,...,yn]</code>.</p>\n<p><em>Return the array in the form</em> <code>[x1,y1,x2,y2,...,xn,yn]</code>.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> nums = [2,5,1,3,4,7], n = 3</p>\n<p><strong>Output:</strong> [2,3,5,4,1,7]</p>\n<p><strong>Explanation:</strong> Since x1=2, x2=5, x3=1, y1=3, y2=4, y3=7 then the answer is [2,3,5,4,1,7].</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> nums = [1,2,3,4,4,3,2,1], n = 4</p>\n<p><strong>Output:</strong> [1,4,2,3,3,2,4,1]</p>\n<p><strong>Example 3:</strong></p>\n<p><strong>Input:</strong> nums = [1,1,2,2], n = 2</p>\n<p><strong>Output:</strong> [1,2,1,2]</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>1 &lt;= n &lt;= 500</code></li>\n<li><code>nums.length == 2n</code></li>\n<li><code>1 &lt;= nums[i] &lt;= 10^3</code></li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "Java",
      "url": "https://leetcode.innenu.com/1480-Running-Sum-of-1d-Array/Java/",
      "id": "https://leetcode.innenu.com/1480-Running-Sum-of-1d-Array/Java/",
      "content_html": "<h2 id=\"lizncu\"> lizncu</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>runningSum</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>)</span> <span>{</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>1</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      nums<span>[</span>i<span>]</span> <span>+=</span> nums<span>[</span>i <span>-</span> <span>1</span><span>]</span><span>;</span>\n    <span>}</span>\n\n    <span>return</span> nums<span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.736Z",
      "authors": [
        {
          "name": "1480. Running Sum of 1d Array"
        }
      ],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "lizncu",
      "url": "https://leetcode.innenu.com/1480-Running-Sum-of-1d-Array/lizncu/",
      "id": "https://leetcode.innenu.com/1480-Running-Sum-of-1d-Array/lizncu/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>runningSum</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>)</span> <span>{</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>1</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      nums<span>[</span>i<span>]</span> <span>+=</span> nums<span>[</span>i <span>-</span> <span>1</span><span>]</span><span>;</span>\n    <span>}</span>\n\n    <span>return</span> nums<span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.736Z",
      "authors": [
        {
          "name": "1480. Running Sum of 1d Array"
        }
      ],
      "tags": [
        "lizncu"
      ]
    },
    {
      "title": "1480. Running Sum of 1d Array",
      "url": "https://leetcode.innenu.com/1480-Running-Sum-of-1d-Array/",
      "id": "https://leetcode.innenu.com/1480-Running-Sum-of-1d-Array/",
      "content_html": "<h1 id=\"_1480-running-sum-of-1d-array\"> <a href=\"https://leetcode.com/problems/running-sum-of-1d-array/\" target=\"_blank\" rel=\"noopener noreferrer\">1480. Running Sum of 1d Array</a></h1>\n<p>Given an array <code>nums</code>. We define a running sum of an array as <code>runningSum[i] = sum(nums[0]…nums[i])</code>.</p>\n<p>Return the running sum of <code>nums</code>.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> nums = [1,2,3,4]</p>\n<p><strong>Output:</strong> [1,3,6,10]</p>\n<p><strong>Explanation:</strong> Running sum is obtained as follows: [1, 1+2, 1+2+3, 1+2+3+4].</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> nums = [1,1,1,1,1]</p>\n<p><strong>Output:</strong> [1,2,3,4,5]</p>\n<p><strong>Explanation:</strong> Running sum is obtained as follows: [1, 1+1, 1+1+1, 1+1+1+1, 1+1+1+1+1].</p>\n<p><strong>Example 3:</strong></p>\n<p><strong>Input:</strong> nums = [3,1,2,10,1]</p>\n<p><strong>Output:</strong> [3,4,6,16,17]</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 1000</code></li>\n<li><code>-10^6 &lt;= nums[i] &lt;= 10^6</code></li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "Java",
      "url": "https://leetcode.innenu.com/1486-XOR-Operation-in-an-Array/Java/",
      "id": "https://leetcode.innenu.com/1486-XOR-Operation-in-an-Array/Java/",
      "content_html": "<h2 id=\"lizncu\"> lizncu</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span> <span>xorOperation</span><span>(</span><span>int</span> n<span>,</span> <span>int</span> start<span>)</span> <span>{</span>\n    <span>int</span> result <span>=</span> start<span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>1</span><span>;</span> i <span>&lt;</span> n<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      result <span>=</span> result <span>^</span> <span>(</span>start <span>+</span> i <span>*</span> <span>2</span><span>)</span><span>;</span>\n    <span>}</span>\n\n    <span>return</span> result<span>;</span>\n  <span>}</span>\n<span>}</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.754Z",
      "authors": [
        {
          "name": "1486. Xor Operation in An Array"
        }
      ],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "lizncu",
      "url": "https://leetcode.innenu.com/1486-XOR-Operation-in-an-Array/lizncu/",
      "id": "https://leetcode.innenu.com/1486-XOR-Operation-in-an-Array/lizncu/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span> <span>xorOperation</span><span>(</span><span>int</span> n<span>,</span> <span>int</span> start<span>)</span> <span>{</span>\n    <span>int</span> result <span>=</span> start<span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>1</span><span>;</span> i <span>&lt;</span> n<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      result <span>=</span> result <span>^</span> <span>(</span>start <span>+</span> i <span>*</span> <span>2</span><span>)</span><span>;</span>\n    <span>}</span>\n\n    <span>return</span> result<span>;</span>\n  <span>}</span>\n<span>}</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.754Z",
      "authors": [
        {
          "name": "1486. Xor Operation in An Array"
        }
      ],
      "tags": [
        "lizncu"
      ]
    },
    {
      "title": "1486. XOR Operation in an Array",
      "url": "https://leetcode.innenu.com/1486-XOR-Operation-in-an-Array/",
      "id": "https://leetcode.innenu.com/1486-XOR-Operation-in-an-Array/",
      "content_html": "<h1 id=\"_1486-xor-operation-in-an-array\"> <a href=\"https://leetcode.com/problems/xor-operation-in-an-array/\" target=\"_blank\" rel=\"noopener noreferrer\">1486. XOR Operation in an Array</a></h1>\n<p>Given an integer <code>n</code> and an integer <code>start</code>.</p>\n<p>Define an array <code>nums</code> where <code>nums[i] = start + 2*i</code> (0-indexed) and <code>n == nums.length</code>.</p>\n<p>Return the bitwise XOR of all elements of <code>nums</code>.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> n = 5, start = 0</p>\n<p><strong>Output:</strong> 8</p>\n<p><strong>Explanation:</strong> Array nums is equal to [0, 2, 4, 6, 8] where (0 ^ 2 ^ 4 ^ 6 ^ 8) = 8.\nWhere &quot;^&quot; corresponds to bitwise XOR operator.</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> n = 4, start = 3</p>\n<p><strong>Output:</strong> 8</p>\n<p><strong>Explanation:</strong> Array nums is equal to [3, 5, 7, 9] where (3 ^ 5 ^ 7 ^ 9) = 8.</p>\n<p><strong>Example 3:</strong></p>\n<p><strong>Input:</strong> n = 1, start = 7</p>\n<p><strong>Output:</strong> 7</p>\n<p><strong>Example 4:</strong></p>\n<p><strong>Input:</strong> n = 10, start = 5</p>\n<p><strong>Output:</strong> 2</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>1 &lt;= n &lt;= 1000</code></li>\n<li><code>0 &lt;= start &lt;= 1000</code></li>\n<li><code>n == nums.length</code></li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "C++",
      "url": "https://leetcode.innenu.com/1491-average-salary-excluding-the-minimum-and-maximum-salary/C++/",
      "id": "https://leetcode.innenu.com/1491-average-salary-excluding-the-minimum-and-maximum-salary/C++/",
      "content_html": "<h2 id=\"lmy\"> lmy</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>double</span> <span>average</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> salary<span>)</span> <span>{</span>\n    <span>int</span> min <span>=</span> salary<span>[</span><span>0</span><span>]</span><span>,</span> max <span>=</span> salary<span>[</span><span>0</span><span>]</span><span>;</span>\n    <span>int</span> sum <span>=</span> <span>0</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> salary<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>salary<span>[</span>i<span>]</span> <span>&lt;</span> min<span>)</span> min <span>=</span> salary<span>[</span>i<span>]</span><span>;</span>\n      <span>if</span> <span>(</span>salary<span>[</span>i<span>]</span> <span>></span> max<span>)</span> max <span>=</span> salary<span>[</span>i<span>]</span><span>;</span>\n      sum <span>+=</span> salary<span>[</span>i<span>]</span><span>;</span>\n    <span>}</span>\n    <span>return</span> <span>(</span><span>double</span><span>)</span><span>(</span>sum <span>-</span> min <span>-</span> max<span>)</span> <span>/</span> <span>(</span><span>double</span><span>)</span><span>(</span>salary<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>2</span><span>)</span><span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.755Z",
      "authors": [
        {
          "name": "1491. Average Salary Excluding the Minimum And Maximum Salary"
        }
      ],
      "tags": [
        "C++"
      ]
    },
    {
      "title": "lmy",
      "url": "https://leetcode.innenu.com/1491-average-salary-excluding-the-minimum-and-maximum-salary/lmy/",
      "id": "https://leetcode.innenu.com/1491-average-salary-excluding-the-minimum-and-maximum-salary/lmy/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>double</span> <span>average</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> salary<span>)</span> <span>{</span>\n    <span>int</span> min <span>=</span> salary<span>[</span><span>0</span><span>]</span><span>,</span> max <span>=</span> salary<span>[</span><span>0</span><span>]</span><span>;</span>\n    <span>int</span> sum <span>=</span> <span>0</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> salary<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>salary<span>[</span>i<span>]</span> <span>&lt;</span> min<span>)</span> min <span>=</span> salary<span>[</span>i<span>]</span><span>;</span>\n      <span>if</span> <span>(</span>salary<span>[</span>i<span>]</span> <span>></span> max<span>)</span> max <span>=</span> salary<span>[</span>i<span>]</span><span>;</span>\n      sum <span>+=</span> salary<span>[</span>i<span>]</span><span>;</span>\n    <span>}</span>\n    <span>return</span> <span>(</span><span>double</span><span>)</span><span>(</span>sum <span>-</span> min <span>-</span> max<span>)</span> <span>/</span> <span>(</span><span>double</span><span>)</span><span>(</span>salary<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>2</span><span>)</span><span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.755Z",
      "authors": [
        {
          "name": "1491. Average Salary Excluding the Minimum And Maximum Salary"
        }
      ],
      "tags": [
        "lmy"
      ]
    },
    {
      "title": "1491. Average Salary Excluding the Minimum and Maximum Salary",
      "url": "https://leetcode.innenu.com/1491-average-salary-excluding-the-minimum-and-maximum-salary/",
      "id": "https://leetcode.innenu.com/1491-average-salary-excluding-the-minimum-and-maximum-salary/",
      "content_html": "<h1 id=\"_1491-average-salary-excluding-the-minimum-and-maximum-salary\"> <a href=\"https://leetcode.com/problems/average-salary-excluding-the-minimum-and-maximum-salary/\" target=\"_blank\" rel=\"noopener noreferrer\">1491. Average Salary Excluding the Minimum and Maximum Salary</a></h1>\n<p>Given an array of <strong>unique</strong> integers <code>salary</code> where <code>salary[i]</code> is the salary of the employee <code>i</code>.</p>\n<p>Return the average salary of employees excluding the minimum and maximum salary.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> salary = [4000,3000,1000,2000]</p>\n<p><strong>Output:</strong> 2500.00000</p>\n<p><strong>Explanation:</strong></p>\n<p>Minimum salary and maximum salary are 1000 and 4000 respectively.</p>\n<p>Average salary excluding minimum and maximum salary is (2000+3000)/2= 2500</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> salary = [1000,2000,3000]</p>\n<p><strong>Output:</strong> 2000.00000</p>\n<p><strong>Explanation:</strong> Minimum salary and maximum salary are 1000 and 3000 respectively.\nAverage salary excluding minimum and maximum salary is (2000)/1= 2000</p>\n<p><strong>Example 3:</strong></p>\n<p><strong>Input:</strong> salary = [6000,5000,4000,3000,2000,1000]</p>\n<p><strong>Output:</strong> 3500.00000</p>\n<p><strong>Example 4:</strong></p>\n<p><strong>Input:</strong> salary = [8000,9000,2000,3000,6000,1000]</p>\n<p><strong>Output:</strong> 4750.00000</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>3 &lt;= salary.length &lt;= 100</code></li>\n<li><code>10^3 &lt;= salary[i] &lt;= 10^6</code></li>\n<li><code>salary[i]</code> is unique.</li>\n<li>Answers within <code>10^-5</code> of the actual value will be accepted as correct.</li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "JavaScript",
      "url": "https://leetcode.innenu.com/15-3sum/JavaScript/",
      "id": "https://leetcode.innenu.com/15-3sum/JavaScript/",
      "content_html": "<h2 id=\"mister-hope\"> Mister-Hope</h2>\n<div><pre><code><span>/**\n * Runtime: 140 ms, faster than 90.82% of JavaScript online submissions for 3Sum.\n *\n * Memory Usage: 48.9 MB, less than 5.15% of JavaScript online submissions for 3Sum.\n */</span>\n<span>const</span> <span>threeSum</span> <span>=</span> <span>(</span><span>nums</span><span>)</span> <span>=></span> <span>{</span>\n  <span>const</span> result <span>=</span> <span>[</span><span>]</span><span>;</span>\n\n  <span>if</span> <span>(</span>nums<span>.</span>length <span>&lt;</span> <span>3</span><span>)</span> <span>return</span> result<span>;</span>\n\n  nums<span>.</span><span>sort</span><span>(</span><span>(</span><span>a<span>,</span> b</span><span>)</span> <span>=></span> a <span>-</span> b<span>)</span><span>;</span>\n\n  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length <span>-</span> <span>2</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n    <span>let</span> big <span>=</span> i <span>+</span> <span>1</span><span>;</span>\n    <span>let</span> small <span>=</span> nums<span>.</span>length <span>-</span> <span>1</span><span>;</span>\n    <span>let</span> sum <span>=</span> <span>0</span> <span>-</span> nums<span>[</span>i<span>]</span><span>;</span>\n\n    <span>if</span> <span>(</span>i <span>>=</span> <span>0</span> <span>&amp;&amp;</span> nums<span>[</span>i<span>]</span> <span>!==</span> nums<span>[</span>i <span>-</span> <span>1</span><span>]</span><span>)</span>\n      <span>while</span> <span>(</span>big <span>&lt;</span> small<span>)</span>\n        <span>if</span> <span>(</span>nums<span>[</span>big<span>]</span> <span>+</span> nums<span>[</span>small<span>]</span> <span>&lt;</span> sum<span>)</span> big<span>++</span><span>;</span>\n        <span>else</span> <span>if</span> <span>(</span>nums<span>[</span>big<span>]</span> <span>+</span> nums<span>[</span>small<span>]</span> <span>></span> sum<span>)</span> small<span>--</span><span>;</span>\n        <span>else</span> <span>{</span>\n          result<span>.</span><span>push</span><span>(</span><span>[</span>nums<span>[</span>i<span>]</span><span>,</span> nums<span>[</span>big<span>]</span><span>,</span> nums<span>[</span>small<span>]</span><span>]</span><span>)</span><span>;</span>\n          <span>while</span> <span>(</span>big <span>&lt;</span> small <span>&amp;&amp;</span> nums<span>[</span>big<span>]</span> <span>===</span> nums<span>[</span>big <span>+</span> <span>1</span><span>]</span><span>)</span> big<span>++</span><span>;</span>\n          <span>while</span> <span>(</span>big <span>&lt;</span> small <span>&amp;&amp;</span> nums<span>[</span>small<span>]</span> <span>===</span> nums<span>[</span>small <span>-</span> <span>1</span><span>]</span><span>)</span> small<span>--</span><span>;</span>\n          big<span>++</span><span>;</span>\n          small<span>--</span><span>;</span>\n        <span>}</span>\n  <span>}</span>\n\n  <span>return</span> result<span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.757Z",
      "authors": [
        {
          "name": "15. 3sum"
        }
      ],
      "tags": [
        "JavaScript"
      ]
    },
    {
      "title": "Mister-Hope",
      "url": "https://leetcode.innenu.com/15-3sum/Mister-Hope/",
      "id": "https://leetcode.innenu.com/15-3sum/Mister-Hope/",
      "content_html": "<h2 id=\"javascript\"> JavaScript</h2>\n<div><pre><code><span>/**\n * Runtime: 140 ms, faster than 90.82% of JavaScript online submissions for 3Sum.\n *\n * Memory Usage: 48.9 MB, less than 5.15% of JavaScript online submissions for 3Sum.\n */</span>\n<span>const</span> <span>threeSum</span> <span>=</span> <span>(</span><span>nums</span><span>)</span> <span>=></span> <span>{</span>\n  <span>const</span> result <span>=</span> <span>[</span><span>]</span><span>;</span>\n\n  <span>if</span> <span>(</span>nums<span>.</span>length <span>&lt;</span> <span>3</span><span>)</span> <span>return</span> result<span>;</span>\n\n  nums<span>.</span><span>sort</span><span>(</span><span>(</span><span>a<span>,</span> b</span><span>)</span> <span>=></span> a <span>-</span> b<span>)</span><span>;</span>\n\n  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length <span>-</span> <span>2</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n    <span>let</span> big <span>=</span> i <span>+</span> <span>1</span><span>;</span>\n    <span>let</span> small <span>=</span> nums<span>.</span>length <span>-</span> <span>1</span><span>;</span>\n    <span>let</span> sum <span>=</span> <span>0</span> <span>-</span> nums<span>[</span>i<span>]</span><span>;</span>\n\n    <span>if</span> <span>(</span>i <span>>=</span> <span>0</span> <span>&amp;&amp;</span> nums<span>[</span>i<span>]</span> <span>!==</span> nums<span>[</span>i <span>-</span> <span>1</span><span>]</span><span>)</span>\n      <span>while</span> <span>(</span>big <span>&lt;</span> small<span>)</span>\n        <span>if</span> <span>(</span>nums<span>[</span>big<span>]</span> <span>+</span> nums<span>[</span>small<span>]</span> <span>&lt;</span> sum<span>)</span> big<span>++</span><span>;</span>\n        <span>else</span> <span>if</span> <span>(</span>nums<span>[</span>big<span>]</span> <span>+</span> nums<span>[</span>small<span>]</span> <span>></span> sum<span>)</span> small<span>--</span><span>;</span>\n        <span>else</span> <span>{</span>\n          result<span>.</span><span>push</span><span>(</span><span>[</span>nums<span>[</span>i<span>]</span><span>,</span> nums<span>[</span>big<span>]</span><span>,</span> nums<span>[</span>small<span>]</span><span>]</span><span>)</span><span>;</span>\n          <span>while</span> <span>(</span>big <span>&lt;</span> small <span>&amp;&amp;</span> nums<span>[</span>big<span>]</span> <span>===</span> nums<span>[</span>big <span>+</span> <span>1</span><span>]</span><span>)</span> big<span>++</span><span>;</span>\n          <span>while</span> <span>(</span>big <span>&lt;</span> small <span>&amp;&amp;</span> nums<span>[</span>small<span>]</span> <span>===</span> nums<span>[</span>small <span>-</span> <span>1</span><span>]</span><span>)</span> small<span>--</span><span>;</span>\n          big<span>++</span><span>;</span>\n          small<span>--</span><span>;</span>\n        <span>}</span>\n  <span>}</span>\n\n  <span>return</span> result<span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br></div></div><h2 id=\"typescript\"> TypeScript</h2>\n<div><pre><code><span>/**\n * Runtime: 156 ms, faster than 82.24% of TypeScript online submissions for 3Sum.\n *\n *  Memory Usage: 49.3 MB, less than 5.26% of TypeScript online submissions for 3Sum.\n */</span>\n\n<span>const</span> threeSum <span>=</span> <span>(</span>nums<span>:</span> <span>number</span><span>[</span><span>]</span><span>)</span><span>:</span> <span>number</span><span>[</span><span>]</span><span>[</span><span>]</span> <span>=></span> <span>{</span>\n  <span>const</span> result<span>:</span> <span>number</span><span>[</span><span>]</span><span>[</span><span>]</span> <span>=</span> <span>[</span><span>]</span><span>;</span>\n\n  <span>if</span> <span>(</span>nums<span>.</span>length <span>&lt;</span> <span>3</span><span>)</span> <span>return</span> result<span>;</span>\n\n  nums<span>.</span><span>sort</span><span>(</span><span>(</span>a<span>,</span> b<span>)</span> <span>=></span> a <span>-</span> b<span>)</span><span>;</span>\n\n  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length <span>-</span> <span>2</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n    <span>let</span> big <span>=</span> i <span>+</span> <span>1</span><span>;</span>\n    <span>let</span> small <span>=</span> nums<span>.</span>length <span>-</span> <span>1</span><span>;</span>\n    <span>let</span> sum <span>=</span> <span>0</span> <span>-</span> nums<span>[</span>i<span>]</span><span>;</span>\n\n    <span>if</span> <span>(</span>i <span>>=</span> <span>0</span> <span>&amp;&amp;</span> nums<span>[</span>i<span>]</span> <span>!==</span> nums<span>[</span>i <span>-</span> <span>1</span><span>]</span><span>)</span>\n      <span>while</span> <span>(</span>big <span>&lt;</span> small<span>)</span>\n        <span>if</span> <span>(</span>nums<span>[</span>big<span>]</span> <span>+</span> nums<span>[</span>small<span>]</span> <span>&lt;</span> sum<span>)</span> big<span>++</span><span>;</span>\n        <span>else</span> <span>if</span> <span>(</span>nums<span>[</span>big<span>]</span> <span>+</span> nums<span>[</span>small<span>]</span> <span>></span> sum<span>)</span> small<span>--</span><span>;</span>\n        <span>else</span> <span>{</span>\n          result<span>.</span><span>push</span><span>(</span><span>[</span>nums<span>[</span>i<span>]</span><span>,</span> nums<span>[</span>big<span>]</span><span>,</span> nums<span>[</span>small<span>]</span><span>]</span><span>)</span><span>;</span>\n          <span>while</span> <span>(</span>big <span>&lt;</span> small <span>&amp;&amp;</span> nums<span>[</span>big<span>]</span> <span>===</span> nums<span>[</span>big <span>+</span> <span>1</span><span>]</span><span>)</span> big<span>++</span><span>;</span>\n          <span>while</span> <span>(</span>big <span>&lt;</span> small <span>&amp;&amp;</span> nums<span>[</span>small<span>]</span> <span>===</span> nums<span>[</span>small <span>-</span> <span>1</span><span>]</span><span>)</span> small<span>--</span><span>;</span>\n          big<span>++</span><span>;</span>\n          small<span>--</span><span>;</span>\n        <span>}</span>\n  <span>}</span>\n\n  <span>return</span> result<span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.758Z",
      "authors": [
        {
          "name": "15. 3sum"
        }
      ],
      "tags": [
        "Mister-Hope"
      ]
    },
    {
      "title": "TypeScript",
      "url": "https://leetcode.innenu.com/15-3sum/TypeScript/",
      "id": "https://leetcode.innenu.com/15-3sum/TypeScript/",
      "content_html": "<h2 id=\"mister-hope\"> Mister-Hope</h2>\n<div><pre><code><span>/**\n * Runtime: 156 ms, faster than 82.24% of TypeScript online submissions for 3Sum.\n *\n *  Memory Usage: 49.3 MB, less than 5.26% of TypeScript online submissions for 3Sum.\n */</span>\n\n<span>const</span> threeSum <span>=</span> <span>(</span>nums<span>:</span> <span>number</span><span>[</span><span>]</span><span>)</span><span>:</span> <span>number</span><span>[</span><span>]</span><span>[</span><span>]</span> <span>=></span> <span>{</span>\n  <span>const</span> result<span>:</span> <span>number</span><span>[</span><span>]</span><span>[</span><span>]</span> <span>=</span> <span>[</span><span>]</span><span>;</span>\n\n  <span>if</span> <span>(</span>nums<span>.</span>length <span>&lt;</span> <span>3</span><span>)</span> <span>return</span> result<span>;</span>\n\n  nums<span>.</span><span>sort</span><span>(</span><span>(</span>a<span>,</span> b<span>)</span> <span>=></span> a <span>-</span> b<span>)</span><span>;</span>\n\n  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length <span>-</span> <span>2</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n    <span>let</span> big <span>=</span> i <span>+</span> <span>1</span><span>;</span>\n    <span>let</span> small <span>=</span> nums<span>.</span>length <span>-</span> <span>1</span><span>;</span>\n    <span>let</span> sum <span>=</span> <span>0</span> <span>-</span> nums<span>[</span>i<span>]</span><span>;</span>\n\n    <span>if</span> <span>(</span>i <span>>=</span> <span>0</span> <span>&amp;&amp;</span> nums<span>[</span>i<span>]</span> <span>!==</span> nums<span>[</span>i <span>-</span> <span>1</span><span>]</span><span>)</span>\n      <span>while</span> <span>(</span>big <span>&lt;</span> small<span>)</span>\n        <span>if</span> <span>(</span>nums<span>[</span>big<span>]</span> <span>+</span> nums<span>[</span>small<span>]</span> <span>&lt;</span> sum<span>)</span> big<span>++</span><span>;</span>\n        <span>else</span> <span>if</span> <span>(</span>nums<span>[</span>big<span>]</span> <span>+</span> nums<span>[</span>small<span>]</span> <span>></span> sum<span>)</span> small<span>--</span><span>;</span>\n        <span>else</span> <span>{</span>\n          result<span>.</span><span>push</span><span>(</span><span>[</span>nums<span>[</span>i<span>]</span><span>,</span> nums<span>[</span>big<span>]</span><span>,</span> nums<span>[</span>small<span>]</span><span>]</span><span>)</span><span>;</span>\n          <span>while</span> <span>(</span>big <span>&lt;</span> small <span>&amp;&amp;</span> nums<span>[</span>big<span>]</span> <span>===</span> nums<span>[</span>big <span>+</span> <span>1</span><span>]</span><span>)</span> big<span>++</span><span>;</span>\n          <span>while</span> <span>(</span>big <span>&lt;</span> small <span>&amp;&amp;</span> nums<span>[</span>small<span>]</span> <span>===</span> nums<span>[</span>small <span>-</span> <span>1</span><span>]</span><span>)</span> small<span>--</span><span>;</span>\n          big<span>++</span><span>;</span>\n          small<span>--</span><span>;</span>\n        <span>}</span>\n  <span>}</span>\n\n  <span>return</span> result<span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.758Z",
      "authors": [
        {
          "name": "15. 3sum"
        }
      ],
      "tags": [
        "TypeScript"
      ]
    },
    {
      "title": "15. 3Sum",
      "url": "https://leetcode.innenu.com/15-3sum/",
      "id": "https://leetcode.innenu.com/15-3sum/",
      "content_html": "<h1 id=\"_15-3sum\"> <a href=\"https://leetcode.com/problems/3sum/\" target=\"_blank\" rel=\"noopener noreferrer\">15. 3Sum</a></h1>\n<p>Given an array <code>nums</code> of <em>n</em> integers, are there elements <em>a</em>, <em>b</em>, <em>c</em> in <code>nums</code> such that <em>a</em> + <em>b</em> + <em>c</em> = 0? Find all unique triplets in the array which gives the sum of zero.</p>\n<p>Notice that the solution set must not contain duplicate triplets.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> nums = [-1,0,1,2,-1,-4]</p>\n<p><strong>Output:</strong> [[-1,-1,2],[-1,0,1]]</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> nums = []</p>\n<p><strong>Output:</strong> []</p>\n<p><strong>Example 3:</strong></p>\n<p><strong>Input:</strong> nums = [0]</p>\n<p><strong>Output:</strong> []</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>0 &lt;= nums.length &lt;= 3000</code></li>\n<li><code>-105 &lt;= nums[i] &lt;= 105</code></li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "C++",
      "url": "https://leetcode.innenu.com/1502-can-make-arithmetic-progression-from-sequence/C++/",
      "id": "https://leetcode.innenu.com/1502-can-make-arithmetic-progression-from-sequence/C++/",
      "content_html": "<h2 id=\"sqm\"> sqm</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>\n<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>bool</span> <span>canMakeArithmeticProgression</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> arr<span>)</span> <span>{</span>\n    <span>sort</span><span>(</span>arr<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> arr<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>1</span><span>;</span> i <span>&lt;</span> arr<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>arr<span>[</span>i <span>+</span> <span>1</span><span>]</span> <span>-</span> arr<span>[</span>i<span>]</span> <span>!=</span> arr<span>[</span>i<span>]</span> <span>-</span> arr<span>[</span>i <span>-</span> <span>1</span><span>]</span><span>)</span> <span>return</span> <span>false</span><span>;</span>\n    <span>}</span>\n    <span>return</span> <span>true</span><span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.759Z",
      "authors": [
        {
          "name": "1502. Can Make Arithmetic Progression From Sequence"
        }
      ],
      "tags": [
        "C++"
      ]
    },
    {
      "title": "1502. Can Make Arithmetic Progression From Sequence",
      "url": "https://leetcode.innenu.com/1502-can-make-arithmetic-progression-from-sequence/",
      "id": "https://leetcode.innenu.com/1502-can-make-arithmetic-progression-from-sequence/",
      "content_html": "<h1 id=\"_1502-can-make-arithmetic-progression-from-sequence\"> <a href=\"https://leetcode.com/problems/can-make-arithmetic-progression-from-sequence/\" target=\"_blank\" rel=\"noopener noreferrer\">1502. Can Make Arithmetic Progression From Sequence</a></h1>\n<p>Given an array of numbers <code>arr</code>. A sequence of numbers is called an arithmetic progression if the difference between any two consecutive elements is the same.</p>\n<p>Return <code>true</code> if the array can be rearranged to form an arithmetic progression, otherwise, return <code>false</code>.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> arr = [3,5,1]</p>\n<p><strong>Output:</strong> true</p>\n<p><strong>Explanation:</strong> We can reorder the elements as [1,3,5] or [5,3,1] with differences 2 and -2 respectively, between each consecutive elements.</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> arr = [1,2,4]</p>\n<p><strong>Output:</strong> false</p>\n<p><strong>Explanation:</strong> There is no way to reorder the elements to obtain an arithmetic progression.</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>2 &lt;= arr.length &lt;= 1000</code></li>\n<li><code>-10^6 &lt;= arr[i] &lt;= 10^6</code></li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "sqm",
      "url": "https://leetcode.innenu.com/1502-can-make-arithmetic-progression-from-sequence/sqm/",
      "id": "https://leetcode.innenu.com/1502-can-make-arithmetic-progression-from-sequence/sqm/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>\n<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>bool</span> <span>canMakeArithmeticProgression</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> arr<span>)</span> <span>{</span>\n    <span>sort</span><span>(</span>arr<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> arr<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>1</span><span>;</span> i <span>&lt;</span> arr<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>arr<span>[</span>i <span>+</span> <span>1</span><span>]</span> <span>-</span> arr<span>[</span>i<span>]</span> <span>!=</span> arr<span>[</span>i<span>]</span> <span>-</span> arr<span>[</span>i <span>-</span> <span>1</span><span>]</span><span>)</span> <span>return</span> <span>false</span><span>;</span>\n    <span>}</span>\n    <span>return</span> <span>true</span><span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.760Z",
      "authors": [
        {
          "name": "1502. Can Make Arithmetic Progression From Sequence"
        }
      ],
      "tags": [
        "sqm"
      ]
    },
    {
      "title": "C++",
      "url": "https://leetcode.innenu.com/1512-Number-of-Good-Pairs/C++/",
      "id": "https://leetcode.innenu.com/1512-Number-of-Good-Pairs/C++/",
      "content_html": "<h2 id=\"lmy\"> lmy</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>int</span> <span>numIdenticalPairs</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums<span>)</span> <span>{</span>\n    <span>int</span> ans <span>=</span> <span>0</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>for</span> <span>(</span><span>int</span> j <span>=</span> i <span>+</span> <span>1</span><span>;</span> j <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> j<span>++</span><span>)</span>\n        <span>if</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>==</span> nums<span>[</span>j<span>]</span><span>)</span> <span>{</span>\n          ans<span>++</span><span>;</span>\n        <span>}</span>\n    <span>}</span>\n    <span>return</span> ans<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.760Z",
      "authors": [
        {
          "name": "1512. Number of Good Pairs"
        }
      ],
      "tags": [
        "C++"
      ]
    },
    {
      "title": "Java",
      "url": "https://leetcode.innenu.com/1512-Number-of-Good-Pairs/Java/",
      "id": "https://leetcode.innenu.com/1512-Number-of-Good-Pairs/Java/",
      "content_html": "<h2 id=\"lizncu\"> lizncu</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span> <span>numIdenticalPairs</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>)</span> <span>{</span>\n    <span>int</span> count <span>=</span> <span>0</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>for</span> <span>(</span><span>int</span> j <span>=</span> i <span>+</span> <span>1</span><span>;</span> j <span>&lt;</span> nums<span>.</span>length<span>;</span> j<span>++</span><span>)</span> <span>{</span>\n        <span>if</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>==</span> nums<span>[</span>j<span>]</span><span>)</span> <span>{</span>\n          count<span>++</span><span>;</span>\n        <span>}</span>\n      <span>}</span>\n    <span>}</span>\n\n    <span>return</span> count<span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.761Z",
      "authors": [
        {
          "name": "1512. Number of Good Pairs"
        }
      ],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "lizncu",
      "url": "https://leetcode.innenu.com/1512-Number-of-Good-Pairs/lizncu/",
      "id": "https://leetcode.innenu.com/1512-Number-of-Good-Pairs/lizncu/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span> <span>numIdenticalPairs</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>)</span> <span>{</span>\n    <span>int</span> count <span>=</span> <span>0</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>for</span> <span>(</span><span>int</span> j <span>=</span> i <span>+</span> <span>1</span><span>;</span> j <span>&lt;</span> nums<span>.</span>length<span>;</span> j<span>++</span><span>)</span> <span>{</span>\n        <span>if</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>==</span> nums<span>[</span>j<span>]</span><span>)</span> <span>{</span>\n          count<span>++</span><span>;</span>\n        <span>}</span>\n      <span>}</span>\n    <span>}</span>\n\n    <span>return</span> count<span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.761Z",
      "authors": [
        {
          "name": "1512. Number of Good Pairs"
        }
      ],
      "tags": [
        "lizncu"
      ]
    },
    {
      "title": "lmy",
      "url": "https://leetcode.innenu.com/1512-Number-of-Good-Pairs/lmy/",
      "id": "https://leetcode.innenu.com/1512-Number-of-Good-Pairs/lmy/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>int</span> <span>numIdenticalPairs</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums<span>)</span> <span>{</span>\n    <span>int</span> ans <span>=</span> <span>0</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>for</span> <span>(</span><span>int</span> j <span>=</span> i <span>+</span> <span>1</span><span>;</span> j <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> j<span>++</span><span>)</span>\n        <span>if</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>==</span> nums<span>[</span>j<span>]</span><span>)</span> <span>{</span>\n          ans<span>++</span><span>;</span>\n        <span>}</span>\n    <span>}</span>\n    <span>return</span> ans<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.761Z",
      "authors": [
        {
          "name": "1512. Number of Good Pairs"
        }
      ],
      "tags": [
        "lmy"
      ]
    },
    {
      "title": "1512. Number of Good Pairs",
      "url": "https://leetcode.innenu.com/1512-Number-of-Good-Pairs/",
      "id": "https://leetcode.innenu.com/1512-Number-of-Good-Pairs/",
      "content_html": "<h1 id=\"_1512-number-of-good-pairs\"> <a href=\"https://leetcode.com/problems/number-of-good-pairs/\" target=\"_blank\" rel=\"noopener noreferrer\">1512. Number of Good Pairs</a></h1>\n<p>Given an array of integers <code>nums</code>.</p>\n<p>A pair <code>(i,j)</code> is called <em>good</em> if <code>nums[i]</code> == <code>nums[j]</code> and <code>i</code> &lt; <code>j</code>.</p>\n<p>Return the number of <em>good</em> pairs.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> nums = [1,2,3,1,1,3]</p>\n<p><strong>Output:</strong> 4</p>\n<p><strong>Explanation:</strong> There are 4 good pairs (0,3), (0,4), (3,4), (2,5) 0-indexed.</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> nums = [1,1,1,1]</p>\n<p><strong>Output:</strong> 6</p>\n<p><strong>Explanation:</strong> Each pair in the array are <em>good</em>.</p>\n<p><strong>Example 3:</strong></p>\n<p><strong>Input:</strong> nums = [1,2,3]</p>\n<p><strong>Output:</strong> 0</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 100</code></li>\n<li><code>1 &lt;= nums[i] &lt;= 100</code></li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "C++",
      "url": "https://leetcode.innenu.com/1518-Wate-Bottles/C++/",
      "id": "https://leetcode.innenu.com/1518-Wate-Bottles/C++/",
      "content_html": "<h2 id=\"lmy\"> lmy</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>int</span> <span>numWaterBottles</span><span>(</span><span>int</span> numBottles<span>,</span> <span>int</span> numExchange<span>)</span> <span>{</span>\n    <span>int</span> sum <span>=</span> <span>0</span><span>;</span>\n    <span>int</span> emptybottles <span>=</span> numBottles<span>;</span>\n    <span>while</span> <span>(</span>numBottles <span>!=</span> <span>0</span><span>)</span> <span>{</span>\n      sum <span>+=</span> numBottles<span>;</span>\n      numBottles <span>=</span> emptybottles <span>/</span> numExchange<span>;</span>\n      emptybottles <span>=</span> emptybottles <span>-</span> numBottles <span>*</span> numExchange <span>+</span> numBottles<span>;</span>\n    <span>}</span>\n    <span>return</span> sum<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.762Z",
      "authors": [
        {
          "name": "1518. Wate Bottles"
        }
      ],
      "tags": [
        "C++"
      ]
    },
    {
      "title": "Java",
      "url": "https://leetcode.innenu.com/1518-Wate-Bottles/Java/",
      "id": "https://leetcode.innenu.com/1518-Wate-Bottles/Java/",
      "content_html": "<h2 id=\"lizncu\"> lizncu</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span> <span>numWaterBottles</span><span>(</span><span>int</span> numBottles<span>,</span> <span>int</span> numExchange<span>)</span> <span>{</span>\n    <span>int</span> ans <span>=</span> numBottles<span>;</span>\n\n    <span>int</span> amount <span>=</span> numBottles <span>/</span> numExchange<span>;</span>\n\n    <span>while</span> <span>(</span>amount <span>!=</span> <span>0</span><span>)</span> <span>{</span>\n      ans <span>+=</span> amount<span>;</span>\n      numBottles <span>-=</span> <span>(</span>numExchange <span>-</span> <span>1</span><span>)</span> <span>*</span> amount<span>;</span>\n      amount <span>=</span> numBottles <span>/</span> numExchange<span>;</span>\n    <span>}</span>\n\n    <span>return</span> ans<span>;</span>\n  <span>}</span>\n<span>}</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.762Z",
      "authors": [
        {
          "name": "1518. Wate Bottles"
        }
      ],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "lizncu",
      "url": "https://leetcode.innenu.com/1518-Wate-Bottles/lizncu/",
      "id": "https://leetcode.innenu.com/1518-Wate-Bottles/lizncu/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span> <span>numWaterBottles</span><span>(</span><span>int</span> numBottles<span>,</span> <span>int</span> numExchange<span>)</span> <span>{</span>\n    <span>int</span> ans <span>=</span> numBottles<span>;</span>\n\n    <span>int</span> amount <span>=</span> numBottles <span>/</span> numExchange<span>;</span>\n\n    <span>while</span> <span>(</span>amount <span>!=</span> <span>0</span><span>)</span> <span>{</span>\n      ans <span>+=</span> amount<span>;</span>\n      numBottles <span>-=</span> <span>(</span>numExchange <span>-</span> <span>1</span><span>)</span> <span>*</span> amount<span>;</span>\n      amount <span>=</span> numBottles <span>/</span> numExchange<span>;</span>\n    <span>}</span>\n\n    <span>return</span> ans<span>;</span>\n  <span>}</span>\n<span>}</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.763Z",
      "authors": [
        {
          "name": "1518. Wate Bottles"
        }
      ],
      "tags": [
        "lizncu"
      ]
    },
    {
      "title": "C++",
      "url": "https://leetcode.innenu.com/1528-Shuffle-String/C++/",
      "id": "https://leetcode.innenu.com/1528-Shuffle-String/C++/",
      "content_html": "<h2 id=\"lmy\"> lmy</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  string <span>restoreString</span><span>(</span>string s<span>,</span> vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> indices<span>)</span> <span>{</span>\n    string <span>p</span><span>(</span>s<span>)</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> indices<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      p<span>[</span>indices<span>[</span>i<span>]</span><span>]</span> <span>=</span> s<span>[</span>i<span>]</span><span>;</span>\n    <span>}</span>\n    <span>return</span> p<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.763Z",
      "authors": [
        {
          "name": "1528. Shuffle String"
        }
      ],
      "tags": [
        "C++"
      ]
    },
    {
      "title": "Java",
      "url": "https://leetcode.innenu.com/1528-Shuffle-String/Java/",
      "id": "https://leetcode.innenu.com/1528-Shuffle-String/Java/",
      "content_html": "<h2 id=\"mister-hope\"> Mister-Hope</h2>\n<div><pre><code><span>/*\n * Runtime: 1 ms, faster than 99.95% of Java online submissions for Shuffle String.\n *\n * Memory Usage: 39.4 MB, less than 7.86% of Java online submissions for Shuffle String.\n */</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>String</span> <span>restoreString</span><span>(</span><span>String</span> s<span>,</span> <span>int</span><span>[</span><span>]</span> indices<span>)</span> <span>{</span>\n    <span>char</span><span>[</span><span>]</span> chars <span>=</span> <span>new</span> <span>char</span><span>[</span>s<span>.</span><span>length</span><span>(</span><span>)</span><span>]</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> indices<span>.</span>length<span>;</span> i<span>++</span><span>)</span> chars<span>[</span>indices<span>[</span>i<span>]</span><span>]</span> <span>=</span> s<span>.</span><span>charAt</span><span>(</span>i<span>)</span><span>;</span>\n\n    <span>return</span> <span>new</span> <span>String</span><span>(</span>chars<span>)</span><span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div><h2 id=\"lizncu\"> lizncu</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>String</span> <span>restoreString</span><span>(</span><span>String</span> s<span>,</span> <span>int</span><span>[</span><span>]</span> indices<span>)</span> <span>{</span>\n    <span>char</span><span>[</span><span>]</span> chars <span>=</span> <span>new</span> <span>char</span><span>[</span>s<span>.</span><span>length</span><span>(</span><span>)</span><span>]</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> indices<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      chars<span>[</span>indices<span>[</span>i<span>]</span><span>]</span> <span>=</span> s<span>.</span><span>charAt</span><span>(</span>i<span>)</span><span>;</span>\n    <span>}</span>\n\n    <span>return</span> <span>new</span> <span>String</span><span>(</span>chars<span>)</span><span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.764Z",
      "authors": [
        {
          "name": "1528. Shuffle String"
        }
      ],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "JavaScript",
      "url": "https://leetcode.innenu.com/1528-Shuffle-String/JavaScript/",
      "id": "https://leetcode.innenu.com/1528-Shuffle-String/JavaScript/",
      "content_html": "<h2 id=\"mister-hope\"> Mister-Hope</h2>\n<div><pre><code><span>/*\n * Runtime: 84 ms, faster than 87.24% of JavaScript online submissions for Shuffle String.\n *\n * Memory Usage: 40.3 MB, less than 7.04% of JavaScript online submissions for Shuffle String.\n */</span>\n<span>const</span> <span>restoreString</span> <span>=</span> <span>(</span><span>s<span>,</span> indices</span><span>)</span> <span>=></span> <span>{</span>\n  <span>const</span> result <span>=</span> <span>[</span><span>]</span><span>;</span>\n\n  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> indices<span>.</span>length<span>;</span> i<span>++</span><span>)</span> result<span>[</span>indices<span>[</span>i<span>]</span><span>]</span> <span>=</span> s<span>.</span><span>charAt</span><span>(</span>i<span>)</span><span>;</span>\n\n  <span>return</span> result<span>.</span><span>join</span><span>(</span><span>\"\"</span><span>)</span><span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.764Z",
      "authors": [
        {
          "name": "1528. Shuffle String"
        }
      ],
      "tags": [
        "JavaScript"
      ]
    },
    {
      "title": "Mister-Hope",
      "url": "https://leetcode.innenu.com/1528-Shuffle-String/Mister-Hope/",
      "id": "https://leetcode.innenu.com/1528-Shuffle-String/Mister-Hope/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>/*\n * Runtime: 1 ms, faster than 99.95% of Java online submissions for Shuffle String.\n *\n * Memory Usage: 39.4 MB, less than 7.86% of Java online submissions for Shuffle String.\n */</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>String</span> <span>restoreString</span><span>(</span><span>String</span> s<span>,</span> <span>int</span><span>[</span><span>]</span> indices<span>)</span> <span>{</span>\n    <span>char</span><span>[</span><span>]</span> chars <span>=</span> <span>new</span> <span>char</span><span>[</span>s<span>.</span><span>length</span><span>(</span><span>)</span><span>]</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> indices<span>.</span>length<span>;</span> i<span>++</span><span>)</span> chars<span>[</span>indices<span>[</span>i<span>]</span><span>]</span> <span>=</span> s<span>.</span><span>charAt</span><span>(</span>i<span>)</span><span>;</span>\n\n    <span>return</span> <span>new</span> <span>String</span><span>(</span>chars<span>)</span><span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div><h2 id=\"javascript\"> JavaScript</h2>\n<div><pre><code><span>/*\n * Runtime: 84 ms, faster than 87.24% of JavaScript online submissions for Shuffle String.\n *\n * Memory Usage: 40.3 MB, less than 7.04% of JavaScript online submissions for Shuffle String.\n */</span>\n<span>const</span> <span>restoreString</span> <span>=</span> <span>(</span><span>s<span>,</span> indices</span><span>)</span> <span>=></span> <span>{</span>\n  <span>const</span> result <span>=</span> <span>[</span><span>]</span><span>;</span>\n\n  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> indices<span>.</span>length<span>;</span> i<span>++</span><span>)</span> result<span>[</span>indices<span>[</span>i<span>]</span><span>]</span> <span>=</span> s<span>.</span><span>charAt</span><span>(</span>i<span>)</span><span>;</span>\n\n  <span>return</span> result<span>.</span><span>join</span><span>(</span><span>\"\"</span><span>)</span><span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div><h2 id=\"typescript\"> TypeScript</h2>\n<div><pre><code><span>/*\n * Runtime: 92 ms, faster than 72.15% of TypeScript online submissions for Shuffle String.\n *\n * Memory Usage: 40.4 MB, less than 35.44% of TypeScript online submissions for Shuffle String.\n */</span>\n<span>const</span> restoreString <span>=</span> <span>(</span>s<span>:</span> <span>string</span><span>,</span> indices<span>:</span> <span>number</span><span>[</span><span>]</span><span>)</span><span>:</span> <span>string</span> <span>=></span> <span>{</span>\n  <span>const</span> result<span>:</span> <span>string</span><span>[</span><span>]</span> <span>=</span> <span>[</span><span>]</span><span>;</span>\n\n  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> indices<span>.</span>length<span>;</span> i<span>++</span><span>)</span> result<span>[</span>indices<span>[</span>i<span>]</span><span>]</span> <span>=</span> s<span>.</span><span>charAt</span><span>(</span>i<span>)</span><span>;</span>\n\n  <span>return</span> result<span>.</span><span>join</span><span>(</span><span>\"\"</span><span>)</span><span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.765Z",
      "authors": [
        {
          "name": "1528. Shuffle String"
        }
      ],
      "tags": [
        "Mister-Hope"
      ]
    },
    {
      "title": "TypeScript",
      "url": "https://leetcode.innenu.com/1528-Shuffle-String/TypeScript/",
      "id": "https://leetcode.innenu.com/1528-Shuffle-String/TypeScript/",
      "content_html": "<h2 id=\"mister-hope\"> Mister-Hope</h2>\n<div><pre><code><span>/*\n * Runtime: 92 ms, faster than 72.15% of TypeScript online submissions for Shuffle String.\n *\n * Memory Usage: 40.4 MB, less than 35.44% of TypeScript online submissions for Shuffle String.\n */</span>\n<span>const</span> restoreString <span>=</span> <span>(</span>s<span>:</span> <span>string</span><span>,</span> indices<span>:</span> <span>number</span><span>[</span><span>]</span><span>)</span><span>:</span> <span>string</span> <span>=></span> <span>{</span>\n  <span>const</span> result<span>:</span> <span>string</span><span>[</span><span>]</span> <span>=</span> <span>[</span><span>]</span><span>;</span>\n\n  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> indices<span>.</span>length<span>;</span> i<span>++</span><span>)</span> result<span>[</span>indices<span>[</span>i<span>]</span><span>]</span> <span>=</span> s<span>.</span><span>charAt</span><span>(</span>i<span>)</span><span>;</span>\n\n  <span>return</span> result<span>.</span><span>join</span><span>(</span><span>\"\"</span><span>)</span><span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.765Z",
      "authors": [
        {
          "name": "1528. Shuffle String"
        }
      ],
      "tags": [
        "TypeScript"
      ]
    },
    {
      "title": "lizncu",
      "url": "https://leetcode.innenu.com/1528-Shuffle-String/lizncu/",
      "id": "https://leetcode.innenu.com/1528-Shuffle-String/lizncu/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>String</span> <span>restoreString</span><span>(</span><span>String</span> s<span>,</span> <span>int</span><span>[</span><span>]</span> indices<span>)</span> <span>{</span>\n    <span>char</span><span>[</span><span>]</span> chars <span>=</span> <span>new</span> <span>char</span><span>[</span>s<span>.</span><span>length</span><span>(</span><span>)</span><span>]</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> indices<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      chars<span>[</span>indices<span>[</span>i<span>]</span><span>]</span> <span>=</span> s<span>.</span><span>charAt</span><span>(</span>i<span>)</span><span>;</span>\n    <span>}</span>\n\n    <span>return</span> <span>new</span> <span>String</span><span>(</span>chars<span>)</span><span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.765Z",
      "authors": [
        {
          "name": "1528. Shuffle String"
        }
      ],
      "tags": [
        "lizncu"
      ]
    },
    {
      "title": "lmy",
      "url": "https://leetcode.innenu.com/1528-Shuffle-String/lmy/",
      "id": "https://leetcode.innenu.com/1528-Shuffle-String/lmy/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  string <span>restoreString</span><span>(</span>string s<span>,</span> vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> indices<span>)</span> <span>{</span>\n    string <span>p</span><span>(</span>s<span>)</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> indices<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      p<span>[</span>indices<span>[</span>i<span>]</span><span>]</span> <span>=</span> s<span>[</span>i<span>]</span><span>;</span>\n    <span>}</span>\n    <span>return</span> p<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.766Z",
      "authors": [
        {
          "name": "1528. Shuffle String"
        }
      ],
      "tags": [
        "lmy"
      ]
    },
    {
      "title": "1528. Shuffle String",
      "url": "https://leetcode.innenu.com/1528-Shuffle-String/",
      "id": "https://leetcode.innenu.com/1528-Shuffle-String/",
      "content_html": "<h1 id=\"_1528-shuffle-string\"> <a href=\"https://leetcode.com/problems/shuffle-string/\" target=\"_blank\" rel=\"noopener noreferrer\">1528. Shuffle String</a></h1>\n<p>Given a string <code>s</code> and an integer array <code>indices</code> of the <strong>same length</strong>.</p>\n<p>The string <code>s</code> will be shuffled such that the character at the <code>ith</code> position moves to <code>indices[i]</code> in the shuffled string.</p>\n<p>Return <em>the shuffled string</em>.</p>\n<p><strong>Example 1:</strong></p>\n<p><img src=\"https://assets.leetcode.com/uploads/2020/07/09/q1.jpg\" alt=\"LeetCode Image\" /></p>\n<p><strong>Input:</strong> s = &quot;codeleet&quot;, <code>indices</code> = [4,5,6,7,0,2,1,3]</p>\n<p><strong>Output:</strong> &quot;leetcode&quot;</p>\n<p><strong>Explanation:</strong> As shown, &quot;codeleet&quot; becomes &quot;leetcode&quot; after shuffling.</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> s = &quot;abc&quot;, <code>indices</code> = [0,1,2]</p>\n<p><strong>Output:</strong> &quot;abc&quot;</p>\n<p><strong>Explanation:</strong> After shuffling, each character remains in its position.</p>\n<p><strong>Example 3:</strong></p>\n<p><strong>Input:</strong> s = &quot;aiohn&quot;, <code>indices</code> = [3,1,4,2,0]</p>\n<p><strong>Output:</strong> &quot;nihao&quot;</p>\n<p><strong>Example 4:</strong></p>\n<p><strong>Input:</strong> s = &quot;aaiougrt&quot;, <code>indices</code> = [4,0,2,6,7,3,1,5]</p>\n<p><strong>Output:</strong> &quot;arigatou&quot;</p>\n<p><strong>Example 5:</strong></p>\n<p><strong>Input:</strong> s = &quot;art&quot;, <code>indices</code> = [1,0,2]</p>\n<p><strong>Output:</strong> &quot;rat&quot;</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>s.length == indices.length == n</code></li>\n<li><code>1 &lt;= n &lt;= 100</code></li>\n<li><code>s</code> contains only lower-case English letters.</li>\n<li><code>0 &lt;= indices[i] &lt; n</code></li>\n<li>All values of <code>indices</code> are unique (i.e. <code>indices</code> is a permutation of the integers from <code>0</code> to <code>n - 1</code>).</li>\n</ul>\n",
      "image": "https://assets.leetcode.com/uploads/2020/07/09/q1.jpg",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "Java",
      "url": "https://leetcode.innenu.com/1572-Matrix-Diagonal-Sum/Java/",
      "id": "https://leetcode.innenu.com/1572-Matrix-Diagonal-Sum/Java/",
      "content_html": "<h2 id=\"lizncu\"> lizncu</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span> <span>diagonalSum</span><span>(</span><span>int</span><span>[</span><span>]</span><span>[</span><span>]</span> mat<span>)</span> <span>{</span>\n    <span>int</span> sum <span>=</span> <span>0</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> mat<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      sum <span>+=</span> mat<span>[</span>i<span>]</span><span>[</span>i<span>]</span><span>;</span>\n      sum <span>+=</span> mat<span>[</span>i<span>]</span><span>[</span>mat<span>.</span>length <span>-</span> <span>1</span> <span>-</span> i<span>]</span><span>;</span>\n    <span>}</span>\n\n    <span>if</span> <span>(</span>mat<span>.</span>length <span>%</span> <span>2</span> <span>==</span> <span>0</span><span>)</span> <span>{</span>\n      <span>return</span> sum<span>;</span>\n    <span>}</span>\n\n    <span>else</span> <span>{</span>\n      <span>return</span> <span>(</span>sum <span>-</span> mat<span>[</span>mat<span>.</span>length <span>/</span> <span>2</span><span>]</span><span>[</span>mat<span>.</span>length <span>/</span> <span>2</span><span>]</span><span>)</span><span>;</span>\n    <span>}</span>\n  <span>}</span>\n<span>}</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.767Z",
      "authors": [
        {
          "name": "1572. Matrix Diagonal Sum"
        }
      ],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "lizncu",
      "url": "https://leetcode.innenu.com/1572-Matrix-Diagonal-Sum/lizncu/",
      "id": "https://leetcode.innenu.com/1572-Matrix-Diagonal-Sum/lizncu/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span> <span>diagonalSum</span><span>(</span><span>int</span><span>[</span><span>]</span><span>[</span><span>]</span> mat<span>)</span> <span>{</span>\n    <span>int</span> sum <span>=</span> <span>0</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> mat<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      sum <span>+=</span> mat<span>[</span>i<span>]</span><span>[</span>i<span>]</span><span>;</span>\n      sum <span>+=</span> mat<span>[</span>i<span>]</span><span>[</span>mat<span>.</span>length <span>-</span> <span>1</span> <span>-</span> i<span>]</span><span>;</span>\n    <span>}</span>\n\n    <span>if</span> <span>(</span>mat<span>.</span>length <span>%</span> <span>2</span> <span>==</span> <span>0</span><span>)</span> <span>{</span>\n      <span>return</span> sum<span>;</span>\n    <span>}</span>\n\n    <span>else</span> <span>{</span>\n      <span>return</span> <span>(</span>sum <span>-</span> mat<span>[</span>mat<span>.</span>length <span>/</span> <span>2</span><span>]</span><span>[</span>mat<span>.</span>length <span>/</span> <span>2</span><span>]</span><span>)</span><span>;</span>\n    <span>}</span>\n  <span>}</span>\n<span>}</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.768Z",
      "authors": [
        {
          "name": "1572. Matrix Diagonal Sum"
        }
      ],
      "tags": [
        "lizncu"
      ]
    },
    {
      "title": "Java",
      "url": "https://leetcode.innenu.com/1603-Design-Parking-System/Java/",
      "id": "https://leetcode.innenu.com/1603-Design-Parking-System/Java/",
      "content_html": "<h2 id=\"lizncu\"> lizncu</h2>\n<div><pre><code><span>class</span> <span>ParkingSystem</span> <span>{</span>\n  <span>int</span> site<span>[</span><span>]</span><span>;</span>\n\n  <span>public</span> <span>ParkingSystem</span><span>(</span><span>int</span> big<span>,</span> <span>int</span> medium<span>,</span> <span>int</span> small<span>)</span> <span>{</span>\n    site <span>=</span> <span>new</span> <span>int</span><span>[</span><span>]</span> <span>{</span>big<span>,</span> medium<span>,</span> small<span>}</span><span>;</span>\n  <span>}</span>\n\n  <span>public</span> <span>boolean</span> <span>addCar</span><span>(</span><span>int</span> carType<span>)</span> <span>{</span>\n    <span>if</span> <span>(</span>site<span>[</span>carType <span>-</span> <span>1</span><span>]</span> <span>></span> <span>0</span><span>)</span> <span>{</span>\n      site<span>[</span>carType <span>-</span> <span>1</span><span>]</span><span>--</span><span>;</span>\n      <span>return</span> <span>true</span><span>;</span>\n    <span>}</span>\n    <span>return</span> <span>false</span><span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.768Z",
      "authors": [
        {
          "name": "1603. Design Parking System"
        }
      ],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "1572. Matrix Diagonal Sum",
      "url": "https://leetcode.innenu.com/1572-Matrix-Diagonal-Sum/",
      "id": "https://leetcode.innenu.com/1572-Matrix-Diagonal-Sum/",
      "content_html": "<h1 id=\"_1572-matrix-diagonal-sum\"> <a href=\"https://leetcode.com/problems/matrix-diagonal-sum/\" target=\"_blank\" rel=\"noopener noreferrer\">1572. Matrix Diagonal Sum</a></h1>\n<p>Given a square matrix <code>mat</code>, return the sum of the matrix diagonals.</p>\n<p>Only include the sum of all the elements on the primary diagonal and all the elements on the secondary diagonal that are not part of the primary diagonal.</p>\n<p><strong>Example 1:</strong></p>\n<p><img src=\"https://assets.leetcode.com/uploads/2020/08/14/sample_1911.png\" alt=\"LeetCode Image\" /></p>\n<p><strong>Input:</strong> mat = [[<strong>1</strong>,2,<strong>3</strong>],\n[4,<strong>5</strong>,6],\n[<strong>7</strong>,8,<strong>9</strong>]]</p>\n<p><strong>Output:</strong> 25</p>\n<p><strong>Explanation:</strong> Diagonals sum: 1 + 5 + 9 + 3 + 7 = 25\nNotice that element mat[1][1] = 5 is counted only once.</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> mat = [[<strong>1</strong>,1,1,<strong>1</strong>],\n[1,<strong>1</strong>,<strong>1</strong>,1],\n[1,<strong>1</strong>,<strong>1</strong>,1],\n[<strong>1</strong>,1,1,<strong>1</strong>]]</p>\n<p><strong>Output:</strong> 8</p>\n<p><strong>Example 3:</strong></p>\n<p><strong>Input:</strong> mat = [[<strong>5</strong>]]</p>\n<p><strong>Output:</strong> 5</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>n == mat.length == mat[i].length</code></li>\n<li><code>1 &lt;= n &lt;= 100</code></li>\n<li><code>1 &lt;= mat[i][j] &lt;= 100</code></li>\n</ul>\n",
      "image": "https://assets.leetcode.com/uploads/2020/08/14/sample_1911.png",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "lizncu",
      "url": "https://leetcode.innenu.com/1603-Design-Parking-System/lizncu/",
      "id": "https://leetcode.innenu.com/1603-Design-Parking-System/lizncu/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>class</span> <span>ParkingSystem</span> <span>{</span>\n  <span>int</span> site<span>[</span><span>]</span><span>;</span>\n\n  <span>public</span> <span>ParkingSystem</span><span>(</span><span>int</span> big<span>,</span> <span>int</span> medium<span>,</span> <span>int</span> small<span>)</span> <span>{</span>\n    site <span>=</span> <span>new</span> <span>int</span><span>[</span><span>]</span> <span>{</span>big<span>,</span> medium<span>,</span> small<span>}</span><span>;</span>\n  <span>}</span>\n\n  <span>public</span> <span>boolean</span> <span>addCar</span><span>(</span><span>int</span> carType<span>)</span> <span>{</span>\n    <span>if</span> <span>(</span>site<span>[</span>carType <span>-</span> <span>1</span><span>]</span> <span>></span> <span>0</span><span>)</span> <span>{</span>\n      site<span>[</span>carType <span>-</span> <span>1</span><span>]</span><span>--</span><span>;</span>\n      <span>return</span> <span>true</span><span>;</span>\n    <span>}</span>\n    <span>return</span> <span>false</span><span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.769Z",
      "authors": [
        {
          "name": "1603. Design Parking System"
        }
      ],
      "tags": [
        "lizncu"
      ]
    },
    {
      "title": "1603. Design Parking System",
      "url": "https://leetcode.innenu.com/1603-Design-Parking-System/",
      "id": "https://leetcode.innenu.com/1603-Design-Parking-System/",
      "content_html": "<h1 id=\"_1603-design-parking-system\"> <a href=\"https://leetcode.com/problems/design-parking-system/\" target=\"_blank\" rel=\"noopener noreferrer\">1603. Design Parking System</a></h1>\n<p>Design a parking system for a parking lot. The parking lot has three kinds of parking spaces: big, medium, and small, with a fixed number of slots for each size.</p>\n<p>Implement the <code>ParkingSystem</code> class:</p>\n<ul>\n<li><code>ParkingSystem(int big, int medium, int small)</code> Initializes object of the <code>ParkingSystem</code> class. The number of slots for each parking space are given as part of the constructor.</li>\n<li><code>bool addCar(int carType)</code> Checks whether there is a parking space of <code>carType</code> for the car that wants to get into the parking lot. <code>carType</code> can be of three kinds: big, medium, or small, which are represented by <code>1</code>, <code>2</code>, and <code>3</code> respectively. <strong>A car can only park in a parking space of its</strong> <code>carType</code>. If there is no space available, return <code>false</code>, else park the car in that size space and return <code>true</code>.</li>\n</ul>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input</strong>\n[&quot;ParkingSystem&quot;, &quot;addCar&quot;, &quot;addCar&quot;, &quot;addCar&quot;, &quot;addCar&quot;]\n[[1, 1, 0], [1], [2], [3], [1]]\n<strong>Output</strong>\n[null, true, true, false, false]</p>\n<p><strong>Explanation</strong>\nParkingSystem parkingSystem = new ParkingSystem(1, 1, 0);\nparkingSystem.addCar(1); // return true because there is 1 available slot for a big car\nparkingSystem.addCar(2); // return true because there is 1 available slot for a medium car\nparkingSystem.addCar(3); // return false because there is no available slot for a small car\nparkingSystem.addCar(1); // return false because there is no available slot for a big car. It is already occupied.</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>0 &lt;= big, medium, small &lt;= 1000</code></li>\n<li><code>carType</code> is <code>1</code>, <code>2</code>, or <code>3</code></li>\n<li>At most <code>1000</code> calls will be made to <code>addCar</code></li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "C++",
      "url": "https://leetcode.innenu.com/167-two-sum-ii-input-array-is-sorted/C++/",
      "id": "https://leetcode.innenu.com/167-two-sum-ii-input-array-is-sorted/C++/",
      "content_html": "<h2 id=\"lmy\"> lmy</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  vector<span>&lt;</span><span>int</span><span>></span> <span>twoSum</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> numbers<span>,</span> <span>int</span> target<span>)</span> <span>{</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> numbers<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>int</span> left <span>=</span> i <span>+</span> <span>1</span><span>;</span>\n      <span>int</span> deft <span>=</span> numbers<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>;</span>\n      <span>while</span> <span>(</span>left <span>&lt;</span> deft<span>)</span> <span>{</span>\n        <span>int</span> mid <span>=</span> <span>(</span>left <span>+</span> deft<span>)</span> <span>/</span> <span>2</span><span>;</span>\n        <span>int</span> sum <span>=</span> numbers<span>[</span>i<span>]</span> <span>+</span> numbers<span>[</span>mid<span>]</span><span>;</span>\n      <span>}</span>\n    <span>}</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.770Z",
      "authors": [
        {
          "name": "167. Two Sum Ii Input Array Is Sorted"
        }
      ],
      "tags": [
        "C++"
      ]
    },
    {
      "title": "lmy",
      "url": "https://leetcode.innenu.com/167-two-sum-ii-input-array-is-sorted/lmy/",
      "id": "https://leetcode.innenu.com/167-two-sum-ii-input-array-is-sorted/lmy/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  vector<span>&lt;</span><span>int</span><span>></span> <span>twoSum</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> numbers<span>,</span> <span>int</span> target<span>)</span> <span>{</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> numbers<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>int</span> left <span>=</span> i <span>+</span> <span>1</span><span>;</span>\n      <span>int</span> deft <span>=</span> numbers<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>;</span>\n      <span>while</span> <span>(</span>left <span>&lt;</span> deft<span>)</span> <span>{</span>\n        <span>int</span> mid <span>=</span> <span>(</span>left <span>+</span> deft<span>)</span> <span>/</span> <span>2</span><span>;</span>\n        <span>int</span> sum <span>=</span> numbers<span>[</span>i<span>]</span> <span>+</span> numbers<span>[</span>mid<span>]</span><span>;</span>\n      <span>}</span>\n    <span>}</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.771Z",
      "authors": [
        {
          "name": "167. Two Sum Ii Input Array Is Sorted"
        }
      ],
      "tags": [
        "lmy"
      ]
    },
    {
      "title": "167. Two Sum II - Input array is sorted",
      "url": "https://leetcode.innenu.com/167-two-sum-ii-input-array-is-sorted/",
      "id": "https://leetcode.innenu.com/167-two-sum-ii-input-array-is-sorted/",
      "content_html": "<h1 id=\"_167-two-sum-ii-input-array-is-sorted\"> <a href=\"https://leetcode.com/problems/two-sum-ii-input-array-is-sorted/\" target=\"_blank\" rel=\"noopener noreferrer\">167. Two Sum II - Input array is sorted</a></h1>\n<p>Given an array of integers that is already <strong><em>sorted in ascending order</em></strong>, find two numbers such that they add up to a specific target number.</p>\n<p>The function twoSum should return indices of the two numbers such that they add up to the target, where index1 must be less than index2.</p>\n<p><strong>Note:</strong></p>\n<ul>\n<li>Your returned answers (both index1 and index2) are not zero-based.</li>\n<li>You may assume that each input would have <em>exactly</em> one solution and you may not use the <em>same</em> element twice.</li>\n</ul>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> numbers = [2,7,11,15], target = 9</p>\n<p><strong>Output:</strong> [1,2]</p>\n<p><strong>Explanation:</strong> The sum of 2 and 7 is 9. Therefore index1 = 1, index2 = 2.</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> numbers = [2,3,4], target = 6</p>\n<p><strong>Output:</strong> [1,3]</p>\n<p><strong>Example 3:</strong></p>\n<p><strong>Input:</strong> numbers = [-1,0], target = -1</p>\n<p><strong>Output:</strong> [1,2]</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>2 &lt;= nums.length &lt;= 3 * 104</code></li>\n<li><code>-1000 &lt;= nums[i] &lt;= 1000</code></li>\n<li><code>nums</code> is sorted in <strong>increasing order</strong>.</li>\n<li><code>-1000 &lt;= target &lt;= 1000</code></li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "C++",
      "url": "https://leetcode.innenu.com/198-house-robbe/C++/",
      "id": "https://leetcode.innenu.com/198-house-robbe/C++/",
      "content_html": "<h2 id=\"virgil\"> Virgil</h2>\n<div><pre><code><span>// similar to 17.16 the masseuse Icci</span>\n<span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>\n<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>int</span> <span>rob</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums<span>)</span> <span>{</span>\n    <span>if</span> <span>(</span>nums<span>.</span><span>size</span><span>(</span><span>)</span> <span>==</span> <span>0</span><span>)</span>\n      <span>return</span> <span>0</span><span>;</span>\n    <span>else</span> <span>if</span> <span>(</span>nums<span>.</span><span>size</span><span>(</span><span>)</span> <span>==</span> <span>1</span><span>)</span>\n      <span>return</span> nums<span>[</span><span>0</span><span>]</span><span>;</span>\n    <span>else</span> <span>{</span>\n      vector<span>&lt;</span><span>int</span><span>></span> <span>dp</span><span>(</span>nums<span>.</span><span>size</span><span>(</span><span>)</span><span>)</span><span>;</span>\n      dp<span>[</span><span>0</span><span>]</span> <span>=</span> nums<span>[</span><span>0</span><span>]</span><span>;</span>\n      dp<span>[</span><span>1</span><span>]</span> <span>=</span> <span>max</span><span>(</span>nums<span>[</span><span>0</span><span>]</span><span>,</span> nums<span>[</span><span>1</span><span>]</span><span>)</span><span>;</span>\n      <span>int</span> maxn <span>=</span> dp<span>[</span><span>1</span><span>]</span><span>;</span>\n      <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>2</span><span>;</span> i <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n        dp<span>[</span>i<span>]</span> <span>=</span> <span>max</span><span>(</span>dp<span>[</span>i <span>-</span> <span>1</span><span>]</span><span>,</span> dp<span>[</span>i <span>-</span> <span>2</span><span>]</span> <span>+</span> nums<span>[</span>i<span>]</span><span>)</span><span>;</span>\n        maxn <span>=</span> <span>max</span><span>(</span>dp<span>[</span>i<span>]</span><span>,</span> maxn<span>)</span><span>;</span>\n      <span>}</span>\n      <span>return</span> maxn<span>;</span>\n    <span>}</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.772Z",
      "authors": [
        {
          "name": "198. House Robbe"
        }
      ],
      "tags": [
        "C++"
      ]
    },
    {
      "title": "Virgil",
      "url": "https://leetcode.innenu.com/198-house-robbe/Virgil/",
      "id": "https://leetcode.innenu.com/198-house-robbe/Virgil/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span>// similar to 17.16 the masseuse Icci</span>\n<span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>\n<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>int</span> <span>rob</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums<span>)</span> <span>{</span>\n    <span>if</span> <span>(</span>nums<span>.</span><span>size</span><span>(</span><span>)</span> <span>==</span> <span>0</span><span>)</span>\n      <span>return</span> <span>0</span><span>;</span>\n    <span>else</span> <span>if</span> <span>(</span>nums<span>.</span><span>size</span><span>(</span><span>)</span> <span>==</span> <span>1</span><span>)</span>\n      <span>return</span> nums<span>[</span><span>0</span><span>]</span><span>;</span>\n    <span>else</span> <span>{</span>\n      vector<span>&lt;</span><span>int</span><span>></span> <span>dp</span><span>(</span>nums<span>.</span><span>size</span><span>(</span><span>)</span><span>)</span><span>;</span>\n      dp<span>[</span><span>0</span><span>]</span> <span>=</span> nums<span>[</span><span>0</span><span>]</span><span>;</span>\n      dp<span>[</span><span>1</span><span>]</span> <span>=</span> <span>max</span><span>(</span>nums<span>[</span><span>0</span><span>]</span><span>,</span> nums<span>[</span><span>1</span><span>]</span><span>)</span><span>;</span>\n      <span>int</span> maxn <span>=</span> dp<span>[</span><span>1</span><span>]</span><span>;</span>\n      <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>2</span><span>;</span> i <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n        dp<span>[</span>i<span>]</span> <span>=</span> <span>max</span><span>(</span>dp<span>[</span>i <span>-</span> <span>1</span><span>]</span><span>,</span> dp<span>[</span>i <span>-</span> <span>2</span><span>]</span> <span>+</span> nums<span>[</span>i<span>]</span><span>)</span><span>;</span>\n        maxn <span>=</span> <span>max</span><span>(</span>dp<span>[</span>i<span>]</span><span>,</span> maxn<span>)</span><span>;</span>\n      <span>}</span>\n      <span>return</span> maxn<span>;</span>\n    <span>}</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.772Z",
      "authors": [
        {
          "name": "198. House Robbe"
        }
      ],
      "tags": [
        "Virgil"
      ]
    },
    {
      "title": "198. House Robber",
      "url": "https://leetcode.innenu.com/198-house-robbe/",
      "id": "https://leetcode.innenu.com/198-house-robbe/",
      "content_html": "<h1 id=\"_198-house-robber\"> <a href=\"https://leetcode.com/problems/house-robber/\" target=\"_blank\" rel=\"noopener noreferrer\">198. House Robber</a></h1>\n<p>You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed, the only constraint stopping you from robbing each of them is that adjacent houses have security system connected and <strong>it will automatically contact the police if two adjacent houses were broken into on the same night</strong>.</p>\n<p>Given a list of non-negative integers representing the amount of money of each house, determine the maximum amount of money you can rob tonight <strong>without alerting the police</strong>.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> nums = [1,2,3,1]</p>\n<p><strong>Output:</strong> 4</p>\n<p><strong>Explanation:</strong></p>\n<p>Rob house 1 (money = 1) and then rob house 3 (money = 3).</p>\n<p>Total amount you can rob = 1 + 3 = 4.</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> nums = [2,7,9,3,1]</p>\n<p><strong>Output:</strong> 12</p>\n<p><strong>Explanation:</strong></p>\n<p>Rob house 1 (money = 2), rob house 3 (money = 9) and rob house 5 (money = 1).</p>\n<p>Total amount you can rob = 2 + 9 + 1 = 12.</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>0 &lt;= nums.length &lt;= 100</code></li>\n<li><code>0 &lt;= nums[i] &lt;= 400</code></li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "Java",
      "url": "https://leetcode.innenu.com/2-add-two-numbers/Java/",
      "id": "https://leetcode.innenu.com/2-add-two-numbers/Java/",
      "content_html": "<h2 id=\"lizncu\"> lizncu</h2>\n<div><pre><code><span>/*\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) { val = x; }\n * }\n */</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>ListNode</span> <span>addTwoNumbers</span><span>(</span><span>ListNode</span> l1<span>,</span> <span>ListNode</span> l2<span>)</span> <span>{</span>\n    <span>ListNode</span> s <span>=</span> <span>new</span> <span>ListNode</span><span>(</span><span>-</span><span>1</span><span>)</span><span>;</span>\n\n    <span>ListNode</span> t <span>=</span> s<span>;</span>\n\n    <span>int</span> num <span>=</span> <span>0</span><span>;</span>\n\n    <span>while</span> <span>(</span><span>(</span>l1 <span>!=</span> <span>null</span><span>)</span> <span>||</span> <span>(</span>l2 <span>!=</span> <span>null</span><span>)</span> <span>||</span> <span>(</span>num <span>!=</span> <span>0</span><span>)</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>l1 <span>!=</span> <span>null</span><span>)</span> <span>{</span>\n        num <span>+=</span> l1<span>.</span>val<span>;</span>\n        l1 <span>=</span> l1<span>.</span>next<span>;</span>\n      <span>}</span>\n\n      <span>if</span> <span>(</span>l2 <span>!=</span> <span>null</span><span>)</span> <span>{</span>\n        num <span>+=</span> l2<span>.</span>val<span>;</span>\n        l2 <span>=</span> l2<span>.</span>next<span>;</span>\n      <span>}</span>\n\n      t<span>.</span>next <span>=</span> <span>new</span> <span>ListNode</span><span>(</span>num <span>%</span> <span>10</span><span>)</span><span>;</span>\n\n      num <span>=</span> num <span>/</span> <span>10</span><span>;</span>\n\n      t <span>=</span> t<span>.</span>next<span>;</span>\n    <span>}</span>\n\n    <span>return</span> s<span>.</span>next<span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.774Z",
      "authors": [
        {
          "name": "2. Add Two Numbers"
        }
      ],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "JavaScript",
      "url": "https://leetcode.innenu.com/2-add-two-numbers/JavaScript/",
      "id": "https://leetcode.innenu.com/2-add-two-numbers/JavaScript/",
      "content_html": "<h2 id=\"mister-hope\"> Mister-Hope</h2>\n<div><pre><code><span>/*\n * Runtime: 120 ms, faster than 96.86% of JavaScript online submissions for Add Two Numbers.\n *\n * Memory Usage: 43.7 MB, less than 6.82% of JavaScript online submissions for Add Two Numbers.\n */</span>\n\n<span>const</span> <span>addTwoNumbers</span> <span>=</span> <span>(</span><span>l1<span>,</span> l2</span><span>)</span> <span>=></span> <span>{</span>\n  <span>let</span> l1Pointer <span>=</span> l1<span>;</span> <span>// list 1 pointer</span>\n  <span>let</span> l2Pointer <span>=</span> l2<span>;</span> <span>// list 2 pointer</span>\n\n  <span>let</span> prev <span>=</span> <span>new</span> <span>ListNode</span><span>(</span><span>0</span><span>)</span><span>;</span>\n  <span>let</span> prevPointer <span>=</span> prev<span>;</span> <span>// prev pointer</span>\n  <span>let</span> needCarry <span>=</span> <span>false</span><span>;</span>\n\n  <span>while</span> <span>(</span>l1Pointer <span>||</span> l2Pointer<span>)</span> <span>{</span>\n    <span>let</span> currentPosition <span>=</span> l1Pointer <span>||</span> l2Pointer<span>;</span>\n    <span>let</span> sum <span>=</span>\n      <span>(</span>l1Pointer<span>?.</span>val <span>||</span> <span>0</span><span>)</span> <span>+</span> <span>(</span>l2Pointer<span>?.</span>val <span>||</span> <span>0</span><span>)</span> <span>+</span> <span>(</span>needCarry <span>?</span> <span>1</span> <span>:</span> <span>0</span><span>)</span><span>;</span>\n\n    <span>if</span> <span>(</span>sum <span>></span> <span>9</span><span>)</span> <span>{</span>\n      sum <span>=</span> sum <span>-</span> <span>10</span><span>;</span>\n      needCarry <span>=</span> <span>true</span><span>;</span>\n    <span>}</span> <span>else</span> needCarry <span>=</span> <span>false</span><span>;</span>\n\n    currentPosition<span>.</span>val <span>=</span> sum<span>;</span>\n    prevPointer<span>.</span>next <span>=</span> currentPosition<span>;</span>\n    prevPointer <span>=</span> prevPointer<span>.</span>next<span>;</span>\n\n    <span>if</span> <span>(</span>l1Pointer<span>)</span> l1Pointer <span>=</span> l1Pointer<span>.</span>next<span>;</span>\n    <span>if</span> <span>(</span>l2Pointer<span>)</span> l2Pointer <span>=</span> l2Pointer<span>.</span>next<span>;</span>\n  <span>}</span>\n\n  <span>if</span> <span>(</span>needCarry<span>)</span> prevPointer<span>.</span>next <span>=</span> <span>new</span> <span>ListNode</span><span>(</span><span>1</span><span>)</span><span>;</span>\n\n  <span>return</span> prev<span>.</span>next<span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.774Z",
      "authors": [
        {
          "name": "2. Add Two Numbers"
        }
      ],
      "tags": [
        "JavaScript"
      ]
    },
    {
      "title": "Mister-Hope",
      "url": "https://leetcode.innenu.com/2-add-two-numbers/Mister-Hope/",
      "id": "https://leetcode.innenu.com/2-add-two-numbers/Mister-Hope/",
      "content_html": "<h2 id=\"javascript\"> JavaScript</h2>\n<div><pre><code><span>/*\n * Runtime: 120 ms, faster than 96.86% of JavaScript online submissions for Add Two Numbers.\n *\n * Memory Usage: 43.7 MB, less than 6.82% of JavaScript online submissions for Add Two Numbers.\n */</span>\n\n<span>const</span> <span>addTwoNumbers</span> <span>=</span> <span>(</span><span>l1<span>,</span> l2</span><span>)</span> <span>=></span> <span>{</span>\n  <span>let</span> l1Pointer <span>=</span> l1<span>;</span> <span>// list 1 pointer</span>\n  <span>let</span> l2Pointer <span>=</span> l2<span>;</span> <span>// list 2 pointer</span>\n\n  <span>let</span> prev <span>=</span> <span>new</span> <span>ListNode</span><span>(</span><span>0</span><span>)</span><span>;</span>\n  <span>let</span> prevPointer <span>=</span> prev<span>;</span> <span>// prev pointer</span>\n  <span>let</span> needCarry <span>=</span> <span>false</span><span>;</span>\n\n  <span>while</span> <span>(</span>l1Pointer <span>||</span> l2Pointer<span>)</span> <span>{</span>\n    <span>let</span> currentPosition <span>=</span> l1Pointer <span>||</span> l2Pointer<span>;</span>\n    <span>let</span> sum <span>=</span>\n      <span>(</span>l1Pointer<span>?.</span>val <span>||</span> <span>0</span><span>)</span> <span>+</span> <span>(</span>l2Pointer<span>?.</span>val <span>||</span> <span>0</span><span>)</span> <span>+</span> <span>(</span>needCarry <span>?</span> <span>1</span> <span>:</span> <span>0</span><span>)</span><span>;</span>\n\n    <span>if</span> <span>(</span>sum <span>></span> <span>9</span><span>)</span> <span>{</span>\n      sum <span>=</span> sum <span>-</span> <span>10</span><span>;</span>\n      needCarry <span>=</span> <span>true</span><span>;</span>\n    <span>}</span> <span>else</span> needCarry <span>=</span> <span>false</span><span>;</span>\n\n    currentPosition<span>.</span>val <span>=</span> sum<span>;</span>\n    prevPointer<span>.</span>next <span>=</span> currentPosition<span>;</span>\n    prevPointer <span>=</span> prevPointer<span>.</span>next<span>;</span>\n\n    <span>if</span> <span>(</span>l1Pointer<span>)</span> l1Pointer <span>=</span> l1Pointer<span>.</span>next<span>;</span>\n    <span>if</span> <span>(</span>l2Pointer<span>)</span> l2Pointer <span>=</span> l2Pointer<span>.</span>next<span>;</span>\n  <span>}</span>\n\n  <span>if</span> <span>(</span>needCarry<span>)</span> prevPointer<span>.</span>next <span>=</span> <span>new</span> <span>ListNode</span><span>(</span><span>1</span><span>)</span><span>;</span>\n\n  <span>return</span> prev<span>.</span>next<span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br></div></div><h2 id=\"typescript\"> TypeScript</h2>\n<div><pre><code><span>/*\n * Runtime: 132 ms, faster than 87.59% of TypeScript online submissions for Add Two Numbers.\n *\n * Memory Usage: 44.5 MB, less than 5.32% of TypeScript online submissions for Add Two Numbers.\n */</span>\n\n<span>const</span> addTwoNumbers <span>=</span> <span>(</span>\n  l1<span>:</span> ListNode <span>|</span> <span>null</span><span>,</span>\n  l2<span>:</span> ListNode <span>|</span> <span>null</span>\n<span>)</span><span>:</span> ListNode <span>|</span> <span>null</span> <span>=></span> <span>{</span>\n  <span>let</span> l1Pointer <span>=</span> l1<span>;</span> <span>// list 1 pointer</span>\n  <span>let</span> l2Pointer <span>=</span> l2<span>;</span> <span>// list 2 pointer</span>\n\n  <span>let</span> prev <span>=</span> <span>new</span> <span>ListNode</span><span>(</span><span>0</span><span>)</span><span>;</span>\n  <span>let</span> prevPointer <span>=</span> prev<span>;</span> <span>// prev pointer</span>\n  <span>let</span> needCarry <span>=</span> <span>false</span><span>;</span>\n\n  <span>let</span> currentPosition <span>=</span> l1Pointer <span>||</span> l2Pointer<span>;</span>\n\n  <span>while</span> <span>(</span>currentPosition<span>)</span> <span>{</span>\n    <span>let</span> sum <span>=</span>\n      <span>(</span>l1Pointer<span>?.</span>val <span>||</span> <span>0</span><span>)</span> <span>+</span> <span>(</span>l2Pointer<span>?.</span>val <span>||</span> <span>0</span><span>)</span> <span>+</span> <span>(</span>needCarry <span>?</span> <span>1</span> <span>:</span> <span>0</span><span>)</span><span>;</span>\n\n    <span>if</span> <span>(</span>sum <span>></span> <span>9</span><span>)</span> <span>{</span>\n      sum <span>=</span> sum <span>-</span> <span>10</span><span>;</span>\n      needCarry <span>=</span> <span>true</span><span>;</span>\n    <span>}</span> <span>else</span> needCarry <span>=</span> <span>false</span><span>;</span>\n\n    currentPosition<span>.</span>val <span>=</span> sum<span>;</span>\n    prevPointer<span>.</span>next <span>=</span> currentPosition<span>;</span>\n    prevPointer <span>=</span> prevPointer<span>.</span>next<span>;</span>\n\n    <span>if</span> <span>(</span>l1Pointer<span>)</span> l1Pointer <span>=</span> l1Pointer<span>.</span>next<span>;</span>\n    <span>if</span> <span>(</span>l2Pointer<span>)</span> l2Pointer <span>=</span> l2Pointer<span>.</span>next<span>;</span>\n    currentPosition <span>=</span> l1Pointer <span>||</span> l2Pointer<span>;</span>\n  <span>}</span>\n\n  <span>if</span> <span>(</span>needCarry<span>)</span> prevPointer<span>.</span>next <span>=</span> <span>new</span> <span>ListNode</span><span>(</span><span>1</span><span>)</span><span>;</span>\n\n  <span>return</span> prev<span>.</span>next<span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.776Z",
      "authors": [
        {
          "name": "2. Add Two Numbers"
        }
      ],
      "tags": [
        "Mister-Hope"
      ]
    },
    {
      "title": "TypeScript",
      "url": "https://leetcode.innenu.com/2-add-two-numbers/TypeScript/",
      "id": "https://leetcode.innenu.com/2-add-two-numbers/TypeScript/",
      "content_html": "<h2 id=\"mister-hope\"> Mister-Hope</h2>\n<div><pre><code><span>/*\n * Runtime: 132 ms, faster than 87.59% of TypeScript online submissions for Add Two Numbers.\n *\n * Memory Usage: 44.5 MB, less than 5.32% of TypeScript online submissions for Add Two Numbers.\n */</span>\n\n<span>const</span> addTwoNumbers <span>=</span> <span>(</span>\n  l1<span>:</span> ListNode <span>|</span> <span>null</span><span>,</span>\n  l2<span>:</span> ListNode <span>|</span> <span>null</span>\n<span>)</span><span>:</span> ListNode <span>|</span> <span>null</span> <span>=></span> <span>{</span>\n  <span>let</span> l1Pointer <span>=</span> l1<span>;</span> <span>// list 1 pointer</span>\n  <span>let</span> l2Pointer <span>=</span> l2<span>;</span> <span>// list 2 pointer</span>\n\n  <span>let</span> prev <span>=</span> <span>new</span> <span>ListNode</span><span>(</span><span>0</span><span>)</span><span>;</span>\n  <span>let</span> prevPointer <span>=</span> prev<span>;</span> <span>// prev pointer</span>\n  <span>let</span> needCarry <span>=</span> <span>false</span><span>;</span>\n\n  <span>let</span> currentPosition <span>=</span> l1Pointer <span>||</span> l2Pointer<span>;</span>\n\n  <span>while</span> <span>(</span>currentPosition<span>)</span> <span>{</span>\n    <span>let</span> sum <span>=</span>\n      <span>(</span>l1Pointer<span>?.</span>val <span>||</span> <span>0</span><span>)</span> <span>+</span> <span>(</span>l2Pointer<span>?.</span>val <span>||</span> <span>0</span><span>)</span> <span>+</span> <span>(</span>needCarry <span>?</span> <span>1</span> <span>:</span> <span>0</span><span>)</span><span>;</span>\n\n    <span>if</span> <span>(</span>sum <span>></span> <span>9</span><span>)</span> <span>{</span>\n      sum <span>=</span> sum <span>-</span> <span>10</span><span>;</span>\n      needCarry <span>=</span> <span>true</span><span>;</span>\n    <span>}</span> <span>else</span> needCarry <span>=</span> <span>false</span><span>;</span>\n\n    currentPosition<span>.</span>val <span>=</span> sum<span>;</span>\n    prevPointer<span>.</span>next <span>=</span> currentPosition<span>;</span>\n    prevPointer <span>=</span> prevPointer<span>.</span>next<span>;</span>\n\n    <span>if</span> <span>(</span>l1Pointer<span>)</span> l1Pointer <span>=</span> l1Pointer<span>.</span>next<span>;</span>\n    <span>if</span> <span>(</span>l2Pointer<span>)</span> l2Pointer <span>=</span> l2Pointer<span>.</span>next<span>;</span>\n    currentPosition <span>=</span> l1Pointer <span>||</span> l2Pointer<span>;</span>\n  <span>}</span>\n\n  <span>if</span> <span>(</span>needCarry<span>)</span> prevPointer<span>.</span>next <span>=</span> <span>new</span> <span>ListNode</span><span>(</span><span>1</span><span>)</span><span>;</span>\n\n  <span>return</span> prev<span>.</span>next<span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.776Z",
      "authors": [
        {
          "name": "2. Add Two Numbers"
        }
      ],
      "tags": [
        "TypeScript"
      ]
    },
    {
      "title": "lizncu",
      "url": "https://leetcode.innenu.com/2-add-two-numbers/lizncu/",
      "id": "https://leetcode.innenu.com/2-add-two-numbers/lizncu/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>/*\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) { val = x; }\n * }\n */</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>ListNode</span> <span>addTwoNumbers</span><span>(</span><span>ListNode</span> l1<span>,</span> <span>ListNode</span> l2<span>)</span> <span>{</span>\n    <span>ListNode</span> s <span>=</span> <span>new</span> <span>ListNode</span><span>(</span><span>-</span><span>1</span><span>)</span><span>;</span>\n\n    <span>ListNode</span> t <span>=</span> s<span>;</span>\n\n    <span>int</span> num <span>=</span> <span>0</span><span>;</span>\n\n    <span>while</span> <span>(</span><span>(</span>l1 <span>!=</span> <span>null</span><span>)</span> <span>||</span> <span>(</span>l2 <span>!=</span> <span>null</span><span>)</span> <span>||</span> <span>(</span>num <span>!=</span> <span>0</span><span>)</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>l1 <span>!=</span> <span>null</span><span>)</span> <span>{</span>\n        num <span>+=</span> l1<span>.</span>val<span>;</span>\n        l1 <span>=</span> l1<span>.</span>next<span>;</span>\n      <span>}</span>\n\n      <span>if</span> <span>(</span>l2 <span>!=</span> <span>null</span><span>)</span> <span>{</span>\n        num <span>+=</span> l2<span>.</span>val<span>;</span>\n        l2 <span>=</span> l2<span>.</span>next<span>;</span>\n      <span>}</span>\n\n      t<span>.</span>next <span>=</span> <span>new</span> <span>ListNode</span><span>(</span>num <span>%</span> <span>10</span><span>)</span><span>;</span>\n\n      num <span>=</span> num <span>/</span> <span>10</span><span>;</span>\n\n      t <span>=</span> t<span>.</span>next<span>;</span>\n    <span>}</span>\n\n    <span>return</span> s<span>.</span>next<span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.777Z",
      "authors": [
        {
          "name": "2. Add Two Numbers"
        }
      ],
      "tags": [
        "lizncu"
      ]
    },
    {
      "title": "2. Add Two Numbers",
      "url": "https://leetcode.innenu.com/2-add-two-numbers/",
      "id": "https://leetcode.innenu.com/2-add-two-numbers/",
      "content_html": "<h1 id=\"_2-add-two-numbers\"> <a href=\"https://leetcode.com/problems/add-two-numbers/\" target=\"_blank\" rel=\"noopener noreferrer\">2. Add Two Numbers</a></h1>\n<p>You are given two <strong>non-empty</strong> linked lists representing two non-negative integers. The digits are stored in <strong>reverse order</strong>, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.</p>\n<p>You may assume the two numbers do not contain any leading zero, except the number 0 itself.</p>\n<p><strong>Example 1:</strong></p>\n<p><img src=\"https://assets.leetcode.com/uploads/2020/10/02/addtwonumber1.jpg\" alt=\"LeetCode Image\" /></p>\n<p><strong>Input:</strong> l1 = [2,4,3], l2 = [5,6,4]</p>\n<p><strong>Output:</strong> [7,0,8]</p>\n<p><strong>Explanation:</strong> 342 + 465 = 807.</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> l1 = [0], l2 = [0]</p>\n<p><strong>Output:</strong> [0]</p>\n<p><strong>Example 3:</strong></p>\n<p><strong>Input:</strong> l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]</p>\n<p><strong>Output:</strong> [8,9,9,9,0,0,0,1]</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li>The number of nodes in each linked list is in the range <code>[1, 100]</code>.</li>\n<li><code>0 &lt;= Node.val &lt;= 9</code></li>\n<li>It is guaranteed that the list represents a number that does not have leading zeros.</li>\n</ul>\n",
      "image": "https://assets.leetcode.com/uploads/2020/10/02/addtwonumber1.jpg",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "C++",
      "url": "https://leetcode.innenu.com/226-invert-binary-tree/C++/",
      "id": "https://leetcode.innenu.com/226-invert-binary-tree/C++/",
      "content_html": "<h2 id=\"sqm\"> sqm</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n<span>struct</span> <span>TreeNode</span> <span>{</span>\n  <span>int</span> val<span>;</span>\n  TreeNode<span>*</span> left<span>;</span>\n  TreeNode<span>*</span> right<span>;</span>\n  <span>TreeNode</span><span>(</span><span>int</span> x<span>)</span> <span>:</span> <span>val</span><span>(</span>x<span>)</span><span>,</span> <span>left</span><span>(</span><span>NULL</span><span>)</span><span>,</span> <span>right</span><span>(</span><span>NULL</span><span>)</span> <span>{</span><span>}</span>\n<span>}</span><span>;</span>\n<span>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  TreeNode<span>*</span> <span>invertTree</span><span>(</span>TreeNode<span>*</span> root<span>)</span> <span>{</span>\n    <span>if</span> <span>(</span>root <span>==</span> <span>NULL</span><span>)</span>\n      <span>return</span> root<span>;</span>\n    <span>else</span> <span>{</span>\n      <span>swap</span><span>(</span>root<span>-></span>left<span>,</span> root<span>-></span>right<span>)</span><span>;</span>\n      <span>invertTree</span><span>(</span>root<span>-></span>left<span>)</span><span>;</span>\n      <span>invertTree</span><span>(</span>root<span>-></span>right<span>)</span><span>;</span>\n      <span>return</span> root<span>;</span>\n    <span>}</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.778Z",
      "authors": [
        {
          "name": "226. Invert Binary Tree"
        }
      ],
      "tags": [
        "C++"
      ]
    },
    {
      "title": "226. Invert Binary Tree",
      "url": "https://leetcode.innenu.com/226-invert-binary-tree/",
      "id": "https://leetcode.innenu.com/226-invert-binary-tree/",
      "content_html": "<h1 id=\"_226-invert-binary-tree\"> <a href=\"https://leetcode.com/problems/invert-binary-tree/\" target=\"_blank\" rel=\"noopener noreferrer\">226. Invert Binary Tree</a></h1>\n<p>Invert a binary tree.</p>\n<p><strong>Example:</strong></p>\n<p>Input:</p>\n<div><pre><code>     4\n   /   \\\\\n  2     7\n / \\\\   / \\\\\n1   3 6   9\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>Output:</p>\n<div><pre><code>     4\n   /   \\\\\n  7     2\n / \\\\   / \\\\\n9   6 3   1\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p><strong>Trivia:</strong>\nThis problem was inspired by <a href=\"https://twitter.com/mxcl/status/608682016205344768\" target=\"_blank\" rel=\"noopener noreferrer\">this original tweet</a> by <a href=\"https://twitter.com/mxcl\" target=\"_blank\" rel=\"noopener noreferrer\">Max Howell</a>:</p>\n<blockquote>\n<p>Google: 90% of our engineers use the software you wrote (Homebrew), but you can’t invert a binary tree on a whiteboard so f*** off.</p>\n</blockquote>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "sqm",
      "url": "https://leetcode.innenu.com/226-invert-binary-tree/sqm/",
      "id": "https://leetcode.innenu.com/226-invert-binary-tree/sqm/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n<span>struct</span> <span>TreeNode</span> <span>{</span>\n  <span>int</span> val<span>;</span>\n  TreeNode<span>*</span> left<span>;</span>\n  TreeNode<span>*</span> right<span>;</span>\n  <span>TreeNode</span><span>(</span><span>int</span> x<span>)</span> <span>:</span> <span>val</span><span>(</span>x<span>)</span><span>,</span> <span>left</span><span>(</span><span>NULL</span><span>)</span><span>,</span> <span>right</span><span>(</span><span>NULL</span><span>)</span> <span>{</span><span>}</span>\n<span>}</span><span>;</span>\n<span>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  TreeNode<span>*</span> <span>invertTree</span><span>(</span>TreeNode<span>*</span> root<span>)</span> <span>{</span>\n    <span>if</span> <span>(</span>root <span>==</span> <span>NULL</span><span>)</span>\n      <span>return</span> root<span>;</span>\n    <span>else</span> <span>{</span>\n      <span>swap</span><span>(</span>root<span>-></span>left<span>,</span> root<span>-></span>right<span>)</span><span>;</span>\n      <span>invertTree</span><span>(</span>root<span>-></span>left<span>)</span><span>;</span>\n      <span>invertTree</span><span>(</span>root<span>-></span>right<span>)</span><span>;</span>\n      <span>return</span> root<span>;</span>\n    <span>}</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.780Z",
      "authors": [
        {
          "name": "226. Invert Binary Tree"
        }
      ],
      "tags": [
        "sqm"
      ]
    },
    {
      "title": "C++",
      "url": "https://leetcode.innenu.com/237-Delete-Node-in-a-Linked-List/C++/",
      "id": "https://leetcode.innenu.com/237-Delete-Node-in-a-Linked-List/C++/",
      "content_html": "<h2 id=\"sqm\"> sqm</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n<span>struct</span> <span>ListNode</span> <span>{</span>\n  <span>/* data */</span>\n  <span>int</span> val<span>;</span>\n  ListNode<span>*</span> next<span>;</span>\n<span>}</span><span>;</span>\n\n<span>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>void</span> <span>deleteNode</span><span>(</span>ListNode<span>*</span> node<span>)</span> <span>{</span>\n    node<span>-></span>val <span>=</span> node<span>-></span>next<span>-></span>val<span>;</span>\n    node<span>-></span>next <span>=</span> node<span>-></span>next<span>-></span>next<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.781Z",
      "authors": [
        {
          "name": "237. Delete Node in a Linked List"
        }
      ],
      "tags": [
        "C++"
      ]
    },
    {
      "title": "Java",
      "url": "https://leetcode.innenu.com/237-Delete-Node-in-a-Linked-List/Java/",
      "id": "https://leetcode.innenu.com/237-Delete-Node-in-a-Linked-List/Java/",
      "content_html": "<h2 id=\"lizncu\"> lizncu</h2>\n<div><pre><code><span>/*\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) { val = x; }\n * }\n */</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>void</span> <span>deleteNode</span><span>(</span><span>ListNode</span> node<span>)</span> <span>{</span>\n    node<span>.</span>val <span>=</span> node<span>.</span>next<span>.</span>val<span>;</span>\n    node<span>.</span>next <span>=</span> node<span>.</span>next<span>.</span>next<span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.781Z",
      "authors": [
        {
          "name": "237. Delete Node in a Linked List"
        }
      ],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "237. Delete Node in a Linked List",
      "url": "https://leetcode.innenu.com/237-Delete-Node-in-a-Linked-List/",
      "id": "https://leetcode.innenu.com/237-Delete-Node-in-a-Linked-List/",
      "content_html": "<h1 id=\"_237-delete-node-in-a-linked-list\"> <a href=\"https://leetcode.com/problems/delete-node-in-a-linked-list/\" target=\"_blank\" rel=\"noopener noreferrer\">237. Delete Node in a Linked List</a></h1>\n<p>Write a function to <strong>delete a node</strong> in a singly-linked list. You will <strong>not</strong> be given access to the <code>head</code> of the list, instead you will be given access to <strong>the node to be deleted</strong> directly.</p>\n<p>It is <strong>guaranteed</strong> that the node to be deleted is <strong>not a tail node</strong> in the list.</p>\n<p><strong>Example 1:</strong></p>\n<p><img src=\"https://assets.leetcode.com/uploads/2020/09/01/node1.jpg\" alt=\"LeetCode Image\" /></p>\n<p><strong>Input:</strong> head = [4,5,1,9], node = 5</p>\n<p><strong>Output:</strong> [4,1,9]</p>\n<p><strong>Explanation:</strong> You are given the second node with value 5, the linked list should become 4 -&gt; 1 -&gt; 9 after calling your function.</p>\n<p><strong>Example 2:</strong></p>\n<p><img src=\"https://assets.leetcode.com/uploads/2020/09/01/node2.jpg\" alt=\"LeetCode Image\" /></p>\n<p><strong>Input:</strong> head = [4,5,1,9], node = 1</p>\n<p><strong>Output:</strong> [4,5,9]</p>\n<p><strong>Explanation:</strong> You are given the third node with value 1, the linked list should become 4 -&gt; 5 -&gt; 9 after calling your function.</p>\n<p><strong>Example 3:</strong></p>\n<p><strong>Input:</strong> head = [1,2,3,4], node = 3</p>\n<p><strong>Output:</strong> [1,2,4]</p>\n<p><strong>Example 4:</strong></p>\n<p><strong>Input:</strong> head = [0,1], node = 0</p>\n<p><strong>Output:</strong> [1]</p>\n<p><strong>Example 5:</strong></p>\n<p><strong>Input:</strong> head = [-3,5,-99], node = -3</p>\n<p><strong>Output:</strong> [5,-99]</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li>The number of the nodes in the given list is in the range <code>[2, 1000]</code>.</li>\n<li><code>-1000 &lt;= Node.val &lt;= 1000</code></li>\n<li>The value of each node in the list is <strong>unique</strong>.</li>\n<li>The <code>node</code> to be deleted is <strong>in the list</strong> and is <strong>not a tail</strong> node</li>\n</ul>\n",
      "image": "https://assets.leetcode.com/uploads/2020/09/01/node1.jpg",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "lizncu",
      "url": "https://leetcode.innenu.com/237-Delete-Node-in-a-Linked-List/lizncu/",
      "id": "https://leetcode.innenu.com/237-Delete-Node-in-a-Linked-List/lizncu/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>/*\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) { val = x; }\n * }\n */</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>void</span> <span>deleteNode</span><span>(</span><span>ListNode</span> node<span>)</span> <span>{</span>\n    node<span>.</span>val <span>=</span> node<span>.</span>next<span>.</span>val<span>;</span>\n    node<span>.</span>next <span>=</span> node<span>.</span>next<span>.</span>next<span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.782Z",
      "authors": [
        {
          "name": "237. Delete Node in a Linked List"
        }
      ],
      "tags": [
        "lizncu"
      ]
    },
    {
      "title": "sqm",
      "url": "https://leetcode.innenu.com/237-Delete-Node-in-a-Linked-List/sqm/",
      "id": "https://leetcode.innenu.com/237-Delete-Node-in-a-Linked-List/sqm/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n<span>struct</span> <span>ListNode</span> <span>{</span>\n  <span>/* data */</span>\n  <span>int</span> val<span>;</span>\n  ListNode<span>*</span> next<span>;</span>\n<span>}</span><span>;</span>\n\n<span>/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>void</span> <span>deleteNode</span><span>(</span>ListNode<span>*</span> node<span>)</span> <span>{</span>\n    node<span>-></span>val <span>=</span> node<span>-></span>next<span>-></span>val<span>;</span>\n    node<span>-></span>next <span>=</span> node<span>-></span>next<span>-></span>next<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.782Z",
      "authors": [
        {
          "name": "237. Delete Node in a Linked List"
        }
      ],
      "tags": [
        "sqm"
      ]
    },
    {
      "title": "C++",
      "url": "https://leetcode.innenu.com/242-valid-anagram/C++/",
      "id": "https://leetcode.innenu.com/242-valid-anagram/C++/",
      "content_html": "<h2 id=\"lmy\"> lmy</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>bool</span> <span>isAnagram</span><span>(</span>string s<span>,</span> string t<span>)</span> <span>{</span>\n    <span>sort</span><span>(</span>s<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> s<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>\n    <span>sort</span><span>(</span>t<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> t<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>\n    <span>return</span> s <span>==</span> t<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.782Z",
      "authors": [
        {
          "name": "242. Valid Anagram"
        }
      ],
      "tags": [
        "C++"
      ]
    },
    {
      "title": "lmy",
      "url": "https://leetcode.innenu.com/242-valid-anagram/lmy/",
      "id": "https://leetcode.innenu.com/242-valid-anagram/lmy/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>bool</span> <span>isAnagram</span><span>(</span>string s<span>,</span> string t<span>)</span> <span>{</span>\n    <span>sort</span><span>(</span>s<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> s<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>\n    <span>sort</span><span>(</span>t<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> t<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>\n    <span>return</span> s <span>==</span> t<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.783Z",
      "authors": [
        {
          "name": "242. Valid Anagram"
        }
      ],
      "tags": [
        "lmy"
      ]
    },
    {
      "title": "242. Valid Anagram",
      "url": "https://leetcode.innenu.com/242-valid-anagram/",
      "id": "https://leetcode.innenu.com/242-valid-anagram/",
      "content_html": "<h1 id=\"_242-valid-anagram\"> <a href=\"https://leetcode.com/problems/valid-anagram/\" target=\"_blank\" rel=\"noopener noreferrer\">242. Valid Anagram</a></h1>\n<p>Given two strings <em>s</em> and <em>t</em> , write a function to determine if <em>t</em> is an anagram of <em>s</em>.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> <em>s</em> = &quot;anagram&quot;, <em>t</em> = &quot;nagaram&quot;</p>\n<p><strong>Output:</strong> true</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> <em>s</em> = &quot;rat&quot;, <em>t</em> = &quot;car&quot;</p>\n<p><strong>Output:</strong> false</p>\n<p><strong>Note:</strong>\nYou may assume the string contains only lowercase alphabets.</p>\n<p><strong>Follow up:</strong>\nWhat if the inputs contain unicode characters? How would you adapt your solution to such case?</p>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "Java",
      "url": "https://leetcode.innenu.com/268-Missing-Number/Java/",
      "id": "https://leetcode.innenu.com/268-Missing-Number/Java/",
      "content_html": "<h2 id=\"lizncu\"> lizncu</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span> <span>missingNumber</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>)</span> <span>{</span>\n    <span>int</span> num <span>=</span> nums<span>.</span>length<span>;</span>\n\n    num <span>=</span> <span>(</span><span>0</span> <span>+</span> num<span>)</span> <span>*</span> <span>(</span>num <span>+</span> <span>1</span><span>)</span> <span>/</span> <span>2</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      num <span>-=</span> nums<span>[</span>i<span>]</span><span>;</span>\n    <span>}</span>\n\n    <span>return</span> num<span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.783Z",
      "authors": [
        {
          "name": "268. Missing Number"
        }
      ],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "lizncu",
      "url": "https://leetcode.innenu.com/268-Missing-Number/lizncu/",
      "id": "https://leetcode.innenu.com/268-Missing-Number/lizncu/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span> <span>missingNumber</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>)</span> <span>{</span>\n    <span>int</span> num <span>=</span> nums<span>.</span>length<span>;</span>\n\n    num <span>=</span> <span>(</span><span>0</span> <span>+</span> num<span>)</span> <span>*</span> <span>(</span>num <span>+</span> <span>1</span><span>)</span> <span>/</span> <span>2</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      num <span>-=</span> nums<span>[</span>i<span>]</span><span>;</span>\n    <span>}</span>\n\n    <span>return</span> num<span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.784Z",
      "authors": [
        {
          "name": "268. Missing Number"
        }
      ],
      "tags": [
        "lizncu"
      ]
    },
    {
      "title": "268. Missing Number",
      "url": "https://leetcode.innenu.com/268-Missing-Number/",
      "id": "https://leetcode.innenu.com/268-Missing-Number/",
      "content_html": "<h1 id=\"_268-missing-number\"> <a href=\"https://leetcode.com/problems/missing-number/\" target=\"_blank\" rel=\"noopener noreferrer\">268. Missing Number</a></h1>\n<p>Given an array <code>nums</code> containing <code>n</code> distinct numbers in the range <code>[0, n]</code>, return <em>the only number in the range that is missing from the array.</em></p>\n<p><strong>Follow up:</strong> Could you implement a solution using only <code>O(1)</code> extra space complexity and <code>O(n)</code> runtime complexity?</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> nums = [3,0,1]</p>\n<p><strong>Output:</strong> 2</p>\n<p><strong>Explanation:</strong> n = 3 since there are 3 numbers, so all numbers are in the range [0,3]. 2 is the missing number in the range since it does not appear in nums.</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> nums = [0,1]</p>\n<p><strong>Output:</strong> 2</p>\n<p><strong>Explanation:</strong> n = 2 since there are 2 numbers, so all numbers are in the range [0,2]. 2 is the missing number in the range since it does not appear in nums.</p>\n<p><strong>Example 3:</strong></p>\n<p><strong>Input:</strong> nums = [9,6,4,2,3,5,7,0,1]</p>\n<p><strong>Output:</strong> 8</p>\n<p><strong>Explanation:</strong> n = 9 since there are 9 numbers, so all numbers are in the range [0,9]. 8 is the missing number in the range since it does not appear in nums.</p>\n<p><strong>Example 4:</strong></p>\n<p><strong>Input:</strong> nums = [0]</p>\n<p><strong>Output:</strong> 1</p>\n<p><strong>Explanation:</strong> n = 1 since there is 1 number, so all numbers are in the range [0,1]. 1 is the missing number in the range since it does not appear in nums.</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>n == nums.length</code></li>\n<li><code>1 &lt;= n &lt;= 104</code></li>\n<li><code>0 &lt;= nums[i] &lt;= n</code></li>\n<li>All the numbers of <code>nums</code> are <strong>unique</strong>.</li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "Java",
      "url": "https://leetcode.innenu.com/283-Move-Zeroes/Java/",
      "id": "https://leetcode.innenu.com/283-Move-Zeroes/Java/",
      "content_html": "<h2 id=\"lizncu\"> lizncu</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>void</span> <span>moveZeroes</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>)</span> <span>{</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>,</span> count <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>!=</span> <span>0</span><span>)</span> <span>{</span>\n        <span>if</span> <span>(</span>count <span>!=</span> i<span>)</span> <span>{</span>\n          nums<span>[</span>count<span>]</span> <span>=</span> nums<span>[</span>i<span>]</span><span>;</span>\n          nums<span>[</span>i<span>]</span> <span>=</span> <span>0</span><span>;</span>\n        <span>}</span>\n\n        count<span>++</span><span>;</span>\n      <span>}</span>\n    <span>}</span>\n  <span>}</span>\n<span>}</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.785Z",
      "authors": [
        {
          "name": "283. Move Zeroes"
        }
      ],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "lizncu",
      "url": "https://leetcode.innenu.com/283-Move-Zeroes/lizncu/",
      "id": "https://leetcode.innenu.com/283-Move-Zeroes/lizncu/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>void</span> <span>moveZeroes</span><span>(</span><span>int</span><span>[</span><span>]</span> nums<span>)</span> <span>{</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>,</span> count <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> nums<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>nums<span>[</span>i<span>]</span> <span>!=</span> <span>0</span><span>)</span> <span>{</span>\n        <span>if</span> <span>(</span>count <span>!=</span> i<span>)</span> <span>{</span>\n          nums<span>[</span>count<span>]</span> <span>=</span> nums<span>[</span>i<span>]</span><span>;</span>\n          nums<span>[</span>i<span>]</span> <span>=</span> <span>0</span><span>;</span>\n        <span>}</span>\n\n        count<span>++</span><span>;</span>\n      <span>}</span>\n    <span>}</span>\n  <span>}</span>\n<span>}</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.785Z",
      "authors": [
        {
          "name": "283. Move Zeroes"
        }
      ],
      "tags": [
        "lizncu"
      ]
    },
    {
      "title": "283. Move Zeroes",
      "url": "https://leetcode.innenu.com/283-Move-Zeroes/",
      "id": "https://leetcode.innenu.com/283-Move-Zeroes/",
      "content_html": "<h1 id=\"_283-move-zeroes\"> <a href=\"https://leetcode.com/problems/move-zeroes/\" target=\"_blank\" rel=\"noopener noreferrer\">283. Move Zeroes</a></h1>\n<p>Given an array <code>nums</code>, write a function to move all <code>0</code>'s to the end of it while maintaining the relative order of the non-zero elements.</p>\n<p><strong>Example:</strong></p>\n<p><strong>Input:</strong> <code>[0,1,0,3,12]</code></p>\n<p><strong>Output:</strong> <code>[1,3,12,0,0]</code></p>\n<p><strong>Note</strong>:</p>\n<ol>\n<li>You must do this <strong>in-place</strong> without making a copy of the array.</li>\n<li>Minimize the total number of operations.</li>\n</ol>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "C++",
      "url": "https://leetcode.innenu.com/292-Nim-Game/C++/",
      "id": "https://leetcode.innenu.com/292-Nim-Game/C++/",
      "content_html": "<h2 id=\"mister-hope\"> Mister-Hope</h2>\n<div><pre><code><span>/**\n * Your runtime beats 100 % of cpp submissions\n * Your memory usage beats 100 % of cpp submissions (6 MB)\n */</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>bool</span> <span>canWinNim</span><span>(</span><span>int</span> n<span>)</span> <span>{</span> <span>return</span> n <span>%</span> <span>4</span> <span>!=</span> <span>0</span><span>;</span> <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.786Z",
      "authors": [
        {
          "name": "292. Nim Game"
        }
      ],
      "tags": [
        "C++"
      ]
    },
    {
      "title": "Java",
      "url": "https://leetcode.innenu.com/292-Nim-Game/Java/",
      "id": "https://leetcode.innenu.com/292-Nim-Game/Java/",
      "content_html": "<h2 id=\"mister-hope\"> Mister-Hope</h2>\n<div><pre><code><span>/*\n * Your runtime beats 100 % of java submissions\n *\n * Your memory usage beats 10.33 % of java submissions (35.4 MB)\n */</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>boolean</span> <span>canWinNim</span><span>(</span><span>int</span> n<span>)</span> <span>{</span>\n    <span>return</span> n <span>%</span> <span>4</span> <span>!=</span> <span>0</span><span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><h2 id=\"lizncu\"> lizncu</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>boolean</span> <span>canWinNim</span><span>(</span><span>int</span> n<span>)</span> <span>{</span>\n    <span>return</span> n <span>%</span> <span>4</span> <span>==</span> <span>0</span> <span>?</span> <span>false</span> <span>:</span> <span>true</span><span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.790Z",
      "authors": [
        {
          "name": "292. Nim Game"
        }
      ],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "JavaScript",
      "url": "https://leetcode.innenu.com/292-Nim-Game/JavaScript/",
      "id": "https://leetcode.innenu.com/292-Nim-Game/JavaScript/",
      "content_html": "<h2 id=\"mister-hope\"> Mister-Hope</h2>\n<div><pre><code><span>/*\n * Your runtime beats 60.95 % of javascript submissions\n *\n * Your memory usage beats 24.26 % of javascript submissions (38.4 MB)\n */</span>\n\n<span>const</span> <span>canWinNim</span> <span>=</span> <span>(</span><span>n</span><span>)</span> <span>=></span> n <span>%</span> <span>4</span> <span>!==</span> <span>0</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h3 id=\"simple\"> simple</h3>\n<div><pre><code><span>/*\n * Your runtime beats 60.95 % of javascript submissions\n *\n * Your memory usage beats 24.26 % of javascript submissions (38.4 MB)\n */</span>\n\n<span>const</span> <span>canWinNim</span> <span>=</span> <span>(</span><span>n</span><span>)</span> <span>=></span> <span>Boolean</span><span>(</span>n <span>%</span> <span>4</span><span>)</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.790Z",
      "authors": [
        {
          "name": "292. Nim Game"
        }
      ],
      "tags": [
        "JavaScript"
      ]
    },
    {
      "title": "Mister-Hope",
      "url": "https://leetcode.innenu.com/292-Nim-Game/Mister-Hope/",
      "id": "https://leetcode.innenu.com/292-Nim-Game/Mister-Hope/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span>/**\n * Your runtime beats 100 % of cpp submissions\n * Your memory usage beats 100 % of cpp submissions (6 MB)\n */</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>bool</span> <span>canWinNim</span><span>(</span><span>int</span> n<span>)</span> <span>{</span> <span>return</span> n <span>%</span> <span>4</span> <span>!=</span> <span>0</span><span>;</span> <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><h2 id=\"java\"> Java</h2>\n<div><pre><code><span>/*\n * Your runtime beats 100 % of java submissions\n *\n * Your memory usage beats 10.33 % of java submissions (35.4 MB)\n */</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>boolean</span> <span>canWinNim</span><span>(</span><span>int</span> n<span>)</span> <span>{</span>\n    <span>return</span> n <span>%</span> <span>4</span> <span>!=</span> <span>0</span><span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><h2 id=\"javascript\"> JavaScript</h2>\n<div><pre><code><span>/*\n * Your runtime beats 60.95 % of javascript submissions\n *\n * Your memory usage beats 24.26 % of javascript submissions (38.4 MB)\n */</span>\n\n<span>const</span> <span>canWinNim</span> <span>=</span> <span>(</span><span>n</span><span>)</span> <span>=></span> n <span>%</span> <span>4</span> <span>!==</span> <span>0</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h3 id=\"simple\"> simple</h3>\n<div><pre><code><span>/*\n * Your runtime beats 60.95 % of javascript submissions\n *\n * Your memory usage beats 24.26 % of javascript submissions (38.4 MB)\n */</span>\n\n<span>const</span> <span>canWinNim</span> <span>=</span> <span>(</span><span>n</span><span>)</span> <span>=></span> <span>Boolean</span><span>(</span>n <span>%</span> <span>4</span><span>)</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h2 id=\"php\"> PHP</h2>\n<div><pre><code><span>/**\n * Your runtime beats 80 % of php submissions\n *\n * Your memory usage beats 100 % of php submissions (15.6 MB)\n */</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n  <span>/**\n   * @param Integer $n\n   * @return Boolean\n   */</span>\n  <span>function</span> <span>canWinNim</span><span>(</span><span>$n</span><span>)</span> <span>{</span>\n    <span>return</span> <span>$n</span> $ <span>4</span><span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div><h2 id=\"python3\"> Python3</h2>\n<div><pre><code><span># Your runtime beats 90.8 % of python3 submissions</span>\n<span>#</span>\n<span># Your memory usage beats 100 % of python3 submissions(14.2 MB)</span>\n\n<span>class</span> <span>Solution</span><span>:</span>\n    <span>def</span> <span>canWinNim</span><span>(</span>self<span>,</span> n<span>:</span> <span>int</span><span>)</span> <span>-</span><span>></span> <span>bool</span><span>:</span>\n        <span>return</span> n <span>%</span> <span>4</span> <span>!=</span> <span>0</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h2 id=\"typescript\"> TypeScript</h2>\n<div><pre><code><span>/*\n * Your runtime beats 100 % of typescript submissions\n *\n * Your memory usage beats 88.89 % of typescript submissions (38.8 MB)\n */</span>\n\n<span>const</span> canWinNim <span>=</span> <span>(</span>n<span>:</span> <span>number</span><span>)</span><span>:</span> <span>boolean</span> <span>=></span> n <span>%</span> <span>4</span> <span>!==</span> <span>0</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h3 id=\"simple-2\"> simple</h3>\n<div><pre><code><span>/*\n * Your runtime beats 100 % of typescript submissions\n *\n * Your memory usage beats 88.89 % of typescript submissions (38.8 MB)\n */</span>\n\n<span>const</span> canWinNim <span>=</span> <span>(</span>n<span>:</span> <span>number</span><span>)</span><span>:</span> <span>boolean</span> <span>=></span> <span>Boolean</span><span>(</span>n <span>%</span> <span>4</span><span>)</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.792Z",
      "authors": [
        {
          "name": "292. Nim Game"
        }
      ],
      "tags": [
        "Mister-Hope"
      ]
    },
    {
      "title": "PHP",
      "url": "https://leetcode.innenu.com/292-Nim-Game/PHP/",
      "id": "https://leetcode.innenu.com/292-Nim-Game/PHP/",
      "content_html": "<h2 id=\"mister-hope\"> Mister-Hope</h2>\n<div><pre><code><span>/**\n * Your runtime beats 80 % of php submissions\n *\n * Your memory usage beats 100 % of php submissions (15.6 MB)\n */</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n  <span>/**\n   * @param Integer $n\n   * @return Boolean\n   */</span>\n  <span>function</span> <span>canWinNim</span><span>(</span><span>$n</span><span>)</span> <span>{</span>\n    <span>return</span> <span>$n</span> $ <span>4</span><span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.792Z",
      "authors": [
        {
          "name": "292. Nim Game"
        }
      ],
      "tags": [
        "PHP"
      ]
    },
    {
      "title": "Python3",
      "url": "https://leetcode.innenu.com/292-Nim-Game/Python3/",
      "id": "https://leetcode.innenu.com/292-Nim-Game/Python3/",
      "content_html": "<h2 id=\"mister-hope\"> Mister-Hope</h2>\n<div><pre><code><span># Your runtime beats 90.8 % of python3 submissions</span>\n<span>#</span>\n<span># Your memory usage beats 100 % of python3 submissions(14.2 MB)</span>\n\n<span>class</span> <span>Solution</span><span>:</span>\n    <span>def</span> <span>canWinNim</span><span>(</span>self<span>,</span> n<span>:</span> <span>int</span><span>)</span> <span>-</span><span>></span> <span>bool</span><span>:</span>\n        <span>return</span> n <span>%</span> <span>4</span> <span>!=</span> <span>0</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.792Z",
      "authors": [
        {
          "name": "292. Nim Game"
        }
      ],
      "tags": [
        "Python3"
      ]
    },
    {
      "title": "TypeScript",
      "url": "https://leetcode.innenu.com/292-Nim-Game/TypeScript/",
      "id": "https://leetcode.innenu.com/292-Nim-Game/TypeScript/",
      "content_html": "<h2 id=\"mister-hope\"> Mister-Hope</h2>\n<div><pre><code><span>/*\n * Your runtime beats 100 % of typescript submissions\n *\n * Your memory usage beats 88.89 % of typescript submissions (38.8 MB)\n */</span>\n\n<span>const</span> canWinNim <span>=</span> <span>(</span>n<span>:</span> <span>number</span><span>)</span><span>:</span> <span>boolean</span> <span>=></span> n <span>%</span> <span>4</span> <span>!==</span> <span>0</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h3 id=\"simple\"> simple</h3>\n<div><pre><code><span>/*\n * Your runtime beats 100 % of typescript submissions\n *\n * Your memory usage beats 88.89 % of typescript submissions (38.8 MB)\n */</span>\n\n<span>const</span> canWinNim <span>=</span> <span>(</span>n<span>:</span> <span>number</span><span>)</span><span>:</span> <span>boolean</span> <span>=></span> <span>Boolean</span><span>(</span>n <span>%</span> <span>4</span><span>)</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.792Z",
      "authors": [
        {
          "name": "292. Nim Game"
        }
      ],
      "tags": [
        "TypeScript"
      ]
    },
    {
      "title": "lizncu",
      "url": "https://leetcode.innenu.com/292-Nim-Game/lizncu/",
      "id": "https://leetcode.innenu.com/292-Nim-Game/lizncu/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>boolean</span> <span>canWinNim</span><span>(</span><span>int</span> n<span>)</span> <span>{</span>\n    <span>return</span> n <span>%</span> <span>4</span> <span>==</span> <span>0</span> <span>?</span> <span>false</span> <span>:</span> <span>true</span><span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.793Z",
      "authors": [
        {
          "name": "292. Nim Game"
        }
      ],
      "tags": [
        "lizncu"
      ]
    },
    {
      "title": "292. Nim Game",
      "url": "https://leetcode.innenu.com/292-Nim-Game/",
      "id": "https://leetcode.innenu.com/292-Nim-Game/",
      "content_html": "<h1 id=\"_292-nim-game\"> <a href=\"https://leetcode.com/problems/nim-game/\" target=\"_blank\" rel=\"noopener noreferrer\">292. Nim Game</a></h1>\n<p>You are playing the following Nim Game with your friend:</p>\n<ul>\n<li>Initially, there is a heap of stones on the table.</li>\n<li>You and your friend will alternate taking turns, and <strong>you go first</strong>.</li>\n<li>On each turn, the person whose turn it is will remove 1 to 3 stones from the heap.</li>\n<li>The one who removes the last stone is the winner.</li>\n</ul>\n<p>Given <code>n</code>, the number of stones in the heap, return <code>true</code> <em>if you can win the game assuming both you and your friend play optimally, otherwise return</em> <code>false</code>.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> n = 4</p>\n<p><strong>Output:</strong> false</p>\n<p><strong>Explanation:</strong> These are the possible outcomes:</p>\n<ol>\n<li>You remove 1 stone. Your friend removes 3 stones, including the last stone. Your friend wins.</li>\n<li>You remove 2 stones. Your friend removes 2 stones, including the last stone. Your friend wins.</li>\n<li>You remove 3 stones. Your friend removes the last stone. Your friend wins.</li>\n</ol>\n<p>In all outcomes, your friend wins.</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> n = 1</p>\n<p><strong>Output:</strong> true</p>\n<p><strong>Example 3:</strong></p>\n<p><strong>Input:</strong> n = 2</p>\n<p><strong>Output:</strong> true</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>1 &lt;= n &lt;= 231 - 1</code></li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "C++",
      "url": "https://leetcode.innenu.com/344-Reverse-String/C++/",
      "id": "https://leetcode.innenu.com/344-Reverse-String/C++/",
      "content_html": "<h2 id=\"sqm\"> sqm</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>void</span> <span>reverseString</span><span>(</span>vector<span>&lt;</span><span>char</span><span>></span><span>&amp;</span> s<span>)</span> <span>{</span> <span>reverse</span><span>(</span>s<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> s<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span> <span>}</span>\n<span>}</span><span>;</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.794Z",
      "authors": [
        {
          "name": "344. Reverse String"
        }
      ],
      "tags": [
        "C++"
      ]
    },
    {
      "title": "Java",
      "url": "https://leetcode.innenu.com/344-Reverse-String/Java/",
      "id": "https://leetcode.innenu.com/344-Reverse-String/Java/",
      "content_html": "<h2 id=\"lizncu\"> lizncu</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>void</span> <span>reverseString</span><span>(</span><span>char</span><span>[</span><span>]</span> s<span>)</span> <span>{</span>\n    <span>char</span> t<span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> s<span>.</span>length <span>/</span> <span>2</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      t <span>=</span> s<span>[</span>i<span>]</span><span>;</span>\n      s<span>[</span>i<span>]</span> <span>=</span> s<span>[</span>s<span>.</span>length <span>-</span> i <span>-</span> <span>1</span><span>]</span><span>;</span>\n      s<span>[</span>s<span>.</span>length <span>-</span> i <span>-</span> <span>1</span><span>]</span> <span>=</span> t<span>;</span>\n    <span>}</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.794Z",
      "authors": [
        {
          "name": "344. Reverse String"
        }
      ],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "lizncu",
      "url": "https://leetcode.innenu.com/344-Reverse-String/lizncu/",
      "id": "https://leetcode.innenu.com/344-Reverse-String/lizncu/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>void</span> <span>reverseString</span><span>(</span><span>char</span><span>[</span><span>]</span> s<span>)</span> <span>{</span>\n    <span>char</span> t<span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> s<span>.</span>length <span>/</span> <span>2</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      t <span>=</span> s<span>[</span>i<span>]</span><span>;</span>\n      s<span>[</span>i<span>]</span> <span>=</span> s<span>[</span>s<span>.</span>length <span>-</span> i <span>-</span> <span>1</span><span>]</span><span>;</span>\n      s<span>[</span>s<span>.</span>length <span>-</span> i <span>-</span> <span>1</span><span>]</span> <span>=</span> t<span>;</span>\n    <span>}</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.794Z",
      "authors": [
        {
          "name": "344. Reverse String"
        }
      ],
      "tags": [
        "lizncu"
      ]
    },
    {
      "title": "344. Reverse String",
      "url": "https://leetcode.innenu.com/344-Reverse-String/",
      "id": "https://leetcode.innenu.com/344-Reverse-String/",
      "content_html": "<h1 id=\"_344-reverse-string\"> <a href=\"https://leetcode.com/problems/reverse-string/\" target=\"_blank\" rel=\"noopener noreferrer\">344. Reverse String</a></h1>\n<p>Write a function that reverses a string. The input string is given as an array of characters <code>char[]</code>.</p>\n<p>Do not allocate extra space for another array, you must do this by <strong>modifying the input array <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\" rel=\"noopener noreferrer\">in-place</a></strong> with O(1) extra memory.</p>\n<p>You may assume all the characters consist of <a href=\"https://en.wikipedia.org/wiki/ASCII#Printable_characters\" target=\"_blank\" rel=\"noopener noreferrer\">printable ascii characters</a>.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> [&quot;h&quot;,&quot;e&quot;,&quot;l&quot;,&quot;l&quot;,&quot;o&quot;]</p>\n<p><strong>Output:</strong> [&quot;o&quot;,&quot;l&quot;,&quot;l&quot;,&quot;e&quot;,&quot;h&quot;]</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> [&quot;H&quot;,&quot;a&quot;,&quot;n&quot;,&quot;n&quot;,&quot;a&quot;,&quot;h&quot;]</p>\n<p><strong>Output:</strong> [&quot;h&quot;,&quot;a&quot;,&quot;n&quot;,&quot;n&quot;,&quot;a&quot;,&quot;H&quot;]</p>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "sqm",
      "url": "https://leetcode.innenu.com/344-Reverse-String/sqm/",
      "id": "https://leetcode.innenu.com/344-Reverse-String/sqm/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>void</span> <span>reverseString</span><span>(</span>vector<span>&lt;</span><span>char</span><span>></span><span>&amp;</span> s<span>)</span> <span>{</span> <span>reverse</span><span>(</span>s<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> s<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span> <span>}</span>\n<span>}</span><span>;</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.795Z",
      "authors": [
        {
          "name": "344. Reverse String"
        }
      ],
      "tags": [
        "sqm"
      ]
    },
    {
      "title": "C++",
      "url": "https://leetcode.innenu.com/371-sum-of-two-integers/C++/",
      "id": "https://leetcode.innenu.com/371-sum-of-two-integers/C++/",
      "content_html": "<h2 id=\"sqm\"> sqm</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>int</span> <span>getSum</span><span>(</span><span>int</span> a<span>,</span> <span>int</span> b<span>)</span> <span>{</span>\n    <span>while</span> <span>(</span>b <span>></span> <span>0</span><span>)</span> <span>{</span>\n      a<span>++</span><span>;</span>\n      b<span>--</span><span>;</span>\n    <span>}</span>\n    <span>while</span> <span>(</span>b <span>&lt;</span> <span>0</span><span>)</span> <span>{</span>\n      a<span>--</span><span>;</span>\n      b<span>++</span><span>;</span>\n    <span>}</span>\n    <span>return</span> a<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.795Z",
      "authors": [
        {
          "name": "371. Sum of Two Integers"
        }
      ],
      "tags": [
        "C++"
      ]
    },
    {
      "title": "371. Sum of Two Integers",
      "url": "https://leetcode.innenu.com/371-sum-of-two-integers/",
      "id": "https://leetcode.innenu.com/371-sum-of-two-integers/",
      "content_html": "<h1 id=\"_371-sum-of-two-integers\"> <a href=\"https://leetcode.com/problems/sum-of-two-integers/\" target=\"_blank\" rel=\"noopener noreferrer\">371. Sum of Two Integers</a></h1>\n<p>Calculate the sum of two integers <em>a</em> and <em>b</em>, but you are <strong>not allowed</strong> to use the operator <code>+</code> and <code>-</code>.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> a = 1, b = 2</p>\n<p><strong>Output:</strong> 3</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> a = -2, b = 3</p>\n<p><strong>Output:</strong> 1</p>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "sqm",
      "url": "https://leetcode.innenu.com/371-sum-of-two-integers/sqm/",
      "id": "https://leetcode.innenu.com/371-sum-of-two-integers/sqm/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>int</span> <span>getSum</span><span>(</span><span>int</span> a<span>,</span> <span>int</span> b<span>)</span> <span>{</span>\n    <span>while</span> <span>(</span>b <span>></span> <span>0</span><span>)</span> <span>{</span>\n      a<span>++</span><span>;</span>\n      b<span>--</span><span>;</span>\n    <span>}</span>\n    <span>while</span> <span>(</span>b <span>&lt;</span> <span>0</span><span>)</span> <span>{</span>\n      a<span>--</span><span>;</span>\n      b<span>++</span><span>;</span>\n    <span>}</span>\n    <span>return</span> a<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.796Z",
      "authors": [
        {
          "name": "371. Sum of Two Integers"
        }
      ],
      "tags": [
        "sqm"
      ]
    },
    {
      "title": "Java",
      "url": "https://leetcode.innenu.com/387-First-Unique-Character-in-a-String/Java/",
      "id": "https://leetcode.innenu.com/387-First-Unique-Character-in-a-String/Java/",
      "content_html": "<h2 id=\"lizncu\"> lizncu</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span> <span>firstUniqChar</span><span>(</span><span>String</span> s<span>)</span> <span>{</span>\n    <span>if</span> <span>(</span>s<span>.</span><span>length</span><span>(</span><span>)</span> <span>&lt;</span> <span>1</span><span>)</span> <span>{</span>\n      <span>return</span> <span>-</span><span>1</span><span>;</span>\n    <span>}</span>\n\n    <span>int</span><span>[</span><span>]</span> flag <span>=</span> <span>new</span> <span>int</span><span>[</span>s<span>.</span><span>length</span><span>(</span><span>)</span><span>]</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> s<span>.</span><span>length</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>flag<span>[</span>i<span>]</span> <span>==</span> <span>1</span><span>)</span> <span>{</span>\n        <span>continue</span><span>;</span>\n      <span>}</span>\n      <span>for</span> <span>(</span><span>int</span> j <span>=</span> i <span>+</span> <span>1</span><span>;</span> j <span>&lt;</span> s<span>.</span><span>length</span><span>(</span><span>)</span><span>;</span> j<span>++</span><span>)</span> <span>{</span>\n        <span>if</span> <span>(</span>s<span>.</span><span>charAt</span><span>(</span>i<span>)</span> <span>==</span> s<span>.</span><span>charAt</span><span>(</span>j<span>)</span><span>)</span> <span>{</span>\n          flag<span>[</span>i<span>]</span> <span>=</span> flag<span>[</span>j<span>]</span> <span>=</span> <span>1</span><span>;</span>\n        <span>}</span>\n      <span>}</span>\n      <span>if</span> <span>(</span>flag<span>[</span>i<span>]</span> <span>!=</span> <span>1</span><span>)</span> <span>{</span>\n        <span>return</span> i<span>;</span>\n      <span>}</span>\n    <span>}</span>\n\n    <span>if</span> <span>(</span>flag<span>[</span>s<span>.</span><span>length</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>]</span> <span>==</span> <span>1</span><span>)</span> <span>{</span>\n      <span>return</span> <span>-</span><span>1</span><span>;</span>\n    <span>}</span> <span>else</span> <span>{</span>\n      <span>return</span> s<span>.</span><span>length</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>;</span>\n    <span>}</span>\n  <span>}</span>\n<span>}</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.797Z",
      "authors": [
        {
          "name": "387. First Unique Character in a String"
        }
      ],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "lizncu",
      "url": "https://leetcode.innenu.com/387-First-Unique-Character-in-a-String/lizncu/",
      "id": "https://leetcode.innenu.com/387-First-Unique-Character-in-a-String/lizncu/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span> <span>firstUniqChar</span><span>(</span><span>String</span> s<span>)</span> <span>{</span>\n    <span>if</span> <span>(</span>s<span>.</span><span>length</span><span>(</span><span>)</span> <span>&lt;</span> <span>1</span><span>)</span> <span>{</span>\n      <span>return</span> <span>-</span><span>1</span><span>;</span>\n    <span>}</span>\n\n    <span>int</span><span>[</span><span>]</span> flag <span>=</span> <span>new</span> <span>int</span><span>[</span>s<span>.</span><span>length</span><span>(</span><span>)</span><span>]</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> s<span>.</span><span>length</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>flag<span>[</span>i<span>]</span> <span>==</span> <span>1</span><span>)</span> <span>{</span>\n        <span>continue</span><span>;</span>\n      <span>}</span>\n      <span>for</span> <span>(</span><span>int</span> j <span>=</span> i <span>+</span> <span>1</span><span>;</span> j <span>&lt;</span> s<span>.</span><span>length</span><span>(</span><span>)</span><span>;</span> j<span>++</span><span>)</span> <span>{</span>\n        <span>if</span> <span>(</span>s<span>.</span><span>charAt</span><span>(</span>i<span>)</span> <span>==</span> s<span>.</span><span>charAt</span><span>(</span>j<span>)</span><span>)</span> <span>{</span>\n          flag<span>[</span>i<span>]</span> <span>=</span> flag<span>[</span>j<span>]</span> <span>=</span> <span>1</span><span>;</span>\n        <span>}</span>\n      <span>}</span>\n      <span>if</span> <span>(</span>flag<span>[</span>i<span>]</span> <span>!=</span> <span>1</span><span>)</span> <span>{</span>\n        <span>return</span> i<span>;</span>\n      <span>}</span>\n    <span>}</span>\n\n    <span>if</span> <span>(</span>flag<span>[</span>s<span>.</span><span>length</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>]</span> <span>==</span> <span>1</span><span>)</span> <span>{</span>\n      <span>return</span> <span>-</span><span>1</span><span>;</span>\n    <span>}</span> <span>else</span> <span>{</span>\n      <span>return</span> s<span>.</span><span>length</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>;</span>\n    <span>}</span>\n  <span>}</span>\n<span>}</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.797Z",
      "authors": [
        {
          "name": "387. First Unique Character in a String"
        }
      ],
      "tags": [
        "lizncu"
      ]
    },
    {
      "title": "387. First Unique Character in a String",
      "url": "https://leetcode.innenu.com/387-First-Unique-Character-in-a-String/",
      "id": "https://leetcode.innenu.com/387-First-Unique-Character-in-a-String/",
      "content_html": "<h1 id=\"_387-first-unique-character-in-a-string\"> <a href=\"https://leetcode.com/problems/first-unique-character-in-a-string/\" target=\"_blank\" rel=\"noopener noreferrer\">387. First Unique Character in a String</a></h1>\n<p>Given a string, find the first non-repeating character in it and return its index. If it doesn't exist, return -1.</p>\n<p><strong>Examples:</strong></p>\n<p>s = &quot;leetcode&quot;\nreturn 0.</p>\n<p>s = &quot;loveleetcode&quot;\nreturn 2.</p>\n<p><strong>Note:</strong> You may assume the string contains only lowercase English letters.</p>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "C++",
      "url": "https://leetcode.innenu.com/389-find-the-difference/C++/",
      "id": "https://leetcode.innenu.com/389-find-the-difference/C++/",
      "content_html": "<h2 id=\"sqm\"> sqm</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>\n<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>char</span> <span>findTheDifference</span><span>(</span>string s<span>,</span> string t<span>)</span> <span>{</span>\n    <span>sort</span><span>(</span>s<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> s<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>\n    <span>sort</span><span>(</span>t<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> t<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>\n    <span>int</span> i<span>;</span>\n    <span>for</span> <span>(</span>i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> t<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>s<span>[</span>i<span>]</span> <span>==</span> t<span>[</span>i<span>]</span><span>)</span> <span>{</span>\n      <span>}</span> <span>else</span>\n        <span>return</span> t<span>[</span>i<span>]</span><span>;</span>\n    <span>}</span>\n    <span>return</span> t<span>[</span>i<span>]</span><span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.798Z",
      "authors": [
        {
          "name": "389. Find the Difference"
        }
      ],
      "tags": [
        "C++"
      ]
    },
    {
      "title": "sqm",
      "url": "https://leetcode.innenu.com/389-find-the-difference/sqm/",
      "id": "https://leetcode.innenu.com/389-find-the-difference/sqm/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>\n<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>char</span> <span>findTheDifference</span><span>(</span>string s<span>,</span> string t<span>)</span> <span>{</span>\n    <span>sort</span><span>(</span>s<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> s<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>\n    <span>sort</span><span>(</span>t<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> t<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>\n    <span>int</span> i<span>;</span>\n    <span>for</span> <span>(</span>i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> t<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>s<span>[</span>i<span>]</span> <span>==</span> t<span>[</span>i<span>]</span><span>)</span> <span>{</span>\n      <span>}</span> <span>else</span>\n        <span>return</span> t<span>[</span>i<span>]</span><span>;</span>\n    <span>}</span>\n    <span>return</span> t<span>[</span>i<span>]</span><span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.799Z",
      "authors": [
        {
          "name": "389. Find the Difference"
        }
      ],
      "tags": [
        "sqm"
      ]
    },
    {
      "title": "389. Find the Difference",
      "url": "https://leetcode.innenu.com/389-find-the-difference/",
      "id": "https://leetcode.innenu.com/389-find-the-difference/",
      "content_html": "<h1 id=\"_389-find-the-difference\"> <a href=\"https://leetcode.com/problems/find-the-difference/\" target=\"_blank\" rel=\"noopener noreferrer\">389. Find the Difference</a></h1>\n<p>You are given two strings <code>s</code> and <code>t</code>.</p>\n<p>String <code>t</code> is generated by random shuffling string <code>s</code> and then add one more letter at a random position.</p>\n<p>Return the letter that was added to <code>t</code>.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> s = &quot;abcd&quot;, t = &quot;abcde&quot;</p>\n<p><strong>Output:</strong> &quot;e&quot;</p>\n<p><strong>Explanation:</strong> 'e' is the letter that was added.</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> s = &quot;&quot;, t = &quot;y&quot;</p>\n<p><strong>Output:</strong> &quot;y&quot;</p>\n<p><strong>Example 3:</strong></p>\n<p><strong>Input:</strong> s = &quot;a&quot;, t = &quot;aa&quot;</p>\n<p><strong>Output:</strong> &quot;a&quot;</p>\n<p><strong>Example 4:</strong></p>\n<p><strong>Input:</strong> s = &quot;ae&quot;, t = &quot;aea&quot;</p>\n<p><strong>Output:</strong> &quot;a&quot;</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>0 &lt;= s.length &lt;= 1000</code></li>\n<li><code>t.length == s.length + 1</code></li>\n<li><code>s</code> and <code>t</code> consist of lower-case English letters.</li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "Java",
      "url": "https://leetcode.innenu.com/4-median-of-two-sorted-arrays/Java/",
      "id": "https://leetcode.innenu.com/4-median-of-two-sorted-arrays/Java/",
      "content_html": "<h2 id=\"lizncu\"> lizncu</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>double</span> <span>findMedianSortedArrays</span><span>(</span><span>int</span><span>[</span><span>]</span> nums1<span>,</span> <span>int</span><span>[</span><span>]</span> nums2<span>)</span> <span>{</span>\n    <span>int</span> <span>Length</span> <span>=</span> nums1<span>.</span>length <span>+</span> nums2<span>.</span>length<span>;</span>\n    <span>boolean</span> <span>IsOne</span> <span>=</span> <span>false</span><span>;</span>\n    <span>int</span> <span>Location</span> <span>=</span> <span>Length</span> <span>/</span> <span>2</span> <span>+</span> <span>1</span><span>;</span>\n\n    <span>if</span> <span>(</span><span>Length</span> <span>%</span> <span>2</span> <span>!=</span> <span>0</span><span>)</span> <span>{</span>\n      <span>IsOne</span> <span>=</span> <span>true</span><span>;</span>\n    <span>}</span>\n\n    <span>int</span><span>[</span><span>]</span> num <span>=</span> <span>new</span> <span>int</span><span>[</span><span>2000</span><span>]</span><span>;</span>\n    <span>int</span> i <span>=</span> <span>0</span><span>;</span>\n    <span>int</span> m <span>=</span> <span>0</span><span>,</span> n <span>=</span> <span>0</span><span>;</span>\n\n    <span>while</span> <span>(</span>m <span>&lt;</span> nums1<span>.</span>length <span>&amp;&amp;</span> n <span>&lt;</span> nums2<span>.</span>length <span>&amp;&amp;</span> i <span>&lt;=</span> <span>Location</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>nums1<span>[</span>m<span>]</span> <span>&lt;</span> nums2<span>[</span>n<span>]</span><span>)</span> <span>{</span>\n        num<span>[</span>i<span>]</span> <span>=</span> nums1<span>[</span>m<span>]</span><span>;</span>\n        m<span>++</span><span>;</span>\n        i<span>++</span><span>;</span>\n      <span>}</span> <span>else</span> <span>if</span> <span>(</span>nums1<span>[</span>m<span>]</span> <span>></span> nums2<span>[</span>n<span>]</span><span>)</span> <span>{</span>\n        num<span>[</span>i<span>]</span> <span>=</span> nums2<span>[</span>n<span>]</span><span>;</span>\n        n<span>++</span><span>;</span>\n        i<span>++</span><span>;</span>\n      <span>}</span> <span>else</span> <span>{</span>\n        num<span>[</span>i<span>]</span> <span>=</span> nums1<span>[</span>m<span>]</span><span>;</span>\n        num<span>[</span><span>++</span>i<span>]</span> <span>=</span> nums2<span>[</span>n<span>]</span><span>;</span>\n        m<span>++</span><span>;</span>\n        n<span>++</span><span>;</span>\n        i<span>++</span><span>;</span>\n      <span>}</span>\n    <span>}</span>\n\n    <span>if</span> <span>(</span>i <span>&lt;</span> <span>Location</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>n <span>&lt;</span> nums2<span>.</span>length<span>)</span> <span>{</span>\n        <span>for</span> <span>(</span><span>;</span> i <span>&lt;</span> <span>Location</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n          num<span>[</span>i<span>]</span> <span>=</span> nums2<span>[</span>n<span>]</span><span>;</span>\n          n<span>++</span><span>;</span>\n        <span>}</span>\n      <span>}</span> <span>else</span> <span>{</span>\n        <span>for</span> <span>(</span><span>;</span> i <span>&lt;</span> <span>Location</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n          num<span>[</span>i<span>]</span> <span>=</span> nums1<span>[</span>m<span>]</span><span>;</span>\n          m<span>++</span><span>;</span>\n        <span>}</span>\n      <span>}</span>\n    <span>}</span>\n\n    <span>if</span> <span>(</span><span>IsOne</span><span>)</span> <span>{</span>\n      <span>return</span> num<span>[</span><span>Location</span> <span>-</span> <span>1</span><span>]</span><span>;</span>\n    <span>}</span>\n\n    <span>else</span> <span>{</span>\n      <span>return</span> <span>(</span><span>double</span><span>)</span> <span>(</span>num<span>[</span><span>Location</span> <span>-</span> <span>2</span><span>]</span> <span>+</span> num<span>[</span><span>Location</span> <span>-</span> <span>1</span><span>]</span><span>)</span> <span>/</span> <span>2</span><span>;</span>\n    <span>}</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.800Z",
      "authors": [
        {
          "name": "4. Median of Two Sorted Arrays"
        }
      ],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "lizncu",
      "url": "https://leetcode.innenu.com/4-median-of-two-sorted-arrays/lizncu/",
      "id": "https://leetcode.innenu.com/4-median-of-two-sorted-arrays/lizncu/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>double</span> <span>findMedianSortedArrays</span><span>(</span><span>int</span><span>[</span><span>]</span> nums1<span>,</span> <span>int</span><span>[</span><span>]</span> nums2<span>)</span> <span>{</span>\n    <span>int</span> <span>Length</span> <span>=</span> nums1<span>.</span>length <span>+</span> nums2<span>.</span>length<span>;</span>\n    <span>boolean</span> <span>IsOne</span> <span>=</span> <span>false</span><span>;</span>\n    <span>int</span> <span>Location</span> <span>=</span> <span>Length</span> <span>/</span> <span>2</span> <span>+</span> <span>1</span><span>;</span>\n\n    <span>if</span> <span>(</span><span>Length</span> <span>%</span> <span>2</span> <span>!=</span> <span>0</span><span>)</span> <span>{</span>\n      <span>IsOne</span> <span>=</span> <span>true</span><span>;</span>\n    <span>}</span>\n\n    <span>int</span><span>[</span><span>]</span> num <span>=</span> <span>new</span> <span>int</span><span>[</span><span>2000</span><span>]</span><span>;</span>\n    <span>int</span> i <span>=</span> <span>0</span><span>;</span>\n    <span>int</span> m <span>=</span> <span>0</span><span>,</span> n <span>=</span> <span>0</span><span>;</span>\n\n    <span>while</span> <span>(</span>m <span>&lt;</span> nums1<span>.</span>length <span>&amp;&amp;</span> n <span>&lt;</span> nums2<span>.</span>length <span>&amp;&amp;</span> i <span>&lt;=</span> <span>Location</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>nums1<span>[</span>m<span>]</span> <span>&lt;</span> nums2<span>[</span>n<span>]</span><span>)</span> <span>{</span>\n        num<span>[</span>i<span>]</span> <span>=</span> nums1<span>[</span>m<span>]</span><span>;</span>\n        m<span>++</span><span>;</span>\n        i<span>++</span><span>;</span>\n      <span>}</span> <span>else</span> <span>if</span> <span>(</span>nums1<span>[</span>m<span>]</span> <span>></span> nums2<span>[</span>n<span>]</span><span>)</span> <span>{</span>\n        num<span>[</span>i<span>]</span> <span>=</span> nums2<span>[</span>n<span>]</span><span>;</span>\n        n<span>++</span><span>;</span>\n        i<span>++</span><span>;</span>\n      <span>}</span> <span>else</span> <span>{</span>\n        num<span>[</span>i<span>]</span> <span>=</span> nums1<span>[</span>m<span>]</span><span>;</span>\n        num<span>[</span><span>++</span>i<span>]</span> <span>=</span> nums2<span>[</span>n<span>]</span><span>;</span>\n        m<span>++</span><span>;</span>\n        n<span>++</span><span>;</span>\n        i<span>++</span><span>;</span>\n      <span>}</span>\n    <span>}</span>\n\n    <span>if</span> <span>(</span>i <span>&lt;</span> <span>Location</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>n <span>&lt;</span> nums2<span>.</span>length<span>)</span> <span>{</span>\n        <span>for</span> <span>(</span><span>;</span> i <span>&lt;</span> <span>Location</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n          num<span>[</span>i<span>]</span> <span>=</span> nums2<span>[</span>n<span>]</span><span>;</span>\n          n<span>++</span><span>;</span>\n        <span>}</span>\n      <span>}</span> <span>else</span> <span>{</span>\n        <span>for</span> <span>(</span><span>;</span> i <span>&lt;</span> <span>Location</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n          num<span>[</span>i<span>]</span> <span>=</span> nums1<span>[</span>m<span>]</span><span>;</span>\n          m<span>++</span><span>;</span>\n        <span>}</span>\n      <span>}</span>\n    <span>}</span>\n\n    <span>if</span> <span>(</span><span>IsOne</span><span>)</span> <span>{</span>\n      <span>return</span> num<span>[</span><span>Location</span> <span>-</span> <span>1</span><span>]</span><span>;</span>\n    <span>}</span>\n\n    <span>else</span> <span>{</span>\n      <span>return</span> <span>(</span><span>double</span><span>)</span> <span>(</span>num<span>[</span><span>Location</span> <span>-</span> <span>2</span><span>]</span> <span>+</span> num<span>[</span><span>Location</span> <span>-</span> <span>1</span><span>]</span><span>)</span> <span>/</span> <span>2</span><span>;</span>\n    <span>}</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.801Z",
      "authors": [
        {
          "name": "4. Median of Two Sorted Arrays"
        }
      ],
      "tags": [
        "lizncu"
      ]
    },
    {
      "title": "4. Median of Two Sorted Arrays",
      "url": "https://leetcode.innenu.com/4-median-of-two-sorted-arrays/",
      "id": "https://leetcode.innenu.com/4-median-of-two-sorted-arrays/",
      "content_html": "<h1 id=\"_4-median-of-two-sorted-arrays\"> <a href=\"https://leetcode.com/problems/median-of-two-sorted-arrays/\" target=\"_blank\" rel=\"noopener noreferrer\">4. Median of Two Sorted Arrays</a></h1>\n<p>Given two sorted arrays <code>nums1</code> and <code>nums2</code> of size <code>m</code> and <code>n</code> respectively, return <strong>the median</strong> of the two sorted arrays.</p>\n<p><strong>Follow up:</strong> The overall run time complexity should be <code>O(log (m+n))</code>.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> nums1 = [1,3], nums2 = [2]</p>\n<p><strong>Output:</strong> 2.00000</p>\n<p><strong>Explanation:</strong> merged array = [1,2,3] and median is 2.</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> nums1 = [1,2], nums2 = [3,4]</p>\n<p><strong>Output:</strong> 2.50000</p>\n<p><strong>Explanation:</strong> merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.</p>\n<p><strong>Example 3:</strong></p>\n<p><strong>Input:</strong> nums1 = [0,0], nums2 = [0,0]</p>\n<p><strong>Output:</strong> 0.00000</p>\n<p><strong>Example 4:</strong></p>\n<p><strong>Input:</strong> nums1 = [], nums2 = [1]</p>\n<p><strong>Output:</strong> 1.00000</p>\n<p><strong>Example 5:</strong></p>\n<p><strong>Input:</strong> nums1 = [2], nums2 = []</p>\n<p><strong>Output:</strong> 2.00000</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>nums1.length == m</code></li>\n<li><code>nums2.length == n</code></li>\n<li><code>0 &lt;= m &lt;= 1000</code></li>\n<li><code>0 &lt;= n &lt;= 1000</code></li>\n<li><code>1 &lt;= m + n &lt;= 2000</code></li>\n<li><code>-106 &lt;= nums1[i], nums2[i] &lt;= 106</code></li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "JavaScript",
      "url": "https://leetcode.innenu.com/415-add-strings/JavaScript/",
      "id": "https://leetcode.innenu.com/415-add-strings/JavaScript/",
      "content_html": "<h2 id=\"mister-hope\"> Mister-Hope</h2>\n<h3 id=\"simple\"> simple</h3>\n<div><pre><code><span>/*\n * Runtime: 84 ms, faster than 91.39% of JavaScript online submissions for Add Strings.\n *\n * Memory Usage: 40.6 MB, less than 5.04% of JavaScript online submissions for Add Strings.\n */</span>\n\n<span>const</span> <span>addStrings</span> <span>=</span> <span>(</span><span>num1<span>,</span> num2</span><span>)</span> <span>=></span> <span>(</span><span>BigInt</span><span>(</span>num1<span>)</span> <span>+</span> <span>BigInt</span><span>(</span>num2<span>)</span><span>)</span><span>.</span><span>toString</span><span>(</span><span>)</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.802Z",
      "authors": [
        {
          "name": "415. Add Strings"
        }
      ],
      "tags": [
        "JavaScript"
      ]
    },
    {
      "title": "Mister-Hope",
      "url": "https://leetcode.innenu.com/415-add-strings/Mister-Hope/",
      "id": "https://leetcode.innenu.com/415-add-strings/Mister-Hope/",
      "content_html": "<h2 id=\"javascript\"> JavaScript</h2>\n<h3 id=\"simple\"> simple</h3>\n<div><pre><code><span>/*\n * Runtime: 84 ms, faster than 91.39% of JavaScript online submissions for Add Strings.\n *\n * Memory Usage: 40.6 MB, less than 5.04% of JavaScript online submissions for Add Strings.\n */</span>\n\n<span>const</span> <span>addStrings</span> <span>=</span> <span>(</span><span>num1<span>,</span> num2</span><span>)</span> <span>=></span> <span>(</span><span>BigInt</span><span>(</span>num1<span>)</span> <span>+</span> <span>BigInt</span><span>(</span>num2<span>)</span><span>)</span><span>.</span><span>toString</span><span>(</span><span>)</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h2 id=\"typescript\"> TypeScript</h2>\n<h3 id=\"simple-2\"> simple</h3>\n<div><pre><code><span>/*\n * Runtime: 88 ms, faster than 100.00% of TypeScript online submissions for Add Strings.\n *\n * Memory Usage: 40.2 MB, less than 7.14% of TypeScript online submissions for Add Strings.\n */</span>\n\n<span>const</span> addStrings <span>=</span> <span>(</span>num1<span>:</span> <span>string</span><span>,</span> num2<span>:</span> <span>string</span><span>)</span><span>:</span> <span>string</span> <span>=></span>\n  <span>(</span><span>BigInt</span><span>(</span>num1<span>)</span> <span>+</span> <span>BigInt</span><span>(</span>num2<span>)</span><span>)</span><span>.</span><span>toString</span><span>(</span><span>)</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.802Z",
      "authors": [
        {
          "name": "415. Add Strings"
        }
      ],
      "tags": [
        "Mister-Hope"
      ]
    },
    {
      "title": "TypeScript",
      "url": "https://leetcode.innenu.com/415-add-strings/TypeScript/",
      "id": "https://leetcode.innenu.com/415-add-strings/TypeScript/",
      "content_html": "<h2 id=\"mister-hope\"> Mister-Hope</h2>\n<h3 id=\"simple\"> simple</h3>\n<div><pre><code><span>/*\n * Runtime: 88 ms, faster than 100.00% of TypeScript online submissions for Add Strings.\n *\n * Memory Usage: 40.2 MB, less than 7.14% of TypeScript online submissions for Add Strings.\n */</span>\n\n<span>const</span> addStrings <span>=</span> <span>(</span>num1<span>:</span> <span>string</span><span>,</span> num2<span>:</span> <span>string</span><span>)</span><span>:</span> <span>string</span> <span>=></span>\n  <span>(</span><span>BigInt</span><span>(</span>num1<span>)</span> <span>+</span> <span>BigInt</span><span>(</span>num2<span>)</span><span>)</span><span>.</span><span>toString</span><span>(</span><span>)</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.803Z",
      "authors": [
        {
          "name": "415. Add Strings"
        }
      ],
      "tags": [
        "TypeScript"
      ]
    },
    {
      "title": "415. Add Strings",
      "url": "https://leetcode.innenu.com/415-add-strings/",
      "id": "https://leetcode.innenu.com/415-add-strings/",
      "content_html": "<h1 id=\"_415-add-strings\"> <a href=\"https://leetcode.com/problems/add-strings/\" target=\"_blank\" rel=\"noopener noreferrer\">415. Add Strings</a></h1>\n<p>Given two non-negative integers <code>num1</code> and <code>num2</code> represented as string, return the sum of <code>num1</code> and <code>num2</code>.</p>\n<p><strong>Note:</strong></p>\n<ol>\n<li>The length of both <code>num1</code> and <code>num2</code> is &lt; 5100.</li>\n<li>Both <code>num1</code> and <code>num2</code> contains only digits <code>0-9</code>.</li>\n<li>Both <code>num1</code> and <code>num2</code> does not contain any leading zero.</li>\n<li>You <strong>must not use any built-in BigInteger library</strong> or <strong>convert the inputs to integer</strong> directly.</li>\n</ol>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "Mister-Hope",
      "url": "https://leetcode.innenu.com/43-multiply-strings/Mister-Hope/",
      "id": "https://leetcode.innenu.com/43-multiply-strings/Mister-Hope/",
      "content_html": "<h2 id=\"javascript\"> JavaScript</h2>\n<h3 id=\"simple\"> simple</h3>\n<div><pre><code><span>/*\n * Runtime: 88 ms, faster than 89.78% of JavaScript online submissions for Multiply Strings.\n *\n * Memory Usage: 38.6 MB, less than 5.35% of JavaScript online submissions for Multiply Strings.\n */</span>\n\n<span>const</span> <span>multiply</span> <span>=</span> <span>(</span><span>num1<span>,</span> num2</span><span>)</span> <span>=></span> <span>(</span><span>BigInt</span><span>(</span>num1<span>)</span> <span>*</span> <span>BigInt</span><span>(</span>num2<span>)</span><span>)</span><span>.</span><span>toString</span><span>(</span><span>)</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h2 id=\"typescript\"> TypeScript</h2>\n<h3 id=\"smiple\"> smiple</h3>\n<div><pre><code><span>/*\n * Runtime: 96 ms, faster than 95.45% of TypeScript online submissions for Multiply Strings.\n *\n * Memory Usage: 40.3 MB, less than 9.09% of TypeScript online submissions for Multiply Strings.\n */</span>\n\n<span>const</span> multiply <span>=</span> <span>(</span>num1<span>:</span> <span>string</span><span>,</span> num2<span>:</span> <span>string</span><span>)</span><span>:</span> <span>string</span> <span>=></span>\n  <span>(</span><span>BigInt</span><span>(</span>num1<span>)</span> <span>*</span> <span>BigInt</span><span>(</span>num2<span>)</span><span>)</span><span>.</span><span>toString</span><span>(</span><span>)</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.804Z",
      "authors": [
        {
          "name": "43. Multiply Strings"
        }
      ],
      "tags": [
        "Mister-Hope"
      ]
    },
    {
      "title": "JavaScript",
      "url": "https://leetcode.innenu.com/43-multiply-strings/JavaScript/",
      "id": "https://leetcode.innenu.com/43-multiply-strings/JavaScript/",
      "content_html": "<h2 id=\"mister-hope\"> Mister-Hope</h2>\n<h3 id=\"simple\"> simple</h3>\n<div><pre><code><span>/*\n * Runtime: 88 ms, faster than 89.78% of JavaScript online submissions for Multiply Strings.\n *\n * Memory Usage: 38.6 MB, less than 5.35% of JavaScript online submissions for Multiply Strings.\n */</span>\n\n<span>const</span> <span>multiply</span> <span>=</span> <span>(</span><span>num1<span>,</span> num2</span><span>)</span> <span>=></span> <span>(</span><span>BigInt</span><span>(</span>num1<span>)</span> <span>*</span> <span>BigInt</span><span>(</span>num2<span>)</span><span>)</span><span>.</span><span>toString</span><span>(</span><span>)</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.804Z",
      "authors": [
        {
          "name": "43. Multiply Strings"
        }
      ],
      "tags": [
        "JavaScript"
      ]
    },
    {
      "title": "TypeScript",
      "url": "https://leetcode.innenu.com/43-multiply-strings/TypeScript/",
      "id": "https://leetcode.innenu.com/43-multiply-strings/TypeScript/",
      "content_html": "<h2 id=\"mister-hope\"> Mister-Hope</h2>\n<h3 id=\"smiple\"> smiple</h3>\n<div><pre><code><span>/*\n * Runtime: 96 ms, faster than 95.45% of TypeScript online submissions for Multiply Strings.\n *\n * Memory Usage: 40.3 MB, less than 9.09% of TypeScript online submissions for Multiply Strings.\n */</span>\n\n<span>const</span> multiply <span>=</span> <span>(</span>num1<span>:</span> <span>string</span><span>,</span> num2<span>:</span> <span>string</span><span>)</span><span>:</span> <span>string</span> <span>=></span>\n  <span>(</span><span>BigInt</span><span>(</span>num1<span>)</span> <span>*</span> <span>BigInt</span><span>(</span>num2<span>)</span><span>)</span><span>.</span><span>toString</span><span>(</span><span>)</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.804Z",
      "authors": [
        {
          "name": "43. Multiply Strings"
        }
      ],
      "tags": [
        "TypeScript"
      ]
    },
    {
      "title": "43. Multiply Strings",
      "url": "https://leetcode.innenu.com/43-multiply-strings/",
      "id": "https://leetcode.innenu.com/43-multiply-strings/",
      "content_html": "<h1 id=\"_43-multiply-strings\"> <a href=\"https://leetcode.com/problems/multiply-strings/\" target=\"_blank\" rel=\"noopener noreferrer\">43. Multiply Strings</a></h1>\n<p>Given two non-negative integers <code>num1</code> and <code>num2</code> represented as strings, return the product of <code>num1</code> and <code>num2</code>, also represented as a string.</p>\n<p><strong>Note:</strong> You must not use any built-in BigInteger library or convert the inputs to integer directly.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> num1 = &quot;2&quot;, num2 = &quot;3&quot;</p>\n<p><strong>Output:</strong> &quot;6&quot;</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> num1 = &quot;123&quot;, num2 = &quot;456&quot;</p>\n<p><strong>Output:</strong> &quot;56088&quot;</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>1 &lt;= num1.length, num2.length &lt;= 200</code></li>\n<li><code>num1</code> and <code>num2</code> consist of digits only.</li>\n<li>Both <code>num1</code> and <code>num2</code> do not contain any leading zero, except the number <code>0</code> itself.</li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "C++",
      "url": "https://leetcode.innenu.com/455-assign-cookies/C++/",
      "id": "https://leetcode.innenu.com/455-assign-cookies/C++/",
      "content_html": "<h2 id=\"lmy\"> lmy</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>int</span> <span>findContentChildren</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> g<span>,</span> vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> s<span>)</span> <span>{</span>\n    <span>sort</span><span>(</span>g<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> g<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>\n    <span>sort</span><span>(</span>s<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> s<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>\n    <span>int</span> k <span>=</span> s<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>;</span>\n    <span>int</span> ans <span>=</span> <span>0</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> g<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>;</span> i <span>>=</span> <span>0</span><span>;</span> i<span>--</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>k <span>>=</span> <span>0</span> <span>&amp;&amp;</span> s<span>[</span>k<span>]</span> <span>>=</span> g<span>[</span>i<span>]</span><span>)</span> <span>{</span>\n        ans<span>++</span><span>;</span>\n        k<span>--</span><span>;</span>\n      <span>}</span>\n    <span>}</span>\n    <span>return</span> ans<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.805Z",
      "authors": [
        {
          "name": "455. Assign Cookies"
        }
      ],
      "tags": [
        "C++"
      ]
    },
    {
      "title": "lmy",
      "url": "https://leetcode.innenu.com/455-assign-cookies/lmy/",
      "id": "https://leetcode.innenu.com/455-assign-cookies/lmy/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>int</span> <span>findContentChildren</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> g<span>,</span> vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> s<span>)</span> <span>{</span>\n    <span>sort</span><span>(</span>g<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> g<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>\n    <span>sort</span><span>(</span>s<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> s<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>\n    <span>int</span> k <span>=</span> s<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>;</span>\n    <span>int</span> ans <span>=</span> <span>0</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> g<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>;</span> i <span>>=</span> <span>0</span><span>;</span> i<span>--</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>k <span>>=</span> <span>0</span> <span>&amp;&amp;</span> s<span>[</span>k<span>]</span> <span>>=</span> g<span>[</span>i<span>]</span><span>)</span> <span>{</span>\n        ans<span>++</span><span>;</span>\n        k<span>--</span><span>;</span>\n      <span>}</span>\n    <span>}</span>\n    <span>return</span> ans<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.806Z",
      "authors": [
        {
          "name": "455. Assign Cookies"
        }
      ],
      "tags": [
        "lmy"
      ]
    },
    {
      "title": "C++",
      "url": "https://leetcode.innenu.com/461-hamming-distance/C++/",
      "id": "https://leetcode.innenu.com/461-hamming-distance/C++/",
      "content_html": "<h2 id=\"sqm\"> sqm</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>int</span> <span>hammingDistance</span><span>(</span><span>int</span> x<span>,</span> <span>int</span> y<span>)</span> <span>{</span>\n    <span>int</span> d <span>=</span> x <span>^</span> y<span>,</span> c <span>=</span> <span>0</span><span>;</span>\n    <span>while</span> <span>(</span>d<span>)</span> <span>{</span>\n      d <span>=</span> d <span>&amp;</span> <span>(</span>d <span>-</span> <span>1</span><span>)</span><span>;</span>\n      c<span>++</span><span>;</span>\n    <span>}</span>\n    <span>return</span> c<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.806Z",
      "authors": [
        {
          "name": "461. Hamming Distance"
        }
      ],
      "tags": [
        "C++"
      ]
    },
    {
      "title": "455. Assign Cookies",
      "url": "https://leetcode.innenu.com/455-assign-cookies/",
      "id": "https://leetcode.innenu.com/455-assign-cookies/",
      "content_html": "<h1 id=\"_455-assign-cookies\"> <a href=\"https://leetcode.com/problems/assign-cookies/\" target=\"_blank\" rel=\"noopener noreferrer\">455. Assign Cookies</a></h1>\n<p>Assume you are an awesome parent and want to give your children some cookies. But, you should give each child at most one cookie.</p>\n<p>Each child <code>i</code> has a greed factor <code>g[i]</code>, which is the minimum size of a cookie that the child will be content with; and each cookie <code>j</code> has a size <code>s[j]</code>. If <code>s[j] &gt;= g[i]</code>, we can assign the cookie <code>j</code> to the child <code>i</code>, and the child <code>i</code> will be content. Your goal is to maximize the number of your content children and output the maximum number.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> g = [1,2,3], s = [1,1]</p>\n<p><strong>Output:</strong> 1</p>\n<p><strong>Explanation:</strong> You have 3 children and 2 cookies. The greed factors of 3 children are 1, 2, 3.\nAnd even though you have 2 cookies, since their size is both 1, you could only make the child whose greed factor is 1 content.\nYou need to output 1.</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> g = [1,2], s = [1,2,3]</p>\n<p><strong>Output:</strong> 2</p>\n<p><strong>Explanation:</strong> You have 2 children and 3 cookies. The greed factors of 2 children are 1, 2.\nYou have 3 cookies and their sizes are big enough to gratify all of the children,\nYou need to output 2.</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>1 &lt;= g.length &lt;= 3 * 104</code></li>\n<li><code>0 &lt;= s.length &lt;= 3 * 104</code></li>\n<li><code>1 &lt;= g[i], s[j] &lt;= 231 - 1</code></li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "Java",
      "url": "https://leetcode.innenu.com/461-hamming-distance/Java/",
      "id": "https://leetcode.innenu.com/461-hamming-distance/Java/",
      "content_html": "<h2 id=\"lizncu\"> lizncu</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span> <span>hammingDistance</span><span>(</span><span>int</span> x<span>,</span> <span>int</span> y<span>)</span> <span>{</span>\n    <span>int</span> count <span>=</span> <span>0</span><span>;</span>\n    <span>if</span> <span>(</span>x <span>==</span> y<span>)</span> <span>{</span>\n      <span>return</span> <span>0</span><span>;</span>\n    <span>}</span>\n    <span>while</span> <span>(</span>x <span>!=</span> <span>0</span> <span>||</span> y <span>!=</span> <span>0</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>x <span>%</span> <span>2</span> <span>!=</span> y <span>%</span> <span>2</span><span>)</span> <span>{</span>\n        count<span>++</span><span>;</span>\n      <span>}</span>\n      x <span>=</span> x <span>/</span> <span>2</span><span>;</span>\n      y <span>=</span> y <span>/</span> <span>2</span><span>;</span>\n    <span>}</span>\n    <span>return</span> count<span>;</span>\n  <span>}</span>\n<span>}</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.807Z",
      "authors": [
        {
          "name": "461. Hamming Distance"
        }
      ],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "lizncu",
      "url": "https://leetcode.innenu.com/461-hamming-distance/lizncu/",
      "id": "https://leetcode.innenu.com/461-hamming-distance/lizncu/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span> <span>hammingDistance</span><span>(</span><span>int</span> x<span>,</span> <span>int</span> y<span>)</span> <span>{</span>\n    <span>int</span> count <span>=</span> <span>0</span><span>;</span>\n    <span>if</span> <span>(</span>x <span>==</span> y<span>)</span> <span>{</span>\n      <span>return</span> <span>0</span><span>;</span>\n    <span>}</span>\n    <span>while</span> <span>(</span>x <span>!=</span> <span>0</span> <span>||</span> y <span>!=</span> <span>0</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>x <span>%</span> <span>2</span> <span>!=</span> y <span>%</span> <span>2</span><span>)</span> <span>{</span>\n        count<span>++</span><span>;</span>\n      <span>}</span>\n      x <span>=</span> x <span>/</span> <span>2</span><span>;</span>\n      y <span>=</span> y <span>/</span> <span>2</span><span>;</span>\n    <span>}</span>\n    <span>return</span> count<span>;</span>\n  <span>}</span>\n<span>}</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.807Z",
      "authors": [
        {
          "name": "461. Hamming Distance"
        }
      ],
      "tags": [
        "lizncu"
      ]
    },
    {
      "title": "461. Hamming Distance",
      "url": "https://leetcode.innenu.com/461-hamming-distance/",
      "id": "https://leetcode.innenu.com/461-hamming-distance/",
      "content_html": "<h1 id=\"_461-hamming-distance\"> <a href=\"https://leetcode-cn.com/problems/hamming-distance/\" target=\"_blank\" rel=\"noopener noreferrer\">461. Hamming Distance</a></h1>\n<p>The Hamming distance between two integers is the number of positions at which the corresponding bits are different.</p>\n<p>Given two integers x and y, calculate the Hamming distance.</p>\n<p>Note:\n0 ≤ x, y &lt; 231.</p>\n<p><strong>Example:</strong></p>\n<p><strong>Input:</strong> x = 1, y = 4</p>\n<p><strong>Output:</strong> 2</p>\n<p><strong>Explanation:</strong>\n1 (0 0 0 1)\n4 (0 1 0 0)\n↑ ↑</p>\n<p>The above arrows point to positions where the corresponding bits are different.</p>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "sqm",
      "url": "https://leetcode.innenu.com/461-hamming-distance/sqm/",
      "id": "https://leetcode.innenu.com/461-hamming-distance/sqm/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>int</span> <span>hammingDistance</span><span>(</span><span>int</span> x<span>,</span> <span>int</span> y<span>)</span> <span>{</span>\n    <span>int</span> d <span>=</span> x <span>^</span> y<span>,</span> c <span>=</span> <span>0</span><span>;</span>\n    <span>while</span> <span>(</span>d<span>)</span> <span>{</span>\n      d <span>=</span> d <span>&amp;</span> <span>(</span>d <span>-</span> <span>1</span><span>)</span><span>;</span>\n      c<span>++</span><span>;</span>\n    <span>}</span>\n    <span>return</span> c<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.808Z",
      "authors": [
        {
          "name": "461. Hamming Distance"
        }
      ],
      "tags": [
        "sqm"
      ]
    },
    {
      "title": "C++",
      "url": "https://leetcode.innenu.com/53-maximum-subarray/C++/",
      "id": "https://leetcode.innenu.com/53-maximum-subarray/C++/",
      "content_html": "<h2 id=\"virgil\"> Virgil</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>\n<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>int</span> <span>maxSubArray</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums<span>)</span> <span>{</span>\n    vector<span>&lt;</span><span>int</span><span>></span> <span>dp</span><span>(</span>nums<span>.</span><span>size</span><span>(</span><span>)</span><span>)</span><span>;</span>\n    dp<span>[</span><span>0</span><span>]</span> <span>=</span> nums<span>[</span><span>0</span><span>]</span><span>;</span>\n    <span>int</span> maxn <span>=</span> dp<span>[</span><span>0</span><span>]</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>1</span><span>;</span> i <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      dp<span>[</span>i<span>]</span> <span>=</span> <span>max</span><span>(</span>dp<span>[</span>i <span>-</span> <span>1</span><span>]</span> <span>+</span> nums<span>[</span>i<span>]</span><span>,</span> nums<span>[</span>i<span>]</span><span>)</span><span>;</span>\n      maxn <span>=</span> <span>max</span><span>(</span>dp<span>[</span>i<span>]</span><span>,</span> maxn<span>)</span><span>;</span>\n    <span>}</span>\n\n    <span>return</span> maxn<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.808Z",
      "authors": [
        {
          "name": "53. Maximum Subarray"
        }
      ],
      "tags": [
        "C++"
      ]
    },
    {
      "title": "Virgil",
      "url": "https://leetcode.innenu.com/53-maximum-subarray/Virgil/",
      "id": "https://leetcode.innenu.com/53-maximum-subarray/Virgil/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>\n<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>int</span> <span>maxSubArray</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums<span>)</span> <span>{</span>\n    vector<span>&lt;</span><span>int</span><span>></span> <span>dp</span><span>(</span>nums<span>.</span><span>size</span><span>(</span><span>)</span><span>)</span><span>;</span>\n    dp<span>[</span><span>0</span><span>]</span> <span>=</span> nums<span>[</span><span>0</span><span>]</span><span>;</span>\n    <span>int</span> maxn <span>=</span> dp<span>[</span><span>0</span><span>]</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>1</span><span>;</span> i <span>&lt;</span> nums<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      dp<span>[</span>i<span>]</span> <span>=</span> <span>max</span><span>(</span>dp<span>[</span>i <span>-</span> <span>1</span><span>]</span> <span>+</span> nums<span>[</span>i<span>]</span><span>,</span> nums<span>[</span>i<span>]</span><span>)</span><span>;</span>\n      maxn <span>=</span> <span>max</span><span>(</span>dp<span>[</span>i<span>]</span><span>,</span> maxn<span>)</span><span>;</span>\n    <span>}</span>\n\n    <span>return</span> maxn<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.809Z",
      "authors": [
        {
          "name": "53. Maximum Subarray"
        }
      ],
      "tags": [
        "Virgil"
      ]
    },
    {
      "title": "53. Maximum Subarray",
      "url": "https://leetcode.innenu.com/53-maximum-subarray/",
      "id": "https://leetcode.innenu.com/53-maximum-subarray/",
      "content_html": "<h1 id=\"_53-maximum-subarray\"> <a href=\"https://leetcode.com/problems/maximum-subarray/\" target=\"_blank\" rel=\"noopener noreferrer\">53. Maximum Subarray</a></h1>\n<p>Given an integer array <code>nums</code>, find the contiguous subarray (containing at least one number) which has the largest sum and return <em>its sum</em>.</p>\n<p><strong>Follow up:</strong> If you have figured out the <code>O(n)</code> solution, try coding another solution using the <strong>divide and conquer</strong> approach, which is more subtle.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> nums = [-2,1,-3,4,-1,2,1,-5,4]</p>\n<p><strong>Output:</strong> 6</p>\n<p><strong>Explanation:</strong> [4,-1,2,1] has the largest sum = 6.</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> nums = [1]</p>\n<p><strong>Output:</strong> 1</p>\n<p><strong>Example 3:</strong></p>\n<p><strong>Input:</strong> nums = [0]</p>\n<p><strong>Output:</strong> 0</p>\n<p><strong>Example 4:</strong></p>\n<p><strong>Input:</strong> nums = [-1]</p>\n<p><strong>Output:</strong> -1</p>\n<p><strong>Example 5:</strong></p>\n<p><strong>Input:</strong> nums = [-2147483647]</p>\n<p><strong>Output:</strong> -2147483647</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>1 &lt;= nums.length &lt;= 2 * 104</code></li>\n<li><code>-231 &lt;= nums[i] &lt;= 231 - 1</code></li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "58. Length of Last Word",
      "url": "https://leetcode.innenu.com/58-uo-xuan-zhuan-zi-fu-chuan-lcof/",
      "id": "https://leetcode.innenu.com/58-uo-xuan-zhuan-zi-fu-chuan-lcof/",
      "content_html": "<h1 id=\"_58-length-of-last-word\"> <a href=\"https://leetcode.com/problems/length-of-last-word/\" target=\"_blank\" rel=\"noopener noreferrer\">58. Length of Last Word</a></h1>\n<p>Given a string <code>s</code> consists of some words separated by spaces, return <em>the length of the last word in the string. If the last word does not exist, return</em> <code>0</code>.</p>\n<p>A <strong>word</strong> is a maximal substring consisting of non-space characters only.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> s = &quot;Hello World&quot;</p>\n<p><strong>Output:</strong> 5</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> s = &quot; &quot;</p>\n<p><strong>Output:</strong> 0</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>1 &lt;= s.length &lt;= 104</code></li>\n<li><code>s</code> consists of only English letters and spaces <code>' '</code>.</li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "C++",
      "url": "https://leetcode.innenu.com/66-plus-one/C++/",
      "id": "https://leetcode.innenu.com/66-plus-one/C++/",
      "content_html": "<h2 id=\"sqm\"> sqm</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  vector<span>&lt;</span><span>int</span><span>></span> <span>plusOne</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> digits<span>)</span> <span>{</span>\n    digits<span>[</span>digits<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>]</span> <span>+=</span> <span>1</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> digits<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>;</span> i <span>></span> <span>0</span><span>;</span> i<span>--</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>digits<span>[</span>i<span>]</span> <span>==</span> <span>10</span><span>)</span> <span>{</span>\n        digits<span>[</span>i <span>-</span> <span>1</span><span>]</span><span>++</span><span>;</span>\n        digits<span>[</span>i<span>]</span> <span>=</span> <span>0</span><span>;</span>\n      <span>}</span>\n    <span>}</span>\n    <span>if</span> <span>(</span>digits<span>[</span><span>0</span><span>]</span> <span>==</span> <span>10</span><span>)</span> <span>{</span>\n      digits<span>[</span><span>0</span><span>]</span> <span>=</span> <span>0</span><span>;</span>\n      digits<span>.</span><span>insert</span><span>(</span>digits<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> <span>1</span><span>)</span><span>;</span>\n    <span>}</span>\n    <span>return</span> digits<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.810Z",
      "authors": [
        {
          "name": "66. Plus One"
        }
      ],
      "tags": [
        "C++"
      ]
    },
    {
      "title": "JavaScript",
      "url": "https://leetcode.innenu.com/66-plus-one/JavaScript/",
      "id": "https://leetcode.innenu.com/66-plus-one/JavaScript/",
      "content_html": "<h2 id=\"mister-hope\"> Mister-Hope</h2>\n<div><pre><code><span>/*\n * Runtime: 76 ms, faster than 74.71% of JavaScript online submissions for Plus One.\n *\n * Memory Usage: 38.9 MB, less than 51.87% of JavaScript online submissions for Plus One.\n */</span>\n\n<span>var</span> <span>plusOne</span> <span>=</span> <span>(</span><span>digits</span><span>)</span> <span>=></span> <span>{</span>\n  <span>let</span> x <span>=</span> digits<span>.</span>length<span>,</span>\n    num<span>;</span>\n  <span>do</span> <span>{</span>\n    x<span>--</span><span>;</span>\n    num <span>=</span> digits<span>[</span>x<span>]</span><span>;</span>\n  <span>}</span> <span>while</span> <span>(</span>num <span>===</span> <span>9</span><span>)</span><span>;</span>\n  digits<span>.</span><span>fill</span><span>(</span><span>0</span><span>,</span> x <span>+</span> <span>1</span><span>)</span><span>;</span>\n  x <span>>=</span> <span>0</span> <span>?</span> <span>(</span>digits<span>[</span>x<span>]</span> <span>=</span> num <span>+</span> <span>1</span><span>)</span> <span>:</span> digits<span>.</span><span>unshift</span><span>(</span><span>1</span><span>)</span><span>;</span>\n  <span>return</span> digits<span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.811Z",
      "authors": [
        {
          "name": "66. Plus One"
        }
      ],
      "tags": [
        "JavaScript"
      ]
    },
    {
      "title": "Mister-Hope",
      "url": "https://leetcode.innenu.com/66-plus-one/Mister-Hope/",
      "id": "https://leetcode.innenu.com/66-plus-one/Mister-Hope/",
      "content_html": "<h2 id=\"javascript\"> JavaScript</h2>\n<div><pre><code><span>/*\n * Runtime: 76 ms, faster than 74.71% of JavaScript online submissions for Plus One.\n *\n * Memory Usage: 38.9 MB, less than 51.87% of JavaScript online submissions for Plus One.\n */</span>\n\n<span>var</span> <span>plusOne</span> <span>=</span> <span>(</span><span>digits</span><span>)</span> <span>=></span> <span>{</span>\n  <span>let</span> x <span>=</span> digits<span>.</span>length<span>,</span>\n    num<span>;</span>\n  <span>do</span> <span>{</span>\n    x<span>--</span><span>;</span>\n    num <span>=</span> digits<span>[</span>x<span>]</span><span>;</span>\n  <span>}</span> <span>while</span> <span>(</span>num <span>===</span> <span>9</span><span>)</span><span>;</span>\n  digits<span>.</span><span>fill</span><span>(</span><span>0</span><span>,</span> x <span>+</span> <span>1</span><span>)</span><span>;</span>\n  x <span>>=</span> <span>0</span> <span>?</span> <span>(</span>digits<span>[</span>x<span>]</span> <span>=</span> num <span>+</span> <span>1</span><span>)</span> <span>:</span> digits<span>.</span><span>unshift</span><span>(</span><span>1</span><span>)</span><span>;</span>\n  <span>return</span> digits<span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div><h2 id=\"typescript\"> TypeScript</h2>\n<div><pre><code><span>/*\n * Runtime: 76 ms, faster than 92.50% of TypeScript online submissions for Plus One.\n *\n * Memory Usage: 39.2 MB, less than 15.00% of TypeScript online submissions for Plus One.\n */</span>\n\n<span>const</span> plusOne <span>=</span> <span>(</span>digits<span>:</span> <span>number</span><span>[</span><span>]</span><span>)</span><span>:</span> <span>number</span><span>[</span><span>]</span> <span>=></span> <span>{</span>\n  <span>let</span> x <span>=</span> digits<span>.</span>length<span>,</span>\n    num<span>;</span>\n  <span>do</span> <span>{</span>\n    x<span>--</span><span>;</span>\n    num <span>=</span> digits<span>[</span>x<span>]</span><span>;</span>\n  <span>}</span> <span>while</span> <span>(</span>num <span>===</span> <span>9</span><span>)</span><span>;</span>\n  digits<span>.</span><span>fill</span><span>(</span><span>0</span><span>,</span> x <span>+</span> <span>1</span><span>)</span><span>;</span>\n  x <span>>=</span> <span>0</span> <span>?</span> <span>(</span>digits<span>[</span>x<span>]</span> <span>=</span> num <span>+</span> <span>1</span><span>)</span> <span>:</span> digits<span>.</span><span>unshift</span><span>(</span><span>1</span><span>)</span><span>;</span>\n  <span>return</span> digits<span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.811Z",
      "authors": [
        {
          "name": "66. Plus One"
        }
      ],
      "tags": [
        "Mister-Hope"
      ]
    },
    {
      "title": "TypeScript",
      "url": "https://leetcode.innenu.com/66-plus-one/TypeScript/",
      "id": "https://leetcode.innenu.com/66-plus-one/TypeScript/",
      "content_html": "<h2 id=\"mister-hope\"> Mister-Hope</h2>\n<div><pre><code><span>/*\n * Runtime: 76 ms, faster than 92.50% of TypeScript online submissions for Plus One.\n *\n * Memory Usage: 39.2 MB, less than 15.00% of TypeScript online submissions for Plus One.\n */</span>\n\n<span>const</span> plusOne <span>=</span> <span>(</span>digits<span>:</span> <span>number</span><span>[</span><span>]</span><span>)</span><span>:</span> <span>number</span><span>[</span><span>]</span> <span>=></span> <span>{</span>\n  <span>let</span> x <span>=</span> digits<span>.</span>length<span>,</span>\n    num<span>;</span>\n  <span>do</span> <span>{</span>\n    x<span>--</span><span>;</span>\n    num <span>=</span> digits<span>[</span>x<span>]</span><span>;</span>\n  <span>}</span> <span>while</span> <span>(</span>num <span>===</span> <span>9</span><span>)</span><span>;</span>\n  digits<span>.</span><span>fill</span><span>(</span><span>0</span><span>,</span> x <span>+</span> <span>1</span><span>)</span><span>;</span>\n  x <span>>=</span> <span>0</span> <span>?</span> <span>(</span>digits<span>[</span>x<span>]</span> <span>=</span> num <span>+</span> <span>1</span><span>)</span> <span>:</span> digits<span>.</span><span>unshift</span><span>(</span><span>1</span><span>)</span><span>;</span>\n  <span>return</span> digits<span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.812Z",
      "authors": [
        {
          "name": "66. Plus One"
        }
      ],
      "tags": [
        "TypeScript"
      ]
    },
    {
      "title": "66. Plus One",
      "url": "https://leetcode.innenu.com/66-plus-one/",
      "id": "https://leetcode.innenu.com/66-plus-one/",
      "content_html": "<h1 id=\"_66-plus-one\"> <a href=\"https://leetcode.com/problems/plus-one/\" target=\"_blank\" rel=\"noopener noreferrer\">66. Plus One</a></h1>\n<p>Given a <strong>non-empty</strong> array of decimal digits representing a non-negative integer, increment one to the integer.</p>\n<p>The digits are stored such that the most significant digit is at the head of the list, and each element in the array contains a single digit.</p>\n<p>You may assume the integer does not contain any leading zero, except the number 0 itself.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> digits = [1,2,3]</p>\n<p><strong>Output:</strong> [1,2,4]</p>\n<p><strong>Explanation:</strong> The array represents the integer 123.</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> digits = [4,3,2,1]</p>\n<p><strong>Output:</strong> [4,3,2,2]</p>\n<p><strong>Explanation:</strong> The array represents the integer 4321.</p>\n<p><strong>Example 3:</strong></p>\n<p><strong>Input:</strong> digits = [0]</p>\n<p><strong>Output:</strong> [1]</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>1 &lt;= digits.length &lt;= 100</code></li>\n<li><code>0 &lt;= digits[i] &lt;= 9</code></li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "sqm",
      "url": "https://leetcode.innenu.com/66-plus-one/sqm/",
      "id": "https://leetcode.innenu.com/66-plus-one/sqm/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  vector<span>&lt;</span><span>int</span><span>></span> <span>plusOne</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> digits<span>)</span> <span>{</span>\n    digits<span>[</span>digits<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>]</span> <span>+=</span> <span>1</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> digits<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>;</span> i <span>></span> <span>0</span><span>;</span> i<span>--</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>digits<span>[</span>i<span>]</span> <span>==</span> <span>10</span><span>)</span> <span>{</span>\n        digits<span>[</span>i <span>-</span> <span>1</span><span>]</span><span>++</span><span>;</span>\n        digits<span>[</span>i<span>]</span> <span>=</span> <span>0</span><span>;</span>\n      <span>}</span>\n    <span>}</span>\n    <span>if</span> <span>(</span>digits<span>[</span><span>0</span><span>]</span> <span>==</span> <span>10</span><span>)</span> <span>{</span>\n      digits<span>[</span><span>0</span><span>]</span> <span>=</span> <span>0</span><span>;</span>\n      digits<span>.</span><span>insert</span><span>(</span>digits<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> <span>1</span><span>)</span><span>;</span>\n    <span>}</span>\n    <span>return</span> digits<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.813Z",
      "authors": [
        {
          "name": "66. Plus One"
        }
      ],
      "tags": [
        "sqm"
      ]
    },
    {
      "title": "JavaScript",
      "url": "https://leetcode.innenu.com/67-add-binary/JavaScript/",
      "id": "https://leetcode.innenu.com/67-add-binary/JavaScript/",
      "content_html": "<h2 id=\"mister-hope\"> Mister-Hope</h2>\n<div><pre><code><span>/*\n * Runtime: 84 ms, faster than 82.80% of JavaScript online submissions for Add Binary.\n *\n * Memory Usage: 38.8 MB, less than 6.01% of JavaScript online submissions for Add Binary.\n */</span>\n\n<span>const</span> <span>addBinary</span> <span>=</span> <span>(</span><span>a<span>,</span> b</span><span>)</span> <span>=></span> <span>(</span><span>BigInt</span><span>(</span><span>\"0b\"</span> <span>+</span> a<span>)</span> <span>+</span> <span>BigInt</span><span>(</span><span>\"0b\"</span> <span>+</span> b<span>)</span><span>)</span><span>.</span><span>toString</span><span>(</span><span>2</span><span>)</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.814Z",
      "authors": [
        {
          "name": "67. Add Binary"
        }
      ],
      "tags": [
        "JavaScript"
      ]
    },
    {
      "title": "Mister-Hope",
      "url": "https://leetcode.innenu.com/67-add-binary/Mister-Hope/",
      "id": "https://leetcode.innenu.com/67-add-binary/Mister-Hope/",
      "content_html": "<h2 id=\"javascript\"> JavaScript</h2>\n<div><pre><code><span>/*\n * Runtime: 84 ms, faster than 82.80% of JavaScript online submissions for Add Binary.\n *\n * Memory Usage: 38.8 MB, less than 6.01% of JavaScript online submissions for Add Binary.\n */</span>\n\n<span>const</span> <span>addBinary</span> <span>=</span> <span>(</span><span>a<span>,</span> b</span><span>)</span> <span>=></span> <span>(</span><span>BigInt</span><span>(</span><span>\"0b\"</span> <span>+</span> a<span>)</span> <span>+</span> <span>BigInt</span><span>(</span><span>\"0b\"</span> <span>+</span> b<span>)</span><span>)</span><span>.</span><span>toString</span><span>(</span><span>2</span><span>)</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h2 id=\"typescript\"> TypeScript</h2>\n<div><pre><code><span>/**\n * Runtime: 84 ms, faster than 100.00% of TypeScript online submissions for Add Binary.\n *\n * Memory Usage: 40.3 MB, less than 6.78% of TypeScript online submissions for Add Binary.\n */</span>\n\n<span>const</span> addBinary <span>=</span> <span>(</span>a<span>:</span> <span>string</span><span>,</span> b<span>:</span> <span>string</span><span>)</span><span>:</span> <span>string</span> <span>=></span>\n  <span>(</span><span>BigInt</span><span>(</span><span>\"0b\"</span> <span>+</span> a<span>)</span> <span>+</span> <span>BigInt</span><span>(</span><span>\"0b\"</span> <span>+</span> b<span>)</span><span>)</span><span>.</span><span>toString</span><span>(</span><span>2</span><span>)</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.814Z",
      "authors": [
        {
          "name": "67. Add Binary"
        }
      ],
      "tags": [
        "Mister-Hope"
      ]
    },
    {
      "title": "TypeScript",
      "url": "https://leetcode.innenu.com/67-add-binary/TypeScript/",
      "id": "https://leetcode.innenu.com/67-add-binary/TypeScript/",
      "content_html": "<h2 id=\"mister-hope\"> Mister-Hope</h2>\n<div><pre><code><span>/**\n * Runtime: 84 ms, faster than 100.00% of TypeScript online submissions for Add Binary.\n *\n * Memory Usage: 40.3 MB, less than 6.78% of TypeScript online submissions for Add Binary.\n */</span>\n\n<span>const</span> addBinary <span>=</span> <span>(</span>a<span>:</span> <span>string</span><span>,</span> b<span>:</span> <span>string</span><span>)</span><span>:</span> <span>string</span> <span>=></span>\n  <span>(</span><span>BigInt</span><span>(</span><span>\"0b\"</span> <span>+</span> a<span>)</span> <span>+</span> <span>BigInt</span><span>(</span><span>\"0b\"</span> <span>+</span> b<span>)</span><span>)</span><span>.</span><span>toString</span><span>(</span><span>2</span><span>)</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.814Z",
      "authors": [
        {
          "name": "67. Add Binary"
        }
      ],
      "tags": [
        "TypeScript"
      ]
    },
    {
      "title": "67. Add Binary",
      "url": "https://leetcode.innenu.com/67-add-binary/",
      "id": "https://leetcode.innenu.com/67-add-binary/",
      "content_html": "<h1 id=\"_67-add-binary\"> <a href=\"https://leetcode.com/problems/add-binary/\" target=\"_blank\" rel=\"noopener noreferrer\">67. Add Binary</a></h1>\n<p>Given two binary strings, return their sum (also a binary string).</p>\n<p>The input strings are both <strong>non-empty</strong> and contains only characters <code>1</code> or <code>0</code>.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> a = &quot;11&quot;, b = &quot;1&quot;</p>\n<p><strong>Output:</strong> &quot;100&quot;</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> a = &quot;1010&quot;, b = &quot;1011&quot;</p>\n<p><strong>Output:</strong> &quot;10101&quot;</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li>Each string consists only of <code>'0'</code> or <code>'1'</code> characters.</li>\n<li><code>1 &lt;= a.length, b.length &lt;= 10^4</code></li>\n<li>Each string is either <code>&quot;0&quot;</code> or doesn't contain any leading zero.</li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "C++",
      "url": "https://leetcode.innenu.com/7-reverse-integer/C++/",
      "id": "https://leetcode.innenu.com/7-reverse-integer/C++/",
      "content_html": "<h2 id=\"virgil\"> Virgil</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>\n<span><span>#</span><span>include</span> <span>&lt;cmath></span></span>\n<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n\n<span>using</span> <span>namespace</span> std<span>;</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>int</span> <span>reverse</span><span>(</span><span>int</span> x<span>)</span> <span>{</span>\n    <span>int</span> num<span>[</span><span>33</span><span>]</span> <span>=</span> <span>{</span><span>0</span><span>}</span><span>;</span>\n    <span>int</span> flag <span>=</span> <span>1</span><span>,</span> i <span>=</span> <span>0</span><span>,</span> m <span>=</span> <span>0</span><span>;</span>\n    <span>long</span> <span>long</span> result <span>=</span> <span>0</span><span>;</span>\n    <span>if</span> <span>(</span>x <span>&lt;</span> <span>0</span><span>)</span> <span>{</span>\n      flag <span>=</span> <span>-</span><span>1</span><span>;</span>\n      x <span>=</span> <span>abs</span><span>(</span>x<span>)</span><span>;</span>\n    <span>}</span>\n    <span>while</span> <span>(</span>x <span>></span> <span>0</span><span>)</span> <span>{</span>\n      num<span>[</span>i<span>]</span> <span>=</span> x <span>%</span> <span>10</span><span>;</span>\n      x <span>/=</span> <span>10</span><span>;</span>\n      i<span>++</span><span>;</span>\n      m<span>++</span><span>;</span>\n    <span>}</span>\n    <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>0</span><span>;</span> j <span>&lt;</span> i<span>;</span> j<span>++</span><span>,</span> m<span>--</span><span>)</span> result <span>+=</span> num<span>[</span>j<span>]</span> <span>*</span> <span>pow</span><span>(</span><span>10</span><span>,</span> m <span>-</span> <span>1</span><span>)</span><span>;</span>\n    <span>if</span> <span>(</span>result <span>*</span> flag <span>></span> <span>2147483647</span> <span>||</span> result <span>*</span> flag <span>&lt;</span> <span>-</span><span>2147483648</span><span>)</span>\n      <span>return</span> <span>0</span><span>;</span>\n    <span>else</span>\n      <span>return</span> result <span>*</span> flag<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br></div></div><h2 id=\"lmy\"> lmy</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>int</span> <span>reverse</span><span>(</span><span>int</span> x<span>)</span> <span>{</span>\n    <span>int</span> tmp <span>=</span> x<span>;</span>\n    <span>int</span> res <span>=</span> <span>0</span><span>;</span>\n    <span>while</span> <span>(</span>tmp<span>)</span> <span>{</span>\n      <span>int</span> pop <span>=</span> tmp <span>%</span> <span>10</span><span>;</span>\n      tmp <span>/=</span> <span>10</span><span>;</span>\n      <span>if</span> <span>(</span>res <span>></span> <span>2147483647</span> <span>/</span> <span>10</span> <span>||</span> <span>(</span>res <span>==</span> <span>2147483647</span> <span>&amp;&amp;</span> pop <span>></span> <span>7</span><span>)</span><span>)</span> <span>return</span> <span>0</span><span>;</span>\n      <span>if</span> <span>(</span>res <span>&lt;</span> <span>-</span><span>2147483647</span> <span>/</span> <span>10</span> <span>||</span> <span>(</span>res <span>==</span> <span>-</span><span>2147483647</span> <span>&amp;&amp;</span> pop <span>&lt;</span> <span>-</span><span>8</span><span>)</span><span>)</span> <span>return</span> <span>0</span><span>;</span>\n      res <span>=</span> res <span>*</span> <span>10</span> <span>+</span> pop<span>;</span>\n    <span>}</span>\n    <span>return</span> res<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div><h2 id=\"sqm\"> sqm</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;cmath></span></span>\n<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>int</span> <span>reverse</span><span>(</span><span>int</span> x<span>)</span> <span>{</span>\n    <span>long</span> sum <span>=</span> <span>0</span><span>;</span>\n    vector<span>&lt;</span><span>int</span><span>></span> p<span>;</span>\n    <span>while</span> <span>(</span><span>abs</span><span>(</span>x<span>)</span> <span>>=</span> <span>1</span><span>)</span> <span>{</span>\n      p<span>.</span><span>push_back</span><span>(</span>x <span>%</span> <span>10</span><span>)</span><span>;</span>\n      x <span>=</span> x <span>/</span> <span>10</span><span>;</span>\n    <span>}</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> p<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      sum <span>=</span> sum <span>+</span> <span>(</span>p<span>[</span>p<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> i <span>-</span> <span>1</span><span>]</span> <span>*</span> <span>pow</span><span>(</span><span>10</span><span>,</span> i<span>)</span><span>)</span><span>;</span>\n      <span>if</span> <span>(</span>sum <span>></span> <span>(</span><span>pow</span><span>(</span><span>2</span><span>,</span> <span>31</span><span>)</span> <span>-</span> <span>1</span><span>)</span> <span>||</span> sum <span>&lt;</span> <span>-</span><span>pow</span><span>(</span><span>2</span><span>,</span> <span>31</span><span>)</span><span>)</span> <span>return</span> <span>0</span><span>;</span>\n    <span>}</span>\n    <span>return</span> sum<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.817Z",
      "authors": [
        {
          "name": "7. Reverse Integer"
        }
      ],
      "tags": [
        "C++"
      ]
    },
    {
      "title": "Java",
      "url": "https://leetcode.innenu.com/7-reverse-integer/Java/",
      "id": "https://leetcode.innenu.com/7-reverse-integer/Java/",
      "content_html": "<h2 id=\"lizncu\"> lizncu</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span> <span>reverse</span><span>(</span><span>int</span> x<span>)</span> <span>{</span>\n    <span>long</span> n <span>=</span> <span>0</span><span>;</span>\n\n    <span>if</span> <span>(</span>x <span>&lt;</span> <span>0</span><span>)</span> <span>{</span>\n      x <span>=</span> <span>-</span>x<span>;</span>\n      <span>while</span> <span>(</span>x <span>!=</span> <span>0</span><span>)</span> <span>{</span>\n        n <span>=</span> x <span>%</span> <span>10</span> <span>+</span> n <span>*</span> <span>10</span><span>;</span>\n        x <span>=</span> x <span>/</span> <span>10</span><span>;</span>\n      <span>}</span>\n      n <span>=</span> <span>-</span>n<span>;</span>\n    <span>}</span> <span>else</span> <span>if</span> <span>(</span>x <span>></span> <span>0</span><span>)</span> <span>{</span>\n      <span>while</span> <span>(</span>x <span>!=</span> <span>0</span><span>)</span> <span>{</span>\n        n <span>=</span> x <span>%</span> <span>10</span> <span>+</span> n <span>*</span> <span>10</span><span>;</span>\n        x <span>=</span> x <span>/</span> <span>10</span><span>;</span>\n      <span>}</span>\n    <span>}</span> <span>else</span> <span>{</span>\n      n <span>=</span> x<span>;</span>\n    <span>}</span>\n    <span>if</span> <span>(</span>n <span>></span> <span>Integer</span><span>.</span>MAX_VALUE <span>||</span> n <span>&lt;</span> <span>Integer</span><span>.</span>MIN_VALUE<span>)</span> <span>{</span>\n      <span>return</span> <span>0</span><span>;</span>\n    <span>}</span> <span>else</span> <span>{</span>\n      <span>return</span> <span>(</span><span>int</span><span>)</span> n<span>;</span>\n    <span>}</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.817Z",
      "authors": [
        {
          "name": "7. Reverse Integer"
        }
      ],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "JavaScript",
      "url": "https://leetcode.innenu.com/7-reverse-integer/JavaScript/",
      "id": "https://leetcode.innenu.com/7-reverse-integer/JavaScript/",
      "content_html": "<h2 id=\"mister-hope\"> Mister-Hope</h2>\n<div><pre><code><span>/**\n * Runtime: 84 ms, faster than 97.73% of JavaScript online submissions for Reverse Integer.\n *\n * Memory Usage: 40.4 MB, less than 19.67% of JavaScript online submissions for Reverse Integer.\n */</span>\n\n<span>const</span> <span>reverse</span> <span>=</span> <span>(</span><span>x</span><span>)</span> <span>=></span> <span>{</span>\n  <span>if</span> <span>(</span>x <span>></span> <span>-</span><span>2147483648</span> <span>&amp;&amp;</span> x <span>&lt;</span> <span>2147483648</span><span>)</span> <span>{</span>\n    <span>let</span> y <span>=</span>\n      x <span>></span> <span>0</span>\n        <span>?</span> <span>Number</span><span>(</span><span>String</span><span>(</span>x<span>)</span><span>.</span><span>split</span><span>(</span><span>\"\"</span><span>)</span><span>.</span><span>reverse</span><span>(</span><span>)</span><span>.</span><span>join</span><span>(</span><span>\"\"</span><span>)</span><span>)</span>\n        <span>:</span> <span>0</span> <span>-</span>\n          <span>Number</span><span>(</span>\n            <span>String</span><span>(</span><span>0</span> <span>-</span> x<span>)</span>\n              <span>.</span><span>split</span><span>(</span><span>\"\"</span><span>)</span>\n              <span>.</span><span>reverse</span><span>(</span><span>)</span>\n              <span>.</span><span>join</span><span>(</span><span>\"\"</span><span>)</span>\n          <span>)</span><span>;</span>\n    <span>return</span> y <span>></span> <span>-</span><span>2147483648</span> <span>&amp;&amp;</span> y <span>&lt;</span> <span>2147483648</span> <span>?</span> y <span>:</span> <span>0</span><span>;</span>\n  <span>}</span>\n  <span>return</span> <span>0</span><span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br></div></div><h3 id=\"_1\"> 1</h3>\n<div><pre><code><span>/*\n * Runtime: 112 ms, faster than 13.44% of JavaScript online submissions for Reverse Integer.\n *\n * Memory Usage: 40.1 MB, less than 19.67% of JavaScript online submissions for Reverse Integer.\n */</span>\n\n<span>const</span> <span>reverse</span> <span>=</span> <span>(</span><span>x</span><span>)</span> <span>=></span> <span>{</span>\n  <span>const</span> result <span>=</span>\n    <span>parseFloat</span><span>(</span>x<span>.</span><span>toString</span><span>(</span><span>)</span><span>.</span><span>split</span><span>(</span><span>\"\"</span><span>)</span><span>.</span><span>reverse</span><span>(</span><span>)</span><span>.</span><span>join</span><span>(</span><span>\"\"</span><span>)</span><span>)</span> <span>*</span> Math<span>.</span><span>sign</span><span>(</span>x<span>)</span><span>;</span>\n\n  <span>if</span> <span>(</span>result <span>&lt;</span> Math<span>.</span><span>pow</span><span>(</span><span>-</span><span>2</span><span>,</span> <span>31</span><span>)</span> <span>||</span> result <span>></span> Math<span>.</span><span>pow</span><span>(</span><span>2</span><span>,</span> <span>31</span><span>)</span><span>)</span> <span>return</span> <span>0</span><span>;</span>\n\n  <span>return</span> result<span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.818Z",
      "authors": [
        {
          "name": "7. Reverse Integer"
        }
      ],
      "tags": [
        "JavaScript"
      ]
    },
    {
      "title": "Mister-Hope",
      "url": "https://leetcode.innenu.com/7-reverse-integer/Mister-Hope/",
      "id": "https://leetcode.innenu.com/7-reverse-integer/Mister-Hope/",
      "content_html": "<h2 id=\"javascript\"> JavaScript</h2>\n<div><pre><code><span>/**\n * Runtime: 84 ms, faster than 97.73% of JavaScript online submissions for Reverse Integer.\n *\n * Memory Usage: 40.4 MB, less than 19.67% of JavaScript online submissions for Reverse Integer.\n */</span>\n\n<span>const</span> <span>reverse</span> <span>=</span> <span>(</span><span>x</span><span>)</span> <span>=></span> <span>{</span>\n  <span>if</span> <span>(</span>x <span>></span> <span>-</span><span>2147483648</span> <span>&amp;&amp;</span> x <span>&lt;</span> <span>2147483648</span><span>)</span> <span>{</span>\n    <span>let</span> y <span>=</span>\n      x <span>></span> <span>0</span>\n        <span>?</span> <span>Number</span><span>(</span><span>String</span><span>(</span>x<span>)</span><span>.</span><span>split</span><span>(</span><span>\"\"</span><span>)</span><span>.</span><span>reverse</span><span>(</span><span>)</span><span>.</span><span>join</span><span>(</span><span>\"\"</span><span>)</span><span>)</span>\n        <span>:</span> <span>0</span> <span>-</span>\n          <span>Number</span><span>(</span>\n            <span>String</span><span>(</span><span>0</span> <span>-</span> x<span>)</span>\n              <span>.</span><span>split</span><span>(</span><span>\"\"</span><span>)</span>\n              <span>.</span><span>reverse</span><span>(</span><span>)</span>\n              <span>.</span><span>join</span><span>(</span><span>\"\"</span><span>)</span>\n          <span>)</span><span>;</span>\n    <span>return</span> y <span>></span> <span>-</span><span>2147483648</span> <span>&amp;&amp;</span> y <span>&lt;</span> <span>2147483648</span> <span>?</span> y <span>:</span> <span>0</span><span>;</span>\n  <span>}</span>\n  <span>return</span> <span>0</span><span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br></div></div><h3 id=\"_1\"> 1</h3>\n<div><pre><code><span>/*\n * Runtime: 112 ms, faster than 13.44% of JavaScript online submissions for Reverse Integer.\n *\n * Memory Usage: 40.1 MB, less than 19.67% of JavaScript online submissions for Reverse Integer.\n */</span>\n\n<span>const</span> <span>reverse</span> <span>=</span> <span>(</span><span>x</span><span>)</span> <span>=></span> <span>{</span>\n  <span>const</span> result <span>=</span>\n    <span>parseFloat</span><span>(</span>x<span>.</span><span>toString</span><span>(</span><span>)</span><span>.</span><span>split</span><span>(</span><span>\"\"</span><span>)</span><span>.</span><span>reverse</span><span>(</span><span>)</span><span>.</span><span>join</span><span>(</span><span>\"\"</span><span>)</span><span>)</span> <span>*</span> Math<span>.</span><span>sign</span><span>(</span>x<span>)</span><span>;</span>\n\n  <span>if</span> <span>(</span>result <span>&lt;</span> Math<span>.</span><span>pow</span><span>(</span><span>-</span><span>2</span><span>,</span> <span>31</span><span>)</span> <span>||</span> result <span>></span> Math<span>.</span><span>pow</span><span>(</span><span>2</span><span>,</span> <span>31</span><span>)</span><span>)</span> <span>return</span> <span>0</span><span>;</span>\n\n  <span>return</span> result<span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div><h2 id=\"typescript\"> TypeScript</h2>\n<div><pre><code><span>/*\n * Runtime: 88 ms, faster than 98.12% of TypeScript online submissions for Reverse Integer.\n *\n * Memory Usage: 40.3 MB, less than 34.59% of TypeScript online submissions for Reverse Integer.\n */</span>\n\n<span>const</span> reverse <span>=</span> <span>(</span>x<span>:</span> <span>number</span><span>)</span><span>:</span> <span>number</span> <span>=></span> <span>{</span>\n  <span>const</span> result <span>=</span>\n    <span>parseFloat</span><span>(</span>x<span>.</span><span>toString</span><span>(</span><span>)</span><span>.</span><span>split</span><span>(</span><span>\"\"</span><span>)</span><span>.</span><span>reverse</span><span>(</span><span>)</span><span>.</span><span>join</span><span>(</span><span>\"\"</span><span>)</span><span>)</span> <span>*</span> Math<span>.</span><span>sign</span><span>(</span>x<span>)</span><span>;</span>\n\n  <span>if</span> <span>(</span>result <span>&lt;</span> Math<span>.</span><span>pow</span><span>(</span><span>-</span><span>2</span><span>,</span> <span>31</span><span>)</span> <span>||</span> result <span>></span> Math<span>.</span><span>pow</span><span>(</span><span>2</span><span>,</span> <span>31</span><span>)</span><span>)</span> <span>return</span> <span>0</span><span>;</span>\n\n  <span>return</span> result<span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.819Z",
      "authors": [
        {
          "name": "7. Reverse Integer"
        }
      ],
      "tags": [
        "Mister-Hope"
      ]
    },
    {
      "title": "TypeScript",
      "url": "https://leetcode.innenu.com/7-reverse-integer/TypeScript/",
      "id": "https://leetcode.innenu.com/7-reverse-integer/TypeScript/",
      "content_html": "<h2 id=\"mister-hope\"> Mister-Hope</h2>\n<div><pre><code><span>/*\n * Runtime: 88 ms, faster than 98.12% of TypeScript online submissions for Reverse Integer.\n *\n * Memory Usage: 40.3 MB, less than 34.59% of TypeScript online submissions for Reverse Integer.\n */</span>\n\n<span>const</span> reverse <span>=</span> <span>(</span>x<span>:</span> <span>number</span><span>)</span><span>:</span> <span>number</span> <span>=></span> <span>{</span>\n  <span>const</span> result <span>=</span>\n    <span>parseFloat</span><span>(</span>x<span>.</span><span>toString</span><span>(</span><span>)</span><span>.</span><span>split</span><span>(</span><span>\"\"</span><span>)</span><span>.</span><span>reverse</span><span>(</span><span>)</span><span>.</span><span>join</span><span>(</span><span>\"\"</span><span>)</span><span>)</span> <span>*</span> Math<span>.</span><span>sign</span><span>(</span>x<span>)</span><span>;</span>\n\n  <span>if</span> <span>(</span>result <span>&lt;</span> Math<span>.</span><span>pow</span><span>(</span><span>-</span><span>2</span><span>,</span> <span>31</span><span>)</span> <span>||</span> result <span>></span> Math<span>.</span><span>pow</span><span>(</span><span>2</span><span>,</span> <span>31</span><span>)</span><span>)</span> <span>return</span> <span>0</span><span>;</span>\n\n  <span>return</span> result<span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.819Z",
      "authors": [
        {
          "name": "7. Reverse Integer"
        }
      ],
      "tags": [
        "TypeScript"
      ]
    },
    {
      "title": "Virgil",
      "url": "https://leetcode.innenu.com/7-reverse-integer/Virgil/",
      "id": "https://leetcode.innenu.com/7-reverse-integer/Virgil/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>\n<span><span>#</span><span>include</span> <span>&lt;cmath></span></span>\n<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n\n<span>using</span> <span>namespace</span> std<span>;</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>int</span> <span>reverse</span><span>(</span><span>int</span> x<span>)</span> <span>{</span>\n    <span>int</span> num<span>[</span><span>33</span><span>]</span> <span>=</span> <span>{</span><span>0</span><span>}</span><span>;</span>\n    <span>int</span> flag <span>=</span> <span>1</span><span>,</span> i <span>=</span> <span>0</span><span>,</span> m <span>=</span> <span>0</span><span>;</span>\n    <span>long</span> <span>long</span> result <span>=</span> <span>0</span><span>;</span>\n    <span>if</span> <span>(</span>x <span>&lt;</span> <span>0</span><span>)</span> <span>{</span>\n      flag <span>=</span> <span>-</span><span>1</span><span>;</span>\n      x <span>=</span> <span>abs</span><span>(</span>x<span>)</span><span>;</span>\n    <span>}</span>\n    <span>while</span> <span>(</span>x <span>></span> <span>0</span><span>)</span> <span>{</span>\n      num<span>[</span>i<span>]</span> <span>=</span> x <span>%</span> <span>10</span><span>;</span>\n      x <span>/=</span> <span>10</span><span>;</span>\n      i<span>++</span><span>;</span>\n      m<span>++</span><span>;</span>\n    <span>}</span>\n    <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>0</span><span>;</span> j <span>&lt;</span> i<span>;</span> j<span>++</span><span>,</span> m<span>--</span><span>)</span> result <span>+=</span> num<span>[</span>j<span>]</span> <span>*</span> <span>pow</span><span>(</span><span>10</span><span>,</span> m <span>-</span> <span>1</span><span>)</span><span>;</span>\n    <span>if</span> <span>(</span>result <span>*</span> flag <span>></span> <span>2147483647</span> <span>||</span> result <span>*</span> flag <span>&lt;</span> <span>-</span><span>2147483648</span><span>)</span>\n      <span>return</span> <span>0</span><span>;</span>\n    <span>else</span>\n      <span>return</span> result <span>*</span> flag<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.821Z",
      "authors": [
        {
          "name": "7. Reverse Integer"
        }
      ],
      "tags": [
        "Virgil"
      ]
    },
    {
      "title": "lizncu",
      "url": "https://leetcode.innenu.com/7-reverse-integer/lizncu/",
      "id": "https://leetcode.innenu.com/7-reverse-integer/lizncu/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span> <span>reverse</span><span>(</span><span>int</span> x<span>)</span> <span>{</span>\n    <span>long</span> n <span>=</span> <span>0</span><span>;</span>\n\n    <span>if</span> <span>(</span>x <span>&lt;</span> <span>0</span><span>)</span> <span>{</span>\n      x <span>=</span> <span>-</span>x<span>;</span>\n      <span>while</span> <span>(</span>x <span>!=</span> <span>0</span><span>)</span> <span>{</span>\n        n <span>=</span> x <span>%</span> <span>10</span> <span>+</span> n <span>*</span> <span>10</span><span>;</span>\n        x <span>=</span> x <span>/</span> <span>10</span><span>;</span>\n      <span>}</span>\n      n <span>=</span> <span>-</span>n<span>;</span>\n    <span>}</span> <span>else</span> <span>if</span> <span>(</span>x <span>></span> <span>0</span><span>)</span> <span>{</span>\n      <span>while</span> <span>(</span>x <span>!=</span> <span>0</span><span>)</span> <span>{</span>\n        n <span>=</span> x <span>%</span> <span>10</span> <span>+</span> n <span>*</span> <span>10</span><span>;</span>\n        x <span>=</span> x <span>/</span> <span>10</span><span>;</span>\n      <span>}</span>\n    <span>}</span> <span>else</span> <span>{</span>\n      n <span>=</span> x<span>;</span>\n    <span>}</span>\n    <span>if</span> <span>(</span>n <span>></span> <span>Integer</span><span>.</span>MAX_VALUE <span>||</span> n <span>&lt;</span> <span>Integer</span><span>.</span>MIN_VALUE<span>)</span> <span>{</span>\n      <span>return</span> <span>0</span><span>;</span>\n    <span>}</span> <span>else</span> <span>{</span>\n      <span>return</span> <span>(</span><span>int</span><span>)</span> n<span>;</span>\n    <span>}</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.821Z",
      "authors": [
        {
          "name": "7. Reverse Integer"
        }
      ],
      "tags": [
        "lizncu"
      ]
    },
    {
      "title": "lmy",
      "url": "https://leetcode.innenu.com/7-reverse-integer/lmy/",
      "id": "https://leetcode.innenu.com/7-reverse-integer/lmy/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>int</span> <span>reverse</span><span>(</span><span>int</span> x<span>)</span> <span>{</span>\n    <span>int</span> tmp <span>=</span> x<span>;</span>\n    <span>int</span> res <span>=</span> <span>0</span><span>;</span>\n    <span>while</span> <span>(</span>tmp<span>)</span> <span>{</span>\n      <span>int</span> pop <span>=</span> tmp <span>%</span> <span>10</span><span>;</span>\n      tmp <span>/=</span> <span>10</span><span>;</span>\n      <span>if</span> <span>(</span>res <span>></span> <span>2147483647</span> <span>/</span> <span>10</span> <span>||</span> <span>(</span>res <span>==</span> <span>2147483647</span> <span>&amp;&amp;</span> pop <span>></span> <span>7</span><span>)</span><span>)</span> <span>return</span> <span>0</span><span>;</span>\n      <span>if</span> <span>(</span>res <span>&lt;</span> <span>-</span><span>2147483647</span> <span>/</span> <span>10</span> <span>||</span> <span>(</span>res <span>==</span> <span>-</span><span>2147483647</span> <span>&amp;&amp;</span> pop <span>&lt;</span> <span>-</span><span>8</span><span>)</span><span>)</span> <span>return</span> <span>0</span><span>;</span>\n      res <span>=</span> res <span>*</span> <span>10</span> <span>+</span> pop<span>;</span>\n    <span>}</span>\n    <span>return</span> res<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.822Z",
      "authors": [
        {
          "name": "7. Reverse Integer"
        }
      ],
      "tags": [
        "lmy"
      ]
    },
    {
      "title": "7. Reverse Integer",
      "url": "https://leetcode.innenu.com/7-reverse-integer/",
      "id": "https://leetcode.innenu.com/7-reverse-integer/",
      "content_html": "<h1 id=\"_7-reverse-integer\"> <a href=\"https://leetcode.com/problems/reverse-integer/\" target=\"_blank\" rel=\"noopener noreferrer\">7. Reverse Integer</a></h1>\n<p>Given a 32-bit signed integer, reverse digits of an integer.</p>\n<p><strong>Note:</strong>\nAssume we are dealing with an environment that could only store integers within the 32-bit signed integer range: [−231, 231 − 1]. For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> x = 123</p>\n<p><strong>Output:</strong> 321</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> x = -123</p>\n<p><strong>Output:</strong> -321</p>\n<p><strong>Example 3:</strong></p>\n<p><strong>Input:</strong> x = 120</p>\n<p><strong>Output:</strong> 21</p>\n<p><strong>Example 4:</strong></p>\n<p><strong>Input:</strong> x = 0</p>\n<p><strong>Output:</strong> 0</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>-231 &lt;= x &lt;= 231 - 1</code></li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "sqm",
      "url": "https://leetcode.innenu.com/7-reverse-integer/sqm/",
      "id": "https://leetcode.innenu.com/7-reverse-integer/sqm/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;cmath></span></span>\n<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>int</span> <span>reverse</span><span>(</span><span>int</span> x<span>)</span> <span>{</span>\n    <span>long</span> sum <span>=</span> <span>0</span><span>;</span>\n    vector<span>&lt;</span><span>int</span><span>></span> p<span>;</span>\n    <span>while</span> <span>(</span><span>abs</span><span>(</span>x<span>)</span> <span>>=</span> <span>1</span><span>)</span> <span>{</span>\n      p<span>.</span><span>push_back</span><span>(</span>x <span>%</span> <span>10</span><span>)</span><span>;</span>\n      x <span>=</span> x <span>/</span> <span>10</span><span>;</span>\n    <span>}</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> p<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      sum <span>=</span> sum <span>+</span> <span>(</span>p<span>[</span>p<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> i <span>-</span> <span>1</span><span>]</span> <span>*</span> <span>pow</span><span>(</span><span>10</span><span>,</span> i<span>)</span><span>)</span><span>;</span>\n      <span>if</span> <span>(</span>sum <span>></span> <span>(</span><span>pow</span><span>(</span><span>2</span><span>,</span> <span>31</span><span>)</span> <span>-</span> <span>1</span><span>)</span> <span>||</span> sum <span>&lt;</span> <span>-</span><span>pow</span><span>(</span><span>2</span><span>,</span> <span>31</span><span>)</span><span>)</span> <span>return</span> <span>0</span><span>;</span>\n    <span>}</span>\n    <span>return</span> sum<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.823Z",
      "authors": [
        {
          "name": "7. Reverse Integer"
        }
      ],
      "tags": [
        "sqm"
      ]
    },
    {
      "title": "C++",
      "url": "https://leetcode.innenu.com/70-climbing-stairs/C++/",
      "id": "https://leetcode.innenu.com/70-climbing-stairs/C++/",
      "content_html": "<h2 id=\"virgil\"> Virgil</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>\n<span><span>#</span><span>include</span> <span>&lt;cmath></span></span>\n<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>int</span> <span>climbStairs</span><span>(</span><span>int</span> n<span>)</span> <span>{</span>\n    <span>int</span> num1 <span>=</span> <span>1</span><span>,</span> num2 <span>=</span> <span>2</span><span>;</span>\n    <span>if</span> <span>(</span>n <span>==</span> <span>1</span><span>)</span>\n      <span>return</span> num1<span>;</span>\n    <span>else</span> <span>if</span> <span>(</span>n <span>==</span> <span>2</span><span>)</span>\n      <span>return</span> num2<span>;</span>\n    <span>else</span> <span>{</span>\n      <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>2</span><span>;</span> i <span>&lt;</span> n <span>-</span> <span>1</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n        num2 <span>+=</span> num1<span>;</span>\n        num1 <span>=</span> num2 <span>-</span> num1<span>;</span>\n      <span>}</span>\n      <span>return</span> num1 <span>+</span> num2<span>;</span>\n    <span>}</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.823Z",
      "authors": [
        {
          "name": "70. Climbing Stairs"
        }
      ],
      "tags": [
        "C++"
      ]
    },
    {
      "title": "Virgil",
      "url": "https://leetcode.innenu.com/70-climbing-stairs/Virgil/",
      "id": "https://leetcode.innenu.com/70-climbing-stairs/Virgil/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>\n<span><span>#</span><span>include</span> <span>&lt;cmath></span></span>\n<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>int</span> <span>climbStairs</span><span>(</span><span>int</span> n<span>)</span> <span>{</span>\n    <span>int</span> num1 <span>=</span> <span>1</span><span>,</span> num2 <span>=</span> <span>2</span><span>;</span>\n    <span>if</span> <span>(</span>n <span>==</span> <span>1</span><span>)</span>\n      <span>return</span> num1<span>;</span>\n    <span>else</span> <span>if</span> <span>(</span>n <span>==</span> <span>2</span><span>)</span>\n      <span>return</span> num2<span>;</span>\n    <span>else</span> <span>{</span>\n      <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>2</span><span>;</span> i <span>&lt;</span> n <span>-</span> <span>1</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n        num2 <span>+=</span> num1<span>;</span>\n        num1 <span>=</span> num2 <span>-</span> num1<span>;</span>\n      <span>}</span>\n      <span>return</span> num1 <span>+</span> num2<span>;</span>\n    <span>}</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.823Z",
      "authors": [
        {
          "name": "70. Climbing Stairs"
        }
      ],
      "tags": [
        "Virgil"
      ]
    },
    {
      "title": "70. Climbing Stairs",
      "url": "https://leetcode.innenu.com/70-climbing-stairs/",
      "id": "https://leetcode.innenu.com/70-climbing-stairs/",
      "content_html": "<h1 id=\"_70-climbing-stairs\"> <a href=\"https://leetcode.com/problems/climbing-stairs/\" target=\"_blank\" rel=\"noopener noreferrer\">70. Climbing Stairs</a></h1>\n<p>You are climbing a stair case. It takes <em>n</em> steps to reach to the top.</p>\n<p>Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> 2</p>\n<p><strong>Output:</strong> 2</p>\n<p><strong>Explanation:</strong> There are two ways to climb to the top.</p>\n<ol>\n<li>1 step + 1 step</li>\n<li>2 steps</li>\n</ol>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> 3</p>\n<p><strong>Output:</strong> 3</p>\n<p><strong>Explanation:</strong> There are three ways to climb to the top.</p>\n<ol>\n<li>1 step + 1 step + 1 step</li>\n<li>1 step + 2 steps</li>\n<li>2 steps + 1 step</li>\n</ol>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>1 &lt;= n &lt;= 45</code></li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "C++",
      "url": "https://leetcode.innenu.com/771-Jewels-and-Stones/C++/",
      "id": "https://leetcode.innenu.com/771-Jewels-and-Stones/C++/",
      "content_html": "<h2 id=\"sqm\"> sqm</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>int</span> <span>numJewelsInStones</span><span>(</span>string J<span>,</span> string S<span>)</span> <span>{</span>\n    <span>int</span> count <span>=</span> <span>0</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> J<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>0</span><span>;</span> j <span>&lt;</span> S<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> j<span>++</span><span>)</span> <span>{</span>\n        <span>if</span> <span>(</span>S<span>[</span>j<span>]</span> <span>==</span> J<span>[</span>i<span>]</span><span>)</span> count<span>++</span><span>;</span>\n      <span>}</span>\n    <span>}</span>\n    <span>return</span> count<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.824Z",
      "authors": [
        {
          "name": "771. Jewels And Stones"
        }
      ],
      "tags": [
        "C++"
      ]
    },
    {
      "title": "Java",
      "url": "https://leetcode.innenu.com/771-Jewels-and-Stones/Java/",
      "id": "https://leetcode.innenu.com/771-Jewels-and-Stones/Java/",
      "content_html": "<h2 id=\"lizncu\"> lizncu</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span> <span>numJewelsInStones</span><span>(</span><span>String</span> <span>J</span><span>,</span> <span>String</span> <span>S</span><span>)</span> <span>{</span>\n    <span>int</span> count <span>=</span> <span>0</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> <span>J</span><span>.</span><span>length</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>0</span><span>;</span> j <span>&lt;</span> <span>S</span><span>.</span><span>length</span><span>(</span><span>)</span><span>;</span> j<span>++</span><span>)</span> <span>{</span>\n        <span>if</span> <span>(</span><span>S</span><span>.</span><span>charAt</span><span>(</span>j<span>)</span> <span>==</span> <span>J</span><span>.</span><span>charAt</span><span>(</span>i<span>)</span><span>)</span> <span>{</span>\n          count<span>++</span><span>;</span>\n        <span>}</span>\n      <span>}</span>\n    <span>}</span>\n\n    <span>return</span> count<span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.825Z",
      "authors": [
        {
          "name": "771. Jewels And Stones"
        }
      ],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "lizncu",
      "url": "https://leetcode.innenu.com/771-Jewels-and-Stones/lizncu/",
      "id": "https://leetcode.innenu.com/771-Jewels-and-Stones/lizncu/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span> <span>numJewelsInStones</span><span>(</span><span>String</span> <span>J</span><span>,</span> <span>String</span> <span>S</span><span>)</span> <span>{</span>\n    <span>int</span> count <span>=</span> <span>0</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> <span>J</span><span>.</span><span>length</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>0</span><span>;</span> j <span>&lt;</span> <span>S</span><span>.</span><span>length</span><span>(</span><span>)</span><span>;</span> j<span>++</span><span>)</span> <span>{</span>\n        <span>if</span> <span>(</span><span>S</span><span>.</span><span>charAt</span><span>(</span>j<span>)</span> <span>==</span> <span>J</span><span>.</span><span>charAt</span><span>(</span>i<span>)</span><span>)</span> <span>{</span>\n          count<span>++</span><span>;</span>\n        <span>}</span>\n      <span>}</span>\n    <span>}</span>\n\n    <span>return</span> count<span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.825Z",
      "authors": [
        {
          "name": "771. Jewels And Stones"
        }
      ],
      "tags": [
        "lizncu"
      ]
    },
    {
      "title": "771. Jewels and Stones",
      "url": "https://leetcode.innenu.com/771-Jewels-and-Stones/",
      "id": "https://leetcode.innenu.com/771-Jewels-and-Stones/",
      "content_html": "<h1 id=\"_771-jewels-and-stones\"> <a href=\"https://leetcode.com/problems/jewels-and-stones/\" target=\"_blank\" rel=\"noopener noreferrer\">771. Jewels and Stones</a></h1>\n<p>You're given strings <code>J</code> representing the types of stones that are jewels, and <code>S</code> representing the stones you have. Each character in <code>S</code> is a type of stone you have. You want to know how many of the stones you have are also jewels.</p>\n<p>The letters in <code>J</code> are guaranteed distinct, and all characters in <code>J</code> and <code>S</code> are letters. Letters are case sensitive, so <code>&quot;a&quot;</code> is considered a different type of stone from <code>&quot;A&quot;</code>.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> J = &quot;aA&quot;, S = &quot;aAAbbbb&quot;</p>\n<p><strong>Output:</strong> 3</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> J = &quot;z&quot;, S = &quot;ZZ&quot;</p>\n<p><strong>Output:</strong> 0</p>\n<p><strong>Note:</strong></p>\n<ul>\n<li><code>S</code> and <code>J</code> will consist of letters and have length at most 50.</li>\n<li>The characters in <code>J</code> are distinct.</li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "sqm",
      "url": "https://leetcode.innenu.com/771-Jewels-and-Stones/sqm/",
      "id": "https://leetcode.innenu.com/771-Jewels-and-Stones/sqm/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>int</span> <span>numJewelsInStones</span><span>(</span>string J<span>,</span> string S<span>)</span> <span>{</span>\n    <span>int</span> count <span>=</span> <span>0</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> J<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>0</span><span>;</span> j <span>&lt;</span> S<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> j<span>++</span><span>)</span> <span>{</span>\n        <span>if</span> <span>(</span>S<span>[</span>j<span>]</span> <span>==</span> J<span>[</span>i<span>]</span><span>)</span> count<span>++</span><span>;</span>\n      <span>}</span>\n    <span>}</span>\n    <span>return</span> count<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.826Z",
      "authors": [
        {
          "name": "771. Jewels And Stones"
        }
      ],
      "tags": [
        "sqm"
      ]
    },
    {
      "title": "C++",
      "url": "https://leetcode.innenu.com/860-Lemonade-Change/C++/",
      "id": "https://leetcode.innenu.com/860-Lemonade-Change/C++/",
      "content_html": "<h2 id=\"lmy\"> lmy</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>bool</span> <span>lemonadeChange</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> bills<span>)</span> <span>{</span>\n    <span>int</span> a <span>=</span> <span>0</span><span>,</span> b <span>=</span> <span>0</span><span>,</span> c <span>=</span> <span>0</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;=</span> bills<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>bills<span>[</span>i<span>]</span> <span>==</span> <span>5</span><span>)</span> a<span>++</span><span>;</span>\n      <span>if</span> <span>(</span>bills<span>[</span>i<span>]</span> <span>==</span> <span>10</span><span>)</span> a<span>--</span><span>;</span>\n      b<span>++</span><span>;</span>\n      <span>if</span> <span>(</span>bills<span>[</span>i<span>]</span> <span>==</span> <span>20</span><span>)</span> <span>{</span>\n        <span>if</span> <span>(</span>a <span>></span> <span>0</span> <span>&amp;&amp;</span> b <span>></span> <span>0</span><span>)</span> <span>{</span>\n          a<span>--</span><span>;</span>\n          b<span>--</span><span>;</span>\n          c<span>++</span><span>;</span>\n        <span>}</span> <span>else</span>\n          a <span>=</span> a <span>-</span> <span>3</span><span>;</span>\n      <span>}</span>\n      <span>if</span> <span>(</span>a <span>&lt;</span> <span>0</span> <span>||</span> b <span>&lt;</span> <span>0</span> <span>||</span> c <span>&lt;</span> <span>0</span><span>)</span> <span>{</span>\n        <span>return</span> <span>false</span><span>;</span>\n        <span>break</span><span>;</span>\n      <span>}</span>\n    <span>}</span>\n    <span>return</span> <span>true</span><span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.826Z",
      "authors": [
        {
          "name": "860. Lemonade Change"
        }
      ],
      "tags": [
        "C++"
      ]
    },
    {
      "title": "Java",
      "url": "https://leetcode.innenu.com/860-Lemonade-Change/Java/",
      "id": "https://leetcode.innenu.com/860-Lemonade-Change/Java/",
      "content_html": "<h2 id=\"lizncu\"> lizncu</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>boolean</span> <span>lemonadeChange</span><span>(</span><span>int</span><span>[</span><span>]</span> bills<span>)</span> <span>{</span>\n    <span>int</span> five <span>=</span> <span>0</span><span>,</span> ten <span>=</span> <span>0</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> bills<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>bills<span>[</span>i<span>]</span> <span>==</span> <span>5</span><span>)</span> <span>{</span>\n        five<span>++</span><span>;</span>\n      <span>}</span> <span>else</span> <span>if</span> <span>(</span>bills<span>[</span>i<span>]</span> <span>==</span> <span>10</span><span>)</span> <span>{</span>\n        five<span>--</span><span>;</span>\n        ten<span>++</span><span>;</span>\n      <span>}</span> <span>else</span> <span>if</span> <span>(</span>bills<span>[</span>i<span>]</span> <span>==</span> <span>20</span><span>)</span> <span>{</span>\n        <span>if</span> <span>(</span>ten <span>==</span> <span>0</span><span>)</span> <span>{</span>\n          five <span>-=</span> <span>3</span><span>;</span>\n        <span>}</span> <span>else</span> <span>{</span>\n          ten<span>--</span><span>;</span>\n          five<span>--</span><span>;</span>\n        <span>}</span>\n      <span>}</span>\n\n      <span>if</span> <span>(</span>ten <span>&lt;</span> <span>0</span> <span>||</span> five <span>&lt;</span> <span>0</span><span>)</span> <span>{</span>\n        <span>return</span> <span>false</span><span>;</span>\n      <span>}</span>\n    <span>}</span>\n\n    <span>return</span> <span>true</span><span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.827Z",
      "authors": [
        {
          "name": "860. Lemonade Change"
        }
      ],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "lizncu",
      "url": "https://leetcode.innenu.com/860-Lemonade-Change/lizncu/",
      "id": "https://leetcode.innenu.com/860-Lemonade-Change/lizncu/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>boolean</span> <span>lemonadeChange</span><span>(</span><span>int</span><span>[</span><span>]</span> bills<span>)</span> <span>{</span>\n    <span>int</span> five <span>=</span> <span>0</span><span>,</span> ten <span>=</span> <span>0</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> bills<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>bills<span>[</span>i<span>]</span> <span>==</span> <span>5</span><span>)</span> <span>{</span>\n        five<span>++</span><span>;</span>\n      <span>}</span> <span>else</span> <span>if</span> <span>(</span>bills<span>[</span>i<span>]</span> <span>==</span> <span>10</span><span>)</span> <span>{</span>\n        five<span>--</span><span>;</span>\n        ten<span>++</span><span>;</span>\n      <span>}</span> <span>else</span> <span>if</span> <span>(</span>bills<span>[</span>i<span>]</span> <span>==</span> <span>20</span><span>)</span> <span>{</span>\n        <span>if</span> <span>(</span>ten <span>==</span> <span>0</span><span>)</span> <span>{</span>\n          five <span>-=</span> <span>3</span><span>;</span>\n        <span>}</span> <span>else</span> <span>{</span>\n          ten<span>--</span><span>;</span>\n          five<span>--</span><span>;</span>\n        <span>}</span>\n      <span>}</span>\n\n      <span>if</span> <span>(</span>ten <span>&lt;</span> <span>0</span> <span>||</span> five <span>&lt;</span> <span>0</span><span>)</span> <span>{</span>\n        <span>return</span> <span>false</span><span>;</span>\n      <span>}</span>\n    <span>}</span>\n\n    <span>return</span> <span>true</span><span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.827Z",
      "authors": [
        {
          "name": "860. Lemonade Change"
        }
      ],
      "tags": [
        "lizncu"
      ]
    },
    {
      "title": "lmy",
      "url": "https://leetcode.innenu.com/860-Lemonade-Change/lmy/",
      "id": "https://leetcode.innenu.com/860-Lemonade-Change/lmy/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>bool</span> <span>lemonadeChange</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> bills<span>)</span> <span>{</span>\n    <span>int</span> a <span>=</span> <span>0</span><span>,</span> b <span>=</span> <span>0</span><span>,</span> c <span>=</span> <span>0</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;=</span> bills<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>bills<span>[</span>i<span>]</span> <span>==</span> <span>5</span><span>)</span> a<span>++</span><span>;</span>\n      <span>if</span> <span>(</span>bills<span>[</span>i<span>]</span> <span>==</span> <span>10</span><span>)</span> a<span>--</span><span>;</span>\n      b<span>++</span><span>;</span>\n      <span>if</span> <span>(</span>bills<span>[</span>i<span>]</span> <span>==</span> <span>20</span><span>)</span> <span>{</span>\n        <span>if</span> <span>(</span>a <span>></span> <span>0</span> <span>&amp;&amp;</span> b <span>></span> <span>0</span><span>)</span> <span>{</span>\n          a<span>--</span><span>;</span>\n          b<span>--</span><span>;</span>\n          c<span>++</span><span>;</span>\n        <span>}</span> <span>else</span>\n          a <span>=</span> a <span>-</span> <span>3</span><span>;</span>\n      <span>}</span>\n      <span>if</span> <span>(</span>a <span>&lt;</span> <span>0</span> <span>||</span> b <span>&lt;</span> <span>0</span> <span>||</span> c <span>&lt;</span> <span>0</span><span>)</span> <span>{</span>\n        <span>return</span> <span>false</span><span>;</span>\n        <span>break</span><span>;</span>\n      <span>}</span>\n    <span>}</span>\n    <span>return</span> <span>true</span><span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.828Z",
      "authors": [
        {
          "name": "860. Lemonade Change"
        }
      ],
      "tags": [
        "lmy"
      ]
    },
    {
      "title": "860. Lemonade Change",
      "url": "https://leetcode.innenu.com/860-Lemonade-Change/",
      "id": "https://leetcode.innenu.com/860-Lemonade-Change/",
      "content_html": "<h1 id=\"_860-lemonade-change\"> <a href=\"https://leetcode.com/problems/lemonade-change/\" target=\"_blank\" rel=\"noopener noreferrer\">860. Lemonade Change</a></h1>\n<p>At a lemonade stand, each lemonade costs <code>$5</code>.</p>\n<p>Customers are standing in a queue to buy from you, and order one at a time (in the order specified by <code>bills</code>).</p>\n<p>Each customer will only buy one lemonade and pay with either a <code>$5</code>, <code>$10</code>, or <code>$20</code> bill. You must provide the correct change to each customer, so that the net transaction is that the customer pays $5.</p>\n<p>Note that you don't have any change in hand at first.</p>\n<p>Return <code>true</code> if and only if you can provide every customer with correct change.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> [5,5,5,10,20]</p>\n<p><strong>Output:</strong> true</p>\n<p><strong>Explanation:</strong></p>\n<p>From the first 3 customers, we collect three $5 bills in order.</p>\n<p>From the fourth customer, we collect a $10 bill and give back a $5.</p>\n<p>From the fifth customer, we give a $10 bill and a $5 bill.</p>\n<p>Since all customers got correct change, we output true.</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> [5,5,10]</p>\n<p><strong>Output:</strong> true</p>\n<p><strong>Example 3:</strong></p>\n<p><strong>Input:</strong> [10,10]</p>\n<p><strong>Output:</strong> false</p>\n<p><strong>Example 4:</strong></p>\n<p><strong>Input:</strong> [5,5,10,10,20]</p>\n<p><strong>Output:</strong> false</p>\n<p><strong>Explanation:</strong></p>\n<p>From the first two customers in order, we collect two $5 bills.</p>\n<p>For the next two customers in order, we collect a $10 bill and give back a $5 bill.</p>\n<p>For the last customer, we can't give change of $15 back because we only have two $10 bills.</p>\n<p>Since not every customer received correct change, the answer is false.</p>\n<p><strong>Note:</strong></p>\n<ul>\n<li><code>0 &lt;= bills.length &lt;= 10000</code></li>\n<li><code>bills[i]</code> will be either <code>5</code>, <code>10</code>, or <code>20</code>.</li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "C++",
      "url": "https://leetcode.innenu.com/867-Transpose-Matrix/C++/",
      "id": "https://leetcode.innenu.com/867-Transpose-Matrix/C++/",
      "content_html": "<h2 id=\"lmy\"> lmy</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  vector<span>&lt;</span>vector<span>&lt;</span><span>int</span><span>>></span> <span>transpose</span><span>(</span>vector<span>&lt;</span>vector<span>&lt;</span><span>int</span><span>>></span><span>&amp;</span> A<span>)</span> <span>{</span>\n    vector<span>&lt;</span>vector<span>&lt;</span><span>int</span><span>>></span> <span>B</span><span>(</span>A<span>[</span><span>0</span><span>]</span><span>.</span><span>size</span><span>(</span><span>)</span><span>,</span> vector<span>&lt;</span><span>int</span><span>></span><span>(</span>A<span>.</span><span>size</span><span>(</span><span>)</span><span>,</span> <span>0</span><span>)</span><span>)</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> A<span>[</span><span>0</span><span>]</span><span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>0</span><span>;</span> j <span>&lt;</span> A<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> j<span>++</span><span>)</span> <span>{</span>\n        B<span>[</span>i<span>]</span><span>[</span>j<span>]</span> <span>=</span> A<span>[</span>j<span>]</span><span>[</span>i<span>]</span><span>;</span>\n      <span>}</span>\n    <span>}</span>\n    <span>return</span> B<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.829Z",
      "authors": [
        {
          "name": "867. Transpose Matrix"
        }
      ],
      "tags": [
        "C++"
      ]
    },
    {
      "title": "Java",
      "url": "https://leetcode.innenu.com/867-Transpose-Matrix/Java/",
      "id": "https://leetcode.innenu.com/867-Transpose-Matrix/Java/",
      "content_html": "<h2 id=\"lizncu\"> lizncu</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span><span>[</span><span>]</span><span>[</span><span>]</span> <span>transpose</span><span>(</span><span>int</span><span>[</span><span>]</span><span>[</span><span>]</span> <span>A</span><span>)</span> <span>{</span>\n    <span>if</span> <span>(</span><span>A</span><span>.</span>length <span>==</span> <span>A</span><span>[</span><span>0</span><span>]</span><span>.</span>length<span>)</span> <span>{</span>\n      <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>1</span><span>;</span> i <span>&lt;</span> <span>A</span><span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n        <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>0</span><span>;</span> j <span>&lt;</span> i<span>;</span> j<span>++</span><span>)</span> <span>{</span>\n          <span>int</span> temp <span>=</span> <span>A</span><span>[</span>i<span>]</span><span>[</span>j<span>]</span><span>;</span>\n          <span>A</span><span>[</span>i<span>]</span><span>[</span>j<span>]</span> <span>=</span> <span>A</span><span>[</span>j<span>]</span><span>[</span>i<span>]</span><span>;</span>\n          <span>A</span><span>[</span>j<span>]</span><span>[</span>i<span>]</span> <span>=</span> temp<span>;</span>\n        <span>}</span>\n      <span>}</span>\n\n      <span>return</span> <span>A</span><span>;</span>\n    <span>}</span>\n\n    <span>else</span> <span>{</span>\n      <span>int</span><span>[</span><span>]</span><span>[</span><span>]</span> <span>B</span> <span>=</span> <span>new</span> <span>int</span><span>[</span><span>A</span><span>[</span><span>0</span><span>]</span><span>.</span>length<span>]</span><span>[</span><span>A</span><span>.</span>length<span>]</span><span>;</span>\n      <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> <span>A</span><span>[</span><span>0</span><span>]</span><span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n        <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>0</span><span>;</span> j <span>&lt;</span> <span>A</span><span>.</span>length<span>;</span> j<span>++</span><span>)</span> <span>{</span>\n          <span>B</span><span>[</span>i<span>]</span><span>[</span>j<span>]</span> <span>=</span> <span>A</span><span>[</span>j<span>]</span><span>[</span>i<span>]</span><span>;</span>\n        <span>}</span>\n      <span>}</span>\n      <span>return</span> <span>B</span><span>;</span>\n    <span>}</span>\n  <span>}</span>\n<span>}</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.830Z",
      "authors": [
        {
          "name": "867. Transpose Matrix"
        }
      ],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "lizncu",
      "url": "https://leetcode.innenu.com/867-Transpose-Matrix/lizncu/",
      "id": "https://leetcode.innenu.com/867-Transpose-Matrix/lizncu/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span><span>[</span><span>]</span><span>[</span><span>]</span> <span>transpose</span><span>(</span><span>int</span><span>[</span><span>]</span><span>[</span><span>]</span> <span>A</span><span>)</span> <span>{</span>\n    <span>if</span> <span>(</span><span>A</span><span>.</span>length <span>==</span> <span>A</span><span>[</span><span>0</span><span>]</span><span>.</span>length<span>)</span> <span>{</span>\n      <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>1</span><span>;</span> i <span>&lt;</span> <span>A</span><span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n        <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>0</span><span>;</span> j <span>&lt;</span> i<span>;</span> j<span>++</span><span>)</span> <span>{</span>\n          <span>int</span> temp <span>=</span> <span>A</span><span>[</span>i<span>]</span><span>[</span>j<span>]</span><span>;</span>\n          <span>A</span><span>[</span>i<span>]</span><span>[</span>j<span>]</span> <span>=</span> <span>A</span><span>[</span>j<span>]</span><span>[</span>i<span>]</span><span>;</span>\n          <span>A</span><span>[</span>j<span>]</span><span>[</span>i<span>]</span> <span>=</span> temp<span>;</span>\n        <span>}</span>\n      <span>}</span>\n\n      <span>return</span> <span>A</span><span>;</span>\n    <span>}</span>\n\n    <span>else</span> <span>{</span>\n      <span>int</span><span>[</span><span>]</span><span>[</span><span>]</span> <span>B</span> <span>=</span> <span>new</span> <span>int</span><span>[</span><span>A</span><span>[</span><span>0</span><span>]</span><span>.</span>length<span>]</span><span>[</span><span>A</span><span>.</span>length<span>]</span><span>;</span>\n      <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> <span>A</span><span>[</span><span>0</span><span>]</span><span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n        <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>0</span><span>;</span> j <span>&lt;</span> <span>A</span><span>.</span>length<span>;</span> j<span>++</span><span>)</span> <span>{</span>\n          <span>B</span><span>[</span>i<span>]</span><span>[</span>j<span>]</span> <span>=</span> <span>A</span><span>[</span>j<span>]</span><span>[</span>i<span>]</span><span>;</span>\n        <span>}</span>\n      <span>}</span>\n      <span>return</span> <span>B</span><span>;</span>\n    <span>}</span>\n  <span>}</span>\n<span>}</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.830Z",
      "authors": [
        {
          "name": "867. Transpose Matrix"
        }
      ],
      "tags": [
        "lizncu"
      ]
    },
    {
      "title": "1518. Water Bottles",
      "url": "https://leetcode.innenu.com/1518-Wate-Bottles/",
      "id": "https://leetcode.innenu.com/1518-Wate-Bottles/",
      "content_html": "<h1 id=\"_1518-water-bottles\"> <a href=\"https://leetcode.com/problems/water-bottles/\" target=\"_blank\" rel=\"noopener noreferrer\">1518. Water Bottles</a></h1>\n<p>Given <code>numBottles</code> full water bottles, you can exchange <code>numExchange</code> empty water bottles for one full water bottle.</p>\n<p>The operation of drinking a full water bottle turns it into an empty bottle.</p>\n<p>Return the <strong>maximum</strong> number of water bottles you can drink.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong><img src=\"https://assets.leetcode.com/uploads/2020/07/01/sample_1_1875.png\" alt=\"LeetCode Image\" /></strong></p>\n<p><strong>Input:</strong> numBottles = 9, numExchange = 3</p>\n<p><strong>Output:</strong> 13</p>\n<p><strong>Explanation:</strong> You can exchange 3 empty bottles to get 1 full water bottle.\nNumber of water bottles you can drink: 9 + 3 + 1 = 13.</p>\n<p><strong>Example 2:</strong></p>\n<p><img src=\"https://assets.leetcode.com/uploads/2020/07/01/sample_2_1875.png\" alt=\"LeetCode Image\" /></p>\n<p><strong>Input:</strong> numBottles = 15, numExchange = 4</p>\n<p><strong>Output:</strong> 19</p>\n<p><strong>Explanation:</strong> You can exchange 4 empty bottles to get 1 full water bottle.\nNumber of water bottles you can drink: 15 + 3 + 1 = 19.</p>\n<p><strong>Example 3:</strong></p>\n<p><strong>Input:</strong> numBottles = 5, numExchange = 5</p>\n<p><strong>Output:</strong> 6</p>\n<p><strong>Example 4:</strong></p>\n<p><strong>Input:</strong> numBottles = 2, numExchange = 3</p>\n<p><strong>Output:</strong> 2</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>1 &lt;= numBottles &lt;= 100</code></li>\n<li><code>2 &lt;= numExchange &lt;= 100</code></li>\n</ul>\n",
      "image": "https://assets.leetcode.com/uploads/2020/07/01/sample_1_1875.png",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "lmy",
      "url": "https://leetcode.innenu.com/867-Transpose-Matrix/lmy/",
      "id": "https://leetcode.innenu.com/867-Transpose-Matrix/lmy/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  vector<span>&lt;</span>vector<span>&lt;</span><span>int</span><span>>></span> <span>transpose</span><span>(</span>vector<span>&lt;</span>vector<span>&lt;</span><span>int</span><span>>></span><span>&amp;</span> A<span>)</span> <span>{</span>\n    vector<span>&lt;</span>vector<span>&lt;</span><span>int</span><span>>></span> <span>B</span><span>(</span>A<span>[</span><span>0</span><span>]</span><span>.</span><span>size</span><span>(</span><span>)</span><span>,</span> vector<span>&lt;</span><span>int</span><span>></span><span>(</span>A<span>.</span><span>size</span><span>(</span><span>)</span><span>,</span> <span>0</span><span>)</span><span>)</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> A<span>[</span><span>0</span><span>]</span><span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>for</span> <span>(</span><span>int</span> j <span>=</span> <span>0</span><span>;</span> j <span>&lt;</span> A<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> j<span>++</span><span>)</span> <span>{</span>\n        B<span>[</span>i<span>]</span><span>[</span>j<span>]</span> <span>=</span> A<span>[</span>j<span>]</span><span>[</span>i<span>]</span><span>;</span>\n      <span>}</span>\n    <span>}</span>\n    <span>return</span> B<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.831Z",
      "authors": [
        {
          "name": "867. Transpose Matrix"
        }
      ],
      "tags": [
        "lmy"
      ]
    },
    {
      "title": "867. Transpose Matrix",
      "url": "https://leetcode.innenu.com/867-Transpose-Matrix/",
      "id": "https://leetcode.innenu.com/867-Transpose-Matrix/",
      "content_html": "<h1 id=\"_867-transpose-matrix\"> <a href=\"https://leetcode.com/problems/transpose-matrix/\" target=\"_blank\" rel=\"noopener noreferrer\">867. Transpose Matrix</a></h1>\n<p>Given a matrix <code>A</code>, return the transpose of <code>A</code>.</p>\n<p>The transpose of a matrix is the matrix flipped over it's main diagonal, switching the row and column indices of the matrix.</p>\n<p><img src=\"https://assets.leetcode.com/uploads/2019/10/20/hint_transpose.png\" alt=\"LeetCode Image\" /></p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> [[1,2,3],[4,5,6],[7,8,9]]</p>\n<p><strong>Output:</strong> [[1,4,7],[2,5,8],[3,6,9]]</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> [[1,2,3],[4,5,6]]</p>\n<p><strong>Output:</strong> [[1,4],[2,5],[3,6]]</p>\n<p><strong>Note:</strong></p>\n<ol>\n<li><code>1 &lt;= A.length &lt;= 1000</code></li>\n<li><code>1 &lt;= A[0].length &lt;= 1000</code></li>\n</ol>\n",
      "image": "https://assets.leetcode.com/uploads/2019/10/20/hint_transpose.png",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "sqm",
      "url": "https://leetcode.innenu.com/88-merge-sorted-array/sqm/",
      "id": "https://leetcode.innenu.com/88-merge-sorted-array/sqm/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>\n<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>void</span> <span>merge</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums1<span>,</span> <span>int</span> m<span>,</span> vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums2<span>,</span> <span>int</span> n<span>)</span> <span>{</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> m<span>;</span> i <span>&lt;</span> m <span>+</span> n<span>;</span> i<span>++</span><span>)</span> nums1<span>[</span>i<span>]</span> <span>=</span> nums2<span>[</span>i <span>-</span> m<span>]</span><span>;</span>\n    <span>sort</span><span>(</span>nums1<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> nums1<span>.</span><span>begin</span><span>(</span><span>)</span> <span>+</span> m <span>+</span> n<span>)</span><span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.832Z",
      "authors": [
        {
          "name": "88. Merge Sorted Array"
        }
      ],
      "tags": [
        "sqm"
      ]
    },
    {
      "title": "88. Merge Sorted Array",
      "url": "https://leetcode.innenu.com/88-merge-sorted-array/",
      "id": "https://leetcode.innenu.com/88-merge-sorted-array/",
      "content_html": "<h1 id=\"_88-merge-sorted-array\"> <a href=\"https://leetcode.com/problems/merge-sorted-array/\" target=\"_blank\" rel=\"noopener noreferrer\">88. Merge Sorted Array</a></h1>\n<p>Given two sorted integer arrays <em>nums1</em> and <em>nums2</em>, merge <em>nums2</em> into <em>nums1</em> as one sorted array.</p>\n<p><strong>Note:</strong></p>\n<ul>\n<li>The number of elements initialized in <em>nums1</em> and <em>nums2</em> are <span><span><i>Not supported content</i></span><span aria-hidden=\"true\"><span><span style=\"height:0.43056em;vertical-align:0em;\"></span><span>m</span></span></span></span> and <span><span><i>Not supported content</i></span><span aria-hidden=\"true\"><span><span style=\"height:0.43056em;vertical-align:0em;\"></span><span>n</span></span></span></span> respectively.</li>\n<li>You may assume that <em>nums1</em> has enough space (size that is <strong>equal</strong> to <span><span><i>Not supported content</i></span><span aria-hidden=\"true\"><span><span style=\"height:0.43056em;vertical-align:0em;\"></span><span>m</span></span></span></span> + <span><span><i>Not supported content</i></span><span aria-hidden=\"true\"><span><span style=\"height:0.43056em;vertical-align:0em;\"></span><span>n</span></span></span></span>) to hold additional elements from <em>nums2</em>.</li>\n</ul>\n<p><strong>Example:</strong></p>\n<p><strong>Input:</strong></p>\n<p>nums1 = [1,2,3,0,0,0], m = 3</p>\n<p>nums2 = [2,5,6], n = 3</p>\n<p><strong>Output:</strong> [1,2,2,3,5,6]</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li>-10<sup>9</sup> &lt;= nums1[i], nums2[i] &lt;= 10<sup>9</sup></li>\n<li><code>nums1.length == m + n</code></li>\n<li><code>nums2.length == n</code></li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "C++",
      "url": "https://leetcode.innenu.com/9-palindrome-number/C++/",
      "id": "https://leetcode.innenu.com/9-palindrome-number/C++/",
      "content_html": "<h2 id=\"virgil\"> Virgil</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>\n<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>bool</span> <span>isPalindrome</span><span>(</span><span>int</span> x<span>)</span> <span>{</span>\n    <span>int</span> a<span>[</span><span>10001</span><span>]</span><span>,</span> cnt <span>=</span> <span>0</span><span>;</span>\n    <span>if</span> <span>(</span><span>!</span>x<span>)</span>\n      <span>return</span> <span>true</span><span>;</span>\n    <span>else</span> <span>if</span> <span>(</span>x <span>&lt;</span> <span>0</span><span>)</span>\n      <span>return</span> <span>false</span><span>;</span>\n    <span>else</span> <span>{</span>\n      <span>while</span> <span>(</span>x <span>></span> <span>0</span><span>)</span> <span>{</span>\n        a<span>[</span>cnt<span>]</span> <span>=</span> x <span>%</span> <span>10</span><span>;</span>\n        x <span>/=</span> <span>10</span><span>;</span>\n        cnt<span>++</span><span>;</span>\n      <span>}</span>\n      <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;=</span> <span>(</span>cnt <span>-</span> <span>1</span><span>)</span> <span>/</span> <span>2</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n        <span>if</span> <span>(</span>a<span>[</span>i<span>]</span> <span>!=</span> a<span>[</span>cnt <span>-</span> i <span>-</span> <span>1</span><span>]</span><span>)</span> <span>return</span> <span>false</span><span>;</span>\n      <span>}</span>\n      <span>return</span> <span>true</span><span>;</span>\n    <span>}</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br></div></div><h2 id=\"lmy\"> lmy</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>bool</span> <span>isPalindrome</span><span>(</span><span>int</span> x<span>)</span> <span>{</span>\n    <span>if</span> <span>(</span>x <span>&lt;</span> <span>0</span> <span>||</span> <span>(</span>x <span>%</span> <span>10</span> <span>==</span> <span>0</span> <span>&amp;&amp;</span> x <span>!=</span> <span>0</span><span>)</span><span>)</span> <span>{</span>\n      <span>return</span> <span>false</span><span>;</span>\n    <span>}</span>\n\n    <span>int</span> n <span>=</span> <span>0</span><span>;</span>\n    <span>while</span> <span>(</span>x <span>></span> n<span>)</span> <span>{</span>\n      n <span>=</span> n <span>*</span> <span>10</span> <span>+</span> x <span>%</span> <span>10</span><span>;</span>\n      x <span>/=</span> <span>10</span><span>;</span>\n    <span>}</span>\n    <span>return</span> x <span>==</span> n <span>||</span> x <span>==</span> n <span>/</span> <span>10</span><span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div><h2 id=\"sqm\"> sqm</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>\n<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;string></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>bool</span> <span>isPalindrome</span><span>(</span><span>int</span> x<span>)</span> <span>{</span>\n    string tmp <span>=</span> <span>to_string</span><span>(</span>x<span>)</span><span>;</span>\n    string tmp2 <span>=</span> tmp<span>;</span>\n    <span>reverse</span><span>(</span>tmp2<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> tmp2<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>\n    <span>if</span> <span>(</span>tmp <span>==</span> tmp2<span>)</span> <span>return</span> <span>true</span><span>;</span>\n    <span>return</span> <span>false</span><span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.835Z",
      "authors": [
        {
          "name": "9. Palindrome Number"
        }
      ],
      "tags": [
        "C++"
      ]
    },
    {
      "title": "Java",
      "url": "https://leetcode.innenu.com/9-palindrome-number/Java/",
      "id": "https://leetcode.innenu.com/9-palindrome-number/Java/",
      "content_html": "<h2 id=\"lizncu\"> lizncu</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>boolean</span> <span>isPalindrome</span><span>(</span><span>int</span> x<span>)</span> <span>{</span>\n    <span>int</span> k <span>=</span> x<span>;</span>\n    <span>int</span> sum <span>=</span> <span>0</span><span>;</span>\n    <span>while</span> <span>(</span>x <span>!=</span> <span>0</span> <span>&amp;&amp;</span> x <span>></span> <span>0</span><span>)</span> <span>{</span>\n      sum <span>=</span> sum <span>*</span> <span>10</span> <span>+</span> x <span>%</span> <span>10</span><span>;</span>\n      x <span>=</span> x <span>/</span> <span>10</span><span>;</span>\n    <span>}</span>\n\n    <span>if</span> <span>(</span>k <span>==</span> sum<span>)</span> <span>{</span>\n      <span>return</span> <span>true</span><span>;</span>\n    <span>}</span>\n    <span>return</span> <span>false</span><span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.835Z",
      "authors": [
        {
          "name": "9. Palindrome Number"
        }
      ],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "JavaScript",
      "url": "https://leetcode.innenu.com/9-palindrome-number/JavaScript/",
      "id": "https://leetcode.innenu.com/9-palindrome-number/JavaScript/",
      "content_html": "<h2 id=\"mister-hope\"> Mister-Hope</h2>\n<div><pre><code><span>/*\n * Runtime: 236 ms, faster than 30.44% of JavaScript online submissions for Palindrome Number.\n *\n * Memory Usage: 47.3 MB, less than 5.10% of JavaScript online submissions for Palindrome Number.\n */</span>\n\n<span>const</span> <span>isPalindrome</span> <span>=</span> <span>(</span><span>x</span><span>)</span> <span>=></span> <span>{</span>\n  <span>let</span> string <span>=</span> <span>String</span><span>(</span>x<span>)</span><span>;</span>\n  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> string<span>.</span>length <span>/</span> <span>2</span><span>;</span> i<span>++</span><span>)</span>\n    <span>if</span> <span>(</span>string<span>[</span>i<span>]</span> <span>!=</span> string<span>[</span>string<span>.</span>length <span>-</span> i <span>-</span> <span>1</span><span>]</span><span>)</span> <span>return</span> <span>false</span><span>;</span>\n  <span>return</span> <span>true</span><span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.835Z",
      "authors": [
        {
          "name": "9. Palindrome Number"
        }
      ],
      "tags": [
        "JavaScript"
      ]
    },
    {
      "title": "Mister-Hope",
      "url": "https://leetcode.innenu.com/9-palindrome-number/Mister-Hope/",
      "id": "https://leetcode.innenu.com/9-palindrome-number/Mister-Hope/",
      "content_html": "<h2 id=\"javascript\"> JavaScript</h2>\n<div><pre><code><span>/*\n * Runtime: 236 ms, faster than 30.44% of JavaScript online submissions for Palindrome Number.\n *\n * Memory Usage: 47.3 MB, less than 5.10% of JavaScript online submissions for Palindrome Number.\n */</span>\n\n<span>const</span> <span>isPalindrome</span> <span>=</span> <span>(</span><span>x</span><span>)</span> <span>=></span> <span>{</span>\n  <span>let</span> string <span>=</span> <span>String</span><span>(</span>x<span>)</span><span>;</span>\n  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> string<span>.</span>length <span>/</span> <span>2</span><span>;</span> i<span>++</span><span>)</span>\n    <span>if</span> <span>(</span>string<span>[</span>i<span>]</span> <span>!=</span> string<span>[</span>string<span>.</span>length <span>-</span> i <span>-</span> <span>1</span><span>]</span><span>)</span> <span>return</span> <span>false</span><span>;</span>\n  <span>return</span> <span>true</span><span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div><h2 id=\"typescript\"> TypeScript</h2>\n<div><pre><code><span>/*\n * Runtime: 216 ms, faster than 77.06% of TypeScript online submissions for Palindrome Number.\n *\n * Memory Usage: 49.6 MB, less than 22.63% of TypeScript online submissions for Palindrome Number.\n */</span>\n\n<span>const</span> isPalindrome <span>=</span> <span>(</span>x<span>:</span> <span>number</span><span>)</span><span>:</span> <span>boolean</span> <span>=></span> <span>{</span>\n  <span>let</span> <span>string</span> <span>=</span> <span>String</span><span>(</span>x<span>)</span><span>;</span>\n  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> <span>string</span><span>.</span>length <span>/</span> <span>2</span><span>;</span> i<span>++</span><span>)</span>\n    <span>if</span> <span>(</span><span>string</span><span>[</span>i<span>]</span> <span>!=</span> <span>string</span><span>[</span><span>string</span><span>.</span>length <span>-</span> i <span>-</span> <span>1</span><span>]</span><span>)</span> <span>return</span> <span>false</span><span>;</span>\n  <span>return</span> <span>true</span><span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.836Z",
      "authors": [
        {
          "name": "9. Palindrome Number"
        }
      ],
      "tags": [
        "Mister-Hope"
      ]
    },
    {
      "title": "TypeScript",
      "url": "https://leetcode.innenu.com/9-palindrome-number/TypeScript/",
      "id": "https://leetcode.innenu.com/9-palindrome-number/TypeScript/",
      "content_html": "<h2 id=\"mister-hope\"> Mister-Hope</h2>\n<div><pre><code><span>/*\n * Runtime: 216 ms, faster than 77.06% of TypeScript online submissions for Palindrome Number.\n *\n * Memory Usage: 49.6 MB, less than 22.63% of TypeScript online submissions for Palindrome Number.\n */</span>\n\n<span>const</span> isPalindrome <span>=</span> <span>(</span>x<span>:</span> <span>number</span><span>)</span><span>:</span> <span>boolean</span> <span>=></span> <span>{</span>\n  <span>let</span> <span>string</span> <span>=</span> <span>String</span><span>(</span>x<span>)</span><span>;</span>\n  <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> <span>string</span><span>.</span>length <span>/</span> <span>2</span><span>;</span> i<span>++</span><span>)</span>\n    <span>if</span> <span>(</span><span>string</span><span>[</span>i<span>]</span> <span>!=</span> <span>string</span><span>[</span><span>string</span><span>.</span>length <span>-</span> i <span>-</span> <span>1</span><span>]</span><span>)</span> <span>return</span> <span>false</span><span>;</span>\n  <span>return</span> <span>true</span><span>;</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.836Z",
      "authors": [
        {
          "name": "9. Palindrome Number"
        }
      ],
      "tags": [
        "TypeScript"
      ]
    },
    {
      "title": "Virgil",
      "url": "https://leetcode.innenu.com/9-palindrome-number/Virgil/",
      "id": "https://leetcode.innenu.com/9-palindrome-number/Virgil/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>\n<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>bool</span> <span>isPalindrome</span><span>(</span><span>int</span> x<span>)</span> <span>{</span>\n    <span>int</span> a<span>[</span><span>10001</span><span>]</span><span>,</span> cnt <span>=</span> <span>0</span><span>;</span>\n    <span>if</span> <span>(</span><span>!</span>x<span>)</span>\n      <span>return</span> <span>true</span><span>;</span>\n    <span>else</span> <span>if</span> <span>(</span>x <span>&lt;</span> <span>0</span><span>)</span>\n      <span>return</span> <span>false</span><span>;</span>\n    <span>else</span> <span>{</span>\n      <span>while</span> <span>(</span>x <span>></span> <span>0</span><span>)</span> <span>{</span>\n        a<span>[</span>cnt<span>]</span> <span>=</span> x <span>%</span> <span>10</span><span>;</span>\n        x <span>/=</span> <span>10</span><span>;</span>\n        cnt<span>++</span><span>;</span>\n      <span>}</span>\n      <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;=</span> <span>(</span>cnt <span>-</span> <span>1</span><span>)</span> <span>/</span> <span>2</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n        <span>if</span> <span>(</span>a<span>[</span>i<span>]</span> <span>!=</span> a<span>[</span>cnt <span>-</span> i <span>-</span> <span>1</span><span>]</span><span>)</span> <span>return</span> <span>false</span><span>;</span>\n      <span>}</span>\n      <span>return</span> <span>true</span><span>;</span>\n    <span>}</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.837Z",
      "authors": [
        {
          "name": "9. Palindrome Number"
        }
      ],
      "tags": [
        "Virgil"
      ]
    },
    {
      "title": "lizncu",
      "url": "https://leetcode.innenu.com/9-palindrome-number/lizncu/",
      "id": "https://leetcode.innenu.com/9-palindrome-number/lizncu/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>boolean</span> <span>isPalindrome</span><span>(</span><span>int</span> x<span>)</span> <span>{</span>\n    <span>int</span> k <span>=</span> x<span>;</span>\n    <span>int</span> sum <span>=</span> <span>0</span><span>;</span>\n    <span>while</span> <span>(</span>x <span>!=</span> <span>0</span> <span>&amp;&amp;</span> x <span>></span> <span>0</span><span>)</span> <span>{</span>\n      sum <span>=</span> sum <span>*</span> <span>10</span> <span>+</span> x <span>%</span> <span>10</span><span>;</span>\n      x <span>=</span> x <span>/</span> <span>10</span><span>;</span>\n    <span>}</span>\n\n    <span>if</span> <span>(</span>k <span>==</span> sum<span>)</span> <span>{</span>\n      <span>return</span> <span>true</span><span>;</span>\n    <span>}</span>\n    <span>return</span> <span>false</span><span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.837Z",
      "authors": [
        {
          "name": "9. Palindrome Number"
        }
      ],
      "tags": [
        "lizncu"
      ]
    },
    {
      "title": "lmy",
      "url": "https://leetcode.innenu.com/9-palindrome-number/lmy/",
      "id": "https://leetcode.innenu.com/9-palindrome-number/lmy/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>bool</span> <span>isPalindrome</span><span>(</span><span>int</span> x<span>)</span> <span>{</span>\n    <span>if</span> <span>(</span>x <span>&lt;</span> <span>0</span> <span>||</span> <span>(</span>x <span>%</span> <span>10</span> <span>==</span> <span>0</span> <span>&amp;&amp;</span> x <span>!=</span> <span>0</span><span>)</span><span>)</span> <span>{</span>\n      <span>return</span> <span>false</span><span>;</span>\n    <span>}</span>\n\n    <span>int</span> n <span>=</span> <span>0</span><span>;</span>\n    <span>while</span> <span>(</span>x <span>></span> n<span>)</span> <span>{</span>\n      n <span>=</span> n <span>*</span> <span>10</span> <span>+</span> x <span>%</span> <span>10</span><span>;</span>\n      x <span>/=</span> <span>10</span><span>;</span>\n    <span>}</span>\n    <span>return</span> x <span>==</span> n <span>||</span> x <span>==</span> n <span>/</span> <span>10</span><span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.838Z",
      "authors": [
        {
          "name": "9. Palindrome Number"
        }
      ],
      "tags": [
        "lmy"
      ]
    },
    {
      "title": "sqm",
      "url": "https://leetcode.innenu.com/9-palindrome-number/sqm/",
      "id": "https://leetcode.innenu.com/9-palindrome-number/sqm/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>\n<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;string></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>bool</span> <span>isPalindrome</span><span>(</span><span>int</span> x<span>)</span> <span>{</span>\n    string tmp <span>=</span> <span>to_string</span><span>(</span>x<span>)</span><span>;</span>\n    string tmp2 <span>=</span> tmp<span>;</span>\n    <span>reverse</span><span>(</span>tmp2<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> tmp2<span>.</span><span>end</span><span>(</span><span>)</span><span>)</span><span>;</span>\n    <span>if</span> <span>(</span>tmp <span>==</span> tmp2<span>)</span> <span>return</span> <span>true</span><span>;</span>\n    <span>return</span> <span>false</span><span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.838Z",
      "authors": [
        {
          "name": "9. Palindrome Number"
        }
      ],
      "tags": [
        "sqm"
      ]
    },
    {
      "title": "C++",
      "url": "https://leetcode.innenu.com/905-Sort-Array-By-Parity/C++/",
      "id": "https://leetcode.innenu.com/905-Sort-Array-By-Parity/C++/",
      "content_html": "<h2 id=\"sqm\"> sqm</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  vector<span>&lt;</span><span>int</span><span>></span> <span>sortArrayByParity</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> A<span>)</span> <span>{</span>\n    <span>int</span> l <span>=</span> <span>0</span><span>,</span> r <span>=</span> A<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>;</span>\n    <span>while</span> <span>(</span>l <span>&lt;</span> r<span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>A<span>[</span>l<span>]</span> <span>%</span> <span>2</span> <span>==</span> <span>0</span><span>)</span>\n        l<span>++</span><span>;</span>\n      <span>else</span>\n        <span>swap</span><span>(</span>A<span>[</span>l<span>]</span><span>,</span> A<span>[</span>r<span>]</span><span>)</span><span>,</span> r<span>--</span><span>;</span>\n    <span>}</span>\n    <span>return</span> A<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.839Z",
      "authors": [
        {
          "name": "905. Sort Array By Parity"
        }
      ],
      "tags": [
        "C++"
      ]
    },
    {
      "title": "9. Palindrome Number",
      "url": "https://leetcode.innenu.com/9-palindrome-number/",
      "id": "https://leetcode.innenu.com/9-palindrome-number/",
      "content_html": "<h1 id=\"_9-palindrome-number\"> <a href=\"https://leetcode.com/problems/palindrome-number/\" target=\"_blank\" rel=\"noopener noreferrer\">9. Palindrome Number</a></h1>\n<p>Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forward.</p>\n<p><strong>Follow up:</strong> Could you solve it without converting the integer to a string?</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> x = 121</p>\n<p><strong>Output:</strong> true</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> x = -121</p>\n<p><strong>Output:</strong> false</p>\n<p><strong>Explanation:</strong> From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.</p>\n<p><strong>Example 3:</strong></p>\n<p><strong>Input:</strong> x = 10</p>\n<p><strong>Output:</strong> false</p>\n<p><strong>Explanation:</strong> Reads 01 from right to left. Therefore it is not a palindrome.</p>\n<p><strong>Example 4:</strong></p>\n<p><strong>Input:</strong> x = -101</p>\n<p><strong>Output:</strong> false</p>\n<h2 id=\"constraints\"> Constraints</h2>\n<ul>\n<li><code>-231 &lt;= x &lt;= 231 - 1</code></li>\n</ul>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "Java",
      "url": "https://leetcode.innenu.com/905-Sort-Array-By-Parity/Java/",
      "id": "https://leetcode.innenu.com/905-Sort-Array-By-Parity/Java/",
      "content_html": "<h2 id=\"lizncu\"> lizncu</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>sortArrayByParity</span><span>(</span><span>int</span><span>[</span><span>]</span> <span>A</span><span>)</span> <span>{</span>\n    <span>int</span><span>[</span><span>]</span> ans <span>=</span> <span>new</span> <span>int</span><span>[</span><span>A</span><span>.</span>length<span>]</span><span>;</span>\n    <span>int</span> front <span>=</span> <span>0</span><span>,</span> rear <span>=</span> <span>A</span><span>.</span>length <span>-</span> <span>1</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> <span>A</span><span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span><span>A</span><span>[</span>i<span>]</span> <span>%</span> <span>2</span> <span>==</span> <span>0</span><span>)</span> <span>{</span>\n        ans<span>[</span>front<span>++</span><span>]</span> <span>=</span> <span>A</span><span>[</span>i<span>]</span><span>;</span>\n      <span>}</span> <span>else</span> <span>{</span>\n        ans<span>[</span>rear<span>--</span><span>]</span> <span>=</span> <span>A</span><span>[</span>i<span>]</span><span>;</span>\n      <span>}</span>\n    <span>}</span>\n\n    <span>return</span> ans<span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.843Z",
      "authors": [
        {
          "name": "905. Sort Array By Parity"
        }
      ],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "lizncu",
      "url": "https://leetcode.innenu.com/905-Sort-Array-By-Parity/lizncu/",
      "id": "https://leetcode.innenu.com/905-Sort-Array-By-Parity/lizncu/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>sortArrayByParity</span><span>(</span><span>int</span><span>[</span><span>]</span> <span>A</span><span>)</span> <span>{</span>\n    <span>int</span><span>[</span><span>]</span> ans <span>=</span> <span>new</span> <span>int</span><span>[</span><span>A</span><span>.</span>length<span>]</span><span>;</span>\n    <span>int</span> front <span>=</span> <span>0</span><span>,</span> rear <span>=</span> <span>A</span><span>.</span>length <span>-</span> <span>1</span><span>;</span>\n\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> <span>A</span><span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span><span>A</span><span>[</span>i<span>]</span> <span>%</span> <span>2</span> <span>==</span> <span>0</span><span>)</span> <span>{</span>\n        ans<span>[</span>front<span>++</span><span>]</span> <span>=</span> <span>A</span><span>[</span>i<span>]</span><span>;</span>\n      <span>}</span> <span>else</span> <span>{</span>\n        ans<span>[</span>rear<span>--</span><span>]</span> <span>=</span> <span>A</span><span>[</span>i<span>]</span><span>;</span>\n      <span>}</span>\n    <span>}</span>\n\n    <span>return</span> ans<span>;</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.843Z",
      "authors": [
        {
          "name": "905. Sort Array By Parity"
        }
      ],
      "tags": [
        "lizncu"
      ]
    },
    {
      "title": "905. Sort Array By Parity",
      "url": "https://leetcode.innenu.com/905-Sort-Array-By-Parity/",
      "id": "https://leetcode.innenu.com/905-Sort-Array-By-Parity/",
      "content_html": "<h1 id=\"_905-sort-array-by-parity\"> <a href=\"https://leetcode.com/problems/sort-array-by-parity/\" target=\"_blank\" rel=\"noopener noreferrer\">905. Sort Array By Parity</a></h1>\n<p>Given an array <code>A</code> of non-negative integers, return an array consisting of all the even elements of <code>A</code>, followed by all the odd elements of <code>A</code>.</p>\n<p>You may return any answer array that satisfies this condition.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> [3,1,2,4]</p>\n<p><strong>Output:</strong> [2,4,3,1]\nThe outputs [4,2,3,1], [2,4,1,3], and [4,2,1,3] would also be accepted.</p>\n<p><strong>Note:</strong></p>\n<ol>\n<li><code>1 &lt;= A.length &lt;= 5000</code></li>\n<li><code>0 &lt;= A[i] &lt;= 5000</code></li>\n</ol>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "sqm",
      "url": "https://leetcode.innenu.com/905-Sort-Array-By-Parity/sqm/",
      "id": "https://leetcode.innenu.com/905-Sort-Array-By-Parity/sqm/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  vector<span>&lt;</span><span>int</span><span>></span> <span>sortArrayByParity</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> A<span>)</span> <span>{</span>\n    <span>int</span> l <span>=</span> <span>0</span><span>,</span> r <span>=</span> A<span>.</span><span>size</span><span>(</span><span>)</span> <span>-</span> <span>1</span><span>;</span>\n    <span>while</span> <span>(</span>l <span>&lt;</span> r<span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>A<span>[</span>l<span>]</span> <span>%</span> <span>2</span> <span>==</span> <span>0</span><span>)</span>\n        l<span>++</span><span>;</span>\n      <span>else</span>\n        <span>swap</span><span>(</span>A<span>[</span>l<span>]</span><span>,</span> A<span>[</span>r<span>]</span><span>)</span><span>,</span> r<span>--</span><span>;</span>\n    <span>}</span>\n    <span>return</span> A<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.844Z",
      "authors": [
        {
          "name": "905. Sort Array By Parity"
        }
      ],
      "tags": [
        "sqm"
      ]
    },
    {
      "title": "C++",
      "url": "https://leetcode.innenu.com/922-Sort-Array-By-Parity-II/C++/",
      "id": "https://leetcode.innenu.com/922-Sort-Array-By-Parity-II/C++/",
      "content_html": "<h2 id=\"sqm\"> sqm</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  vector<span>&lt;</span><span>int</span><span>></span> <span>sortArrayByParityII</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> A<span>)</span> <span>{</span>\n    vector<span>&lt;</span><span>int</span><span>></span> <span>even</span><span>(</span>A<span>.</span><span>size</span><span>(</span><span>)</span> <span>/</span> <span>2</span><span>)</span><span>;</span>\n    vector<span>&lt;</span><span>int</span><span>></span> <span>odd</span><span>(</span>A<span>.</span><span>size</span><span>(</span><span>)</span> <span>/</span> <span>2</span><span>)</span><span>;</span>\n    vector<span>&lt;</span><span>int</span><span>></span> <span>result</span><span>(</span>A<span>.</span><span>size</span><span>(</span><span>)</span><span>)</span><span>;</span>\n    <span>int</span> evenIndex <span>=</span> <span>0</span><span>;</span>\n    <span>int</span> oddIndex <span>=</span> <span>0</span><span>;</span>\n    <span>int</span> resultIndex <span>=</span> <span>0</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> A<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>A<span>[</span>i<span>]</span> <span>%</span> <span>2</span> <span>==</span> <span>0</span><span>)</span>\n        even<span>[</span>evenIndex<span>++</span><span>]</span> <span>=</span> A<span>[</span>i<span>]</span><span>;</span>\n      <span>else</span>\n        odd<span>[</span>oddIndex<span>++</span><span>]</span> <span>=</span> A<span>[</span>i<span>]</span><span>;</span>\n    <span>}</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> oddIndex<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      result<span>[</span>resultIndex<span>++</span><span>]</span> <span>=</span> even<span>[</span>i<span>]</span><span>;</span>\n      result<span>[</span>resultIndex<span>++</span><span>]</span> <span>=</span> odd<span>[</span>i<span>]</span><span>;</span>\n    <span>}</span>\n    <span>return</span> result<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.845Z",
      "authors": [
        {
          "name": "922. Sort Array By Parity Ii"
        }
      ],
      "tags": [
        "C++"
      ]
    },
    {
      "title": "922. Sort Array By Parity II",
      "url": "https://leetcode.innenu.com/922-Sort-Array-By-Parity-II/",
      "id": "https://leetcode.innenu.com/922-Sort-Array-By-Parity-II/",
      "content_html": "<h1 id=\"_922-sort-array-by-parity-ii\"> <a href=\"https://leetcode.com/problems/sort-array-by-parity-ii/\" target=\"_blank\" rel=\"noopener noreferrer\">922. Sort Array By Parity II</a></h1>\n<p>Given an array <code>A</code> of non-negative integers, half of the integers in A are odd, and half of the integers are even.</p>\n<p>Sort the array so that whenever <code>A[i]</code> is odd, <code>i</code> is odd; and whenever <code>A[i]</code> is even, <code>i</code> is even.</p>\n<p>You may return any answer array that satisfies this condition.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> [4,2,5,7]</p>\n<p><strong>Output:</strong> [4,5,2,7]</p>\n<p><strong>Explanation:</strong> [4,7,2,5], [2,5,4,7], [2,7,4,5] would also have been accepted.</p>\n<p><strong>Note:</strong></p>\n<ol>\n<li><code>2 &lt;= A.length &lt;= 20000</code></li>\n<li><code>A.length % 2 == 0</code></li>\n<li><code>0 &lt;= A[i] &lt;= 1000</code></li>\n</ol>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "sqm",
      "url": "https://leetcode.innenu.com/922-Sort-Array-By-Parity-II/sqm/",
      "id": "https://leetcode.innenu.com/922-Sort-Array-By-Parity-II/sqm/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  vector<span>&lt;</span><span>int</span><span>></span> <span>sortArrayByParityII</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> A<span>)</span> <span>{</span>\n    vector<span>&lt;</span><span>int</span><span>></span> <span>even</span><span>(</span>A<span>.</span><span>size</span><span>(</span><span>)</span> <span>/</span> <span>2</span><span>)</span><span>;</span>\n    vector<span>&lt;</span><span>int</span><span>></span> <span>odd</span><span>(</span>A<span>.</span><span>size</span><span>(</span><span>)</span> <span>/</span> <span>2</span><span>)</span><span>;</span>\n    vector<span>&lt;</span><span>int</span><span>></span> <span>result</span><span>(</span>A<span>.</span><span>size</span><span>(</span><span>)</span><span>)</span><span>;</span>\n    <span>int</span> evenIndex <span>=</span> <span>0</span><span>;</span>\n    <span>int</span> oddIndex <span>=</span> <span>0</span><span>;</span>\n    <span>int</span> resultIndex <span>=</span> <span>0</span><span>;</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> A<span>.</span><span>size</span><span>(</span><span>)</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      <span>if</span> <span>(</span>A<span>[</span>i<span>]</span> <span>%</span> <span>2</span> <span>==</span> <span>0</span><span>)</span>\n        even<span>[</span>evenIndex<span>++</span><span>]</span> <span>=</span> A<span>[</span>i<span>]</span><span>;</span>\n      <span>else</span>\n        odd<span>[</span>oddIndex<span>++</span><span>]</span> <span>=</span> A<span>[</span>i<span>]</span><span>;</span>\n    <span>}</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> oddIndex<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n      result<span>[</span>resultIndex<span>++</span><span>]</span> <span>=</span> even<span>[</span>i<span>]</span><span>;</span>\n      result<span>[</span>resultIndex<span>++</span><span>]</span> <span>=</span> odd<span>[</span>i<span>]</span><span>;</span>\n    <span>}</span>\n    <span>return</span> result<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.846Z",
      "authors": [
        {
          "name": "922. Sort Array By Parity Ii"
        }
      ],
      "tags": [
        "sqm"
      ]
    },
    {
      "title": "Java",
      "url": "https://leetcode.innenu.com/977-Squares-of-a-Sorted-Array/Java/",
      "id": "https://leetcode.innenu.com/977-Squares-of-a-Sorted-Array/Java/",
      "content_html": "<h2 id=\"lizncu\"> lizncu</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>sortedSquares</span><span>(</span><span>int</span><span>[</span><span>]</span> <span>A</span><span>)</span> <span>{</span>\n    <span>if</span> <span>(</span><span>A</span><span>[</span><span>0</span><span>]</span> <span>>=</span> <span>0</span><span>)</span> <span>{</span>\n      <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> <span>A</span><span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n        <span>A</span><span>[</span>i<span>]</span> <span>=</span> <span>A</span><span>[</span>i<span>]</span> <span>*</span> <span>A</span><span>[</span>i<span>]</span><span>;</span>\n      <span>}</span>\n      <span>return</span> <span>A</span><span>;</span>\n    <span>}</span>\n\n    <span>else</span> <span>if</span> <span>(</span><span>A</span><span>[</span><span>A</span><span>.</span>length <span>-</span> <span>1</span><span>]</span> <span>&lt;</span> <span>0</span><span>)</span> <span>{</span>\n      <span>int</span><span>[</span><span>]</span> target <span>=</span> <span>new</span> <span>int</span><span>[</span><span>A</span><span>.</span>length<span>]</span><span>;</span>\n      <span>int</span> count <span>=</span> <span>0</span><span>;</span>\n\n      <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>A</span><span>.</span>length <span>-</span> <span>1</span><span>;</span> i <span>>=</span> <span>0</span><span>;</span> i<span>--</span><span>)</span> <span>{</span>\n        target<span>[</span>count<span>]</span> <span>=</span> <span>A</span><span>[</span>i<span>]</span> <span>*</span> <span>A</span><span>[</span>i<span>]</span><span>;</span>\n        count<span>++</span><span>;</span>\n      <span>}</span>\n\n      <span>return</span> target<span>;</span>\n    <span>}</span>\n\n    <span>else</span> <span>{</span>\n      <span>int</span> i <span>=</span> <span>0</span><span>;</span>\n      <span>while</span> <span>(</span><span>!</span><span>(</span><span>A</span><span>[</span>i<span>]</span> <span>&lt;</span> <span>0</span> <span>&amp;&amp;</span> <span>A</span><span>[</span>i <span>+</span> <span>1</span><span>]</span> <span>>=</span> <span>0</span><span>)</span><span>)</span> <span>{</span>\n        i<span>++</span><span>;</span>\n      <span>}</span>\n      <span>int</span> k <span>=</span> i<span>;</span>\n      <span>int</span> j <span>=</span> i <span>+</span> <span>1</span><span>;</span>\n\n      <span>int</span><span>[</span><span>]</span> target <span>=</span> <span>new</span> <span>int</span><span>[</span><span>A</span><span>.</span>length<span>]</span><span>;</span>\n      <span>int</span> count <span>=</span> <span>0</span><span>;</span>\n\n      <span>while</span> <span>(</span>k <span>>=</span> <span>0</span> <span>&amp;&amp;</span> j <span>&lt;</span> <span>A</span><span>.</span>length<span>)</span> <span>{</span>\n        <span>if</span> <span>(</span><span>A</span><span>[</span>k<span>]</span> <span>*</span> <span>A</span><span>[</span>k<span>]</span> <span>></span> <span>A</span><span>[</span>j<span>]</span> <span>*</span> <span>A</span><span>[</span>j<span>]</span><span>)</span> <span>{</span>\n          target<span>[</span>count<span>]</span> <span>=</span> <span>A</span><span>[</span>j<span>]</span> <span>*</span> <span>A</span><span>[</span>j<span>]</span><span>;</span>\n          count<span>++</span><span>;</span>\n          j<span>++</span><span>;</span>\n        <span>}</span> <span>else</span> <span>if</span> <span>(</span><span>A</span><span>[</span>k<span>]</span> <span>*</span> <span>A</span><span>[</span>k<span>]</span> <span>&lt;</span> <span>A</span><span>[</span>j<span>]</span> <span>*</span> <span>A</span><span>[</span>j<span>]</span><span>)</span> <span>{</span>\n          target<span>[</span>count<span>]</span> <span>=</span> <span>A</span><span>[</span>k<span>]</span> <span>*</span> <span>A</span><span>[</span>k<span>]</span><span>;</span>\n          count<span>++</span><span>;</span>\n          k<span>--</span><span>;</span>\n        <span>}</span> <span>else</span> <span>{</span>\n          target<span>[</span>count<span>]</span> <span>=</span> target<span>[</span>count <span>+</span> <span>1</span><span>]</span> <span>=</span> <span>A</span><span>[</span>k<span>]</span> <span>*</span> <span>A</span><span>[</span>k<span>]</span><span>;</span>\n          count <span>+=</span> <span>2</span><span>;</span>\n          k<span>--</span><span>;</span>\n          j<span>++</span><span>;</span>\n        <span>}</span>\n      <span>}</span>\n\n      <span>if</span> <span>(</span>count <span>&lt;=</span> <span>A</span><span>.</span>length <span>-</span> <span>1</span><span>)</span> <span>{</span>\n        <span>while</span> <span>(</span>k <span>>=</span> <span>0</span><span>)</span> <span>{</span>\n          target<span>[</span>count<span>]</span> <span>=</span> <span>A</span><span>[</span>k<span>]</span> <span>*</span> <span>A</span><span>[</span>k<span>]</span><span>;</span>\n          count<span>++</span><span>;</span>\n          k<span>--</span><span>;</span>\n        <span>}</span>\n        <span>while</span> <span>(</span>j <span>&lt;</span> <span>A</span><span>.</span>length<span>)</span> <span>{</span>\n          target<span>[</span>count<span>]</span> <span>=</span> <span>A</span><span>[</span>j<span>]</span> <span>*</span> <span>A</span><span>[</span>j<span>]</span><span>;</span>\n          count<span>++</span><span>;</span>\n          j<span>++</span><span>;</span>\n        <span>}</span>\n\n        <span>return</span> target<span>;</span>\n      <span>}</span>\n\n      <span>return</span> target<span>;</span>\n    <span>}</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br><span>65</span><br><span>66</span><br><span>67</span><br><span>68</span><br><span>69</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.847Z",
      "authors": [
        {
          "name": "977. Squares of a Sorted Array"
        }
      ],
      "tags": [
        "Java"
      ]
    },
    {
      "title": "977. Squares of a Sorted Array",
      "url": "https://leetcode.innenu.com/977-Squares-of-a-Sorted-Array/",
      "id": "https://leetcode.innenu.com/977-Squares-of-a-Sorted-Array/",
      "content_html": "<h1 id=\"_977-squares-of-a-sorted-array\"> <a href=\"https://leetcode.com/problems/squares-of-a-sorted-array/\" target=\"_blank\" rel=\"noopener noreferrer\">977. Squares of a Sorted Array</a></h1>\n<p>Given an array of integers <code>A</code> sorted in non-decreasing order, return an array of the squares of each number, also in sorted non-decreasing order.</p>\n<p><strong>Example 1:</strong></p>\n<p><strong>Input:</strong> [-4,-1,0,3,10]</p>\n<p><strong>Output:</strong> [0,1,9,16,100]</p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> [-7,-3,2,3,11]</p>\n<p><strong>Output:</strong> [4,9,9,49,121]</p>\n<p><strong>Note:</strong></p>\n<ol>\n<li><code>1 &lt;= A.length &lt;= 10000</code></li>\n<li><code>-10000 &lt;= A[i] &lt;= 10000</code></li>\n<li><code>A</code> is sorted in non-decreasing order.</li>\n</ol>\n",
      "date_published": "2020-11-30T08:39:20.000Z",
      "date_modified": "2020-11-30T08:39:20.000Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "lizncu",
      "url": "https://leetcode.innenu.com/977-Squares-of-a-Sorted-Array/lizncu/",
      "id": "https://leetcode.innenu.com/977-Squares-of-a-Sorted-Array/lizncu/",
      "content_html": "<h2 id=\"java\"> Java</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n  <span>public</span> <span>int</span><span>[</span><span>]</span> <span>sortedSquares</span><span>(</span><span>int</span><span>[</span><span>]</span> <span>A</span><span>)</span> <span>{</span>\n    <span>if</span> <span>(</span><span>A</span><span>[</span><span>0</span><span>]</span> <span>>=</span> <span>0</span><span>)</span> <span>{</span>\n      <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> <span>A</span><span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>\n        <span>A</span><span>[</span>i<span>]</span> <span>=</span> <span>A</span><span>[</span>i<span>]</span> <span>*</span> <span>A</span><span>[</span>i<span>]</span><span>;</span>\n      <span>}</span>\n      <span>return</span> <span>A</span><span>;</span>\n    <span>}</span>\n\n    <span>else</span> <span>if</span> <span>(</span><span>A</span><span>[</span><span>A</span><span>.</span>length <span>-</span> <span>1</span><span>]</span> <span>&lt;</span> <span>0</span><span>)</span> <span>{</span>\n      <span>int</span><span>[</span><span>]</span> target <span>=</span> <span>new</span> <span>int</span><span>[</span><span>A</span><span>.</span>length<span>]</span><span>;</span>\n      <span>int</span> count <span>=</span> <span>0</span><span>;</span>\n\n      <span>for</span> <span>(</span><span>int</span> i <span>=</span> <span>A</span><span>.</span>length <span>-</span> <span>1</span><span>;</span> i <span>>=</span> <span>0</span><span>;</span> i<span>--</span><span>)</span> <span>{</span>\n        target<span>[</span>count<span>]</span> <span>=</span> <span>A</span><span>[</span>i<span>]</span> <span>*</span> <span>A</span><span>[</span>i<span>]</span><span>;</span>\n        count<span>++</span><span>;</span>\n      <span>}</span>\n\n      <span>return</span> target<span>;</span>\n    <span>}</span>\n\n    <span>else</span> <span>{</span>\n      <span>int</span> i <span>=</span> <span>0</span><span>;</span>\n      <span>while</span> <span>(</span><span>!</span><span>(</span><span>A</span><span>[</span>i<span>]</span> <span>&lt;</span> <span>0</span> <span>&amp;&amp;</span> <span>A</span><span>[</span>i <span>+</span> <span>1</span><span>]</span> <span>>=</span> <span>0</span><span>)</span><span>)</span> <span>{</span>\n        i<span>++</span><span>;</span>\n      <span>}</span>\n      <span>int</span> k <span>=</span> i<span>;</span>\n      <span>int</span> j <span>=</span> i <span>+</span> <span>1</span><span>;</span>\n\n      <span>int</span><span>[</span><span>]</span> target <span>=</span> <span>new</span> <span>int</span><span>[</span><span>A</span><span>.</span>length<span>]</span><span>;</span>\n      <span>int</span> count <span>=</span> <span>0</span><span>;</span>\n\n      <span>while</span> <span>(</span>k <span>>=</span> <span>0</span> <span>&amp;&amp;</span> j <span>&lt;</span> <span>A</span><span>.</span>length<span>)</span> <span>{</span>\n        <span>if</span> <span>(</span><span>A</span><span>[</span>k<span>]</span> <span>*</span> <span>A</span><span>[</span>k<span>]</span> <span>></span> <span>A</span><span>[</span>j<span>]</span> <span>*</span> <span>A</span><span>[</span>j<span>]</span><span>)</span> <span>{</span>\n          target<span>[</span>count<span>]</span> <span>=</span> <span>A</span><span>[</span>j<span>]</span> <span>*</span> <span>A</span><span>[</span>j<span>]</span><span>;</span>\n          count<span>++</span><span>;</span>\n          j<span>++</span><span>;</span>\n        <span>}</span> <span>else</span> <span>if</span> <span>(</span><span>A</span><span>[</span>k<span>]</span> <span>*</span> <span>A</span><span>[</span>k<span>]</span> <span>&lt;</span> <span>A</span><span>[</span>j<span>]</span> <span>*</span> <span>A</span><span>[</span>j<span>]</span><span>)</span> <span>{</span>\n          target<span>[</span>count<span>]</span> <span>=</span> <span>A</span><span>[</span>k<span>]</span> <span>*</span> <span>A</span><span>[</span>k<span>]</span><span>;</span>\n          count<span>++</span><span>;</span>\n          k<span>--</span><span>;</span>\n        <span>}</span> <span>else</span> <span>{</span>\n          target<span>[</span>count<span>]</span> <span>=</span> target<span>[</span>count <span>+</span> <span>1</span><span>]</span> <span>=</span> <span>A</span><span>[</span>k<span>]</span> <span>*</span> <span>A</span><span>[</span>k<span>]</span><span>;</span>\n          count <span>+=</span> <span>2</span><span>;</span>\n          k<span>--</span><span>;</span>\n          j<span>++</span><span>;</span>\n        <span>}</span>\n      <span>}</span>\n\n      <span>if</span> <span>(</span>count <span>&lt;=</span> <span>A</span><span>.</span>length <span>-</span> <span>1</span><span>)</span> <span>{</span>\n        <span>while</span> <span>(</span>k <span>>=</span> <span>0</span><span>)</span> <span>{</span>\n          target<span>[</span>count<span>]</span> <span>=</span> <span>A</span><span>[</span>k<span>]</span> <span>*</span> <span>A</span><span>[</span>k<span>]</span><span>;</span>\n          count<span>++</span><span>;</span>\n          k<span>--</span><span>;</span>\n        <span>}</span>\n        <span>while</span> <span>(</span>j <span>&lt;</span> <span>A</span><span>.</span>length<span>)</span> <span>{</span>\n          target<span>[</span>count<span>]</span> <span>=</span> <span>A</span><span>[</span>j<span>]</span> <span>*</span> <span>A</span><span>[</span>j<span>]</span><span>;</span>\n          count<span>++</span><span>;</span>\n          j<span>++</span><span>;</span>\n        <span>}</span>\n\n        <span>return</span> target<span>;</span>\n      <span>}</span>\n\n      <span>return</span> target<span>;</span>\n    <span>}</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br><span>65</span><br><span>66</span><br><span>67</span><br><span>68</span><br><span>69</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.848Z",
      "authors": [
        {
          "name": "977. Squares of a Sorted Array"
        }
      ],
      "tags": [
        "lizncu"
      ]
    },
    {
      "title": "题目列表",
      "url": "https://leetcode.innenu.com/",
      "id": "https://leetcode.innenu.com/",
      "content_html": "<ul>\n<li>\n<p><a href=\"./1-two-sum/\">1. Two Sum</a></p>\n</li>\n<li>\n<p><a href=\"./2-add-two-numbers/\">2. Add Two Numbers</a></p>\n</li>\n<li>\n<p><a href=\"./4-median-of-two-sorted-arrays/\">4. Median of Two Sorted Arrays</a></p>\n</li>\n<li>\n<p><a href=\"./7-reverse-integer/\">7. Reverse Integer</a></p>\n</li>\n<li>\n<p><a href=\"./9-palindrome-number/\">9. Palindrome Number</a></p>\n</li>\n<li>\n<p><a href=\"./12-integer-to-roman/\">12. Integer to Roman</a></p>\n</li>\n<li>\n<p><a href=\"./13-roman-to-integer/\">13. Roman to Integer</a></p>\n</li>\n<li>\n<p><a href=\"./15-3sum/\">15. 3sum</a></p>\n</li>\n<li>\n<p><a href=\"./43-multiply-strings/\">43. Multiply Strings</a></p>\n</li>\n<li>\n<p><a href=\"./53-maximum-subarray/\">53. Maximum Subarray</a></p>\n</li>\n<li>\n<p><a href=\"./58-uo-xuan-zhuan-zi-fu-chuan-lcof/\">58. Uo Xuan Zhuan Zi Fu Chuan Lcof</a></p>\n</li>\n<li>\n<p><a href=\"./66-plus-one/\">66. Plus One</a></p>\n</li>\n<li>\n<p><a href=\"./67-add-binary/\">67. Add Binary</a></p>\n</li>\n<li>\n<p><a href=\"./70-climbing-stairs/\">70. Climbing Stairs</a></p>\n</li>\n<li>\n<p><a href=\"./88-merge-sorted-array/\">88. Merge Sorted Array</a></p>\n</li>\n<li>\n<p><a href=\"./104-Maximum-Depth-Of-Binary-Tree/\">104. Maximum Depth Of Binary Tree</a></p>\n</li>\n<li>\n<p><a href=\"./122-best-time-to-buy-and-sell-stock-ii/\">122. Best Time to Buy And Sell Stock Ii</a></p>\n</li>\n<li>\n<p><a href=\"./136-Single-Number/\">136. Single Number</a></p>\n</li>\n<li>\n<p><a href=\"./167-two-sum-ii-input-array-is-sorted/\">167. Two Sum Ii Input Array Is Sorted</a></p>\n</li>\n<li>\n<p><a href=\"./198-house-robbe/\">198. House Robbe</a></p>\n</li>\n<li>\n<p><a href=\"./226-invert-binary-tree/\">226. Invert Binary Tree</a></p>\n</li>\n<li>\n<p><a href=\"./237-Delete-Node-in-a-Linked-List/\">237. Delete Node in a Linked List</a></p>\n</li>\n<li>\n<p><a href=\"./242-valid-anagram/\">242. Valid Anagram</a></p>\n</li>\n<li>\n<p><a href=\"./268-Missing-Number/\">268. Missing Number</a></p>\n</li>\n<li>\n<p><a href=\"./283-Move-Zeroes/\">283. Move Zeroes</a></p>\n</li>\n<li>\n<p><a href=\"./292-Nim-Game/\">292. Nim Game</a></p>\n</li>\n<li>\n<p><a href=\"./344-Reverse-String/\">344. Reverse String</a></p>\n</li>\n<li>\n<p><a href=\"./371-sum-of-two-integers/\">371. Sum of Two Integers</a></p>\n</li>\n<li>\n<p><a href=\"./387-First-Unique-Character-in-a-String/\">387. First Unique Character in a String</a></p>\n</li>\n<li>\n<p><a href=\"./389-find-the-difference/\">389. Find the Difference</a></p>\n</li>\n<li>\n<p><a href=\"./415-add-strings/\">415. Add Strings</a></p>\n</li>\n<li>\n<p><a href=\"./455-assign-cookies/\">455. Assign Cookies</a></p>\n</li>\n<li>\n<p><a href=\"./461-hamming-distance/\">461. Hamming Distance</a></p>\n</li>\n<li>\n<p><a href=\"./771-Jewels-and-Stones/\">771. Jewels And Stones</a></p>\n</li>\n<li>\n<p><a href=\"./860-Lemonade-Change/\">860. Lemonade Change</a></p>\n</li>\n<li>\n<p><a href=\"./867-Transpose-Matrix/\">867. Transpose Matrix</a></p>\n</li>\n<li>\n<p><a href=\"./905-Sort-Array-By-Parity/\">905. Sort Array By Parity</a></p>\n</li>\n<li>\n<p><a href=\"./922-Sort-Array-By-Parity-II/\">922. Sort Array By Parity Ii</a></p>\n</li>\n<li>\n<p><a href=\"./977-Squares-of-a-Sorted-Array/\">977. Squares of a Sorted Array</a></p>\n</li>\n<li>\n<p><a href=\"./1025-divisor-game/\">1025. Divisor Game</a></p>\n</li>\n<li>\n<p><a href=\"./1122-Relative-Sort-Array/\">1122. Relative Sort Array</a></p>\n</li>\n<li>\n<p><a href=\"./1221-Split-a-String-in-Balanced-Strings/\">1221. Split a String in Balanced Strings</a></p>\n</li>\n<li>\n<p><a href=\"./1281-Subtract-the-Product-and-Sum-of-Digits-of-an-Integer/\">1281. Subtract the Product And Sum of Digits of An Integer</a></p>\n</li>\n<li>\n<p><a href=\"./1295-Find-Numbers-with-Even-Number-of-Digits/\">1295. Find Numbers with Even Number of Digits</a></p>\n</li>\n<li>\n<p><a href=\"./1299-Replace-Elements-with-Greatest-Element-on-Right-Side/\">1299. Replace Elements with Greatest Element on Right Side</a></p>\n</li>\n<li>\n<p><a href=\"./1313-Decompress-Run-Length-Encoded-List/\">1313. Decompress Run Length Encoded List</a></p>\n</li>\n<li>\n<p><a href=\"./1317-Convert-Integer-to-the-Sum-of-Two-No-Zero-Integers/\">1317. Convert Integer to the Sum of Two No Zero Integers</a></p>\n</li>\n<li>\n<p><a href=\"./1323-Maximum-69-Number/\">1323. Maximum 69 Number</a></p>\n</li>\n<li>\n<p><a href=\"./1342-Number-of-Steps-to-Reduce-a-Number-to-Zero/\">1342. Number of Steps to Reduce a Number to Zero</a></p>\n</li>\n<li>\n<p><a href=\"./1365-How-Many-Numbers-Are-Smaller-Than-the-Current-Number/\">1365. How Many Numbers Are Smaller Than the Current Number</a></p>\n</li>\n<li>\n<p><a href=\"./1389-Create-Target-Array-in-the-Given-Order/\">1389. Create Target Array in the Given Order</a></p>\n</li>\n<li>\n<p><a href=\"./1431-Kids-With-the-Greatest-Number-of-Candies/\">1431. Kids With the Greatest Number of Candies</a></p>\n</li>\n<li>\n<p><a href=\"./1450-Number-of-Students-Doing-Homework-at-a-Given-Time/\">1450. Number of Students Doing Homework at a Given Time</a></p>\n</li>\n<li>\n<p><a href=\"./1470-Shuffle-the-Array/\">1470. Shuffle the Array</a></p>\n</li>\n<li>\n<p><a href=\"./1480-Running-Sum-of-1d-Array/\">1480. Running Sum of 1d Array</a></p>\n</li>\n<li>\n<p><a href=\"./1486-XOR-Operation-in-an-Array/\">1486. Xor Operation in An Array</a></p>\n</li>\n<li>\n<p><a href=\"./1491-average-salary-excluding-the-minimum-and-maximum-salary/\">1491. Average Salary Excluding the Minimum And Maximum Salary</a></p>\n</li>\n<li>\n<p><a href=\"./1502-can-make-arithmetic-progression-from-sequence/\">1502. Can Make Arithmetic Progression From Sequence</a></p>\n</li>\n<li>\n<p><a href=\"./1512-Number-of-Good-Pairs/\">1512. Number of Good Pairs</a></p>\n</li>\n<li>\n<p><a href=\"./1518-Wate-Bottles/\">1518. Wate Bottles</a></p>\n</li>\n<li>\n<p><a href=\"./1528-Shuffle-String/\">1528. Shuffle String</a></p>\n</li>\n<li>\n<p><a href=\"./1572-Matrix-Diagonal-Sum/\">1572. Matrix Diagonal Sum</a></p>\n</li>\n<li>\n<p><a href=\"./1603-Design-Parking-System/\">1603. Design Parking System</a></p>\n</li>\n</ul>\n",
      "date_modified": "2021-05-27T03:02:18.852Z",
      "authors": [
        {
          "name": "LeetCode"
        }
      ],
      "tags": []
    },
    {
      "title": "C++",
      "url": "https://leetcode.innenu.com/88-merge-sorted-array/C++/",
      "id": "https://leetcode.innenu.com/88-merge-sorted-array/C++/",
      "content_html": "<h2 id=\"sqm\"> sqm</h2>\n<div><pre><code><span><span>#</span><span>include</span> <span>&lt;algorithm></span></span>\n<span><span>#</span><span>include</span> <span>&lt;iostream></span></span>\n<span><span>#</span><span>include</span> <span>&lt;vector></span></span>\n<span>using</span> <span>namespace</span> std<span>;</span>\n<span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>void</span> <span>merge</span><span>(</span>vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums1<span>,</span> <span>int</span> m<span>,</span> vector<span>&lt;</span><span>int</span><span>></span><span>&amp;</span> nums2<span>,</span> <span>int</span> n<span>)</span> <span>{</span>\n    <span>for</span> <span>(</span><span>int</span> i <span>=</span> m<span>;</span> i <span>&lt;</span> m <span>+</span> n<span>;</span> i<span>++</span><span>)</span> nums1<span>[</span>i<span>]</span> <span>=</span> nums2<span>[</span>i <span>-</span> m<span>]</span><span>;</span>\n    <span>sort</span><span>(</span>nums1<span>.</span><span>begin</span><span>(</span><span>)</span><span>,</span> nums1<span>.</span><span>begin</span><span>(</span><span>)</span> <span>+</span> m <span>+</span> n<span>)</span><span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.853Z",
      "authors": [
        {
          "name": "88. Merge Sorted Array"
        }
      ],
      "tags": [
        "C++"
      ]
    },
    {
      "title": "lmy",
      "url": "https://leetcode.innenu.com/1518-Wate-Bottles/lmy/",
      "id": "https://leetcode.innenu.com/1518-Wate-Bottles/lmy/",
      "content_html": "<h2 id=\"c\"> C++</h2>\n<div><pre><code><span>class</span> <span>Solution</span> <span>{</span>\n <span>public</span><span>:</span>\n  <span>int</span> <span>numWaterBottles</span><span>(</span><span>int</span> numBottles<span>,</span> <span>int</span> numExchange<span>)</span> <span>{</span>\n    <span>int</span> sum <span>=</span> <span>0</span><span>;</span>\n    <span>int</span> emptybottles <span>=</span> numBottles<span>;</span>\n    <span>while</span> <span>(</span>numBottles <span>!=</span> <span>0</span><span>)</span> <span>{</span>\n      sum <span>+=</span> numBottles<span>;</span>\n      numBottles <span>=</span> emptybottles <span>/</span> numExchange<span>;</span>\n      emptybottles <span>=</span> emptybottles <span>-</span> numBottles <span>*</span> numExchange <span>+</span> numBottles<span>;</span>\n    <span>}</span>\n    <span>return</span> sum<span>;</span>\n  <span>}</span>\n<span>}</span><span>;</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div>",
      "date_modified": "2021-05-27T03:02:18.853Z",
      "authors": [
        {
          "name": "1518. Wate Bottles"
        }
      ],
      "tags": [
        "lmy"
      ]
    }
  ]
}