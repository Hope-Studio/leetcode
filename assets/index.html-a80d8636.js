import{_ as r,W as o,X as s,Y as e,a0 as t,Z as a,a1 as i,C as d}from"./framework-adda929d.js";const u={},p={id:"_167-two-sum-ii-input-array-is-sorted",tabindex:"-1"},c=e("a",{class:"header-anchor",href:"#_167-two-sum-ii-input-array-is-sorted","aria-hidden":"true"},"#",-1),l={href:"https://leetcode.com/problems/two-sum-ii-input-array-is-sorted/",target:"_blank",rel:"noopener noreferrer"},h=i('<p>Given an array of integers that is already <strong><em>sorted in ascending order</em></strong>, find two numbers such that they add up to a specific target number.</p><p>The function twoSum should return indices of the two numbers such that they add up to the target, where index1 must be less than index2.</p><p><strong>Note:</strong></p><ul><li>Your returned answers (both index1 and index2) are not zero-based.</li><li>You may assume that each input would have <em>exactly</em> one solution and you may not use the <em>same</em> element twice.</li></ul><p><strong>Example 1:</strong></p><p><strong>Input:</strong> numbers = [2,7,11,15], target = 9</p><p><strong>Output:</strong> [1,2]</p><p><strong>Explanation:</strong> The sum of 2 and 7 is 9. Therefore index1 = 1, index2 = 2.</p><p><strong>Example 2:</strong></p><p><strong>Input:</strong> numbers = [2,3,4], target = 6</p><p><strong>Output:</strong> [1,3]</p><p><strong>Example 3:</strong></p><p><strong>Input:</strong> numbers = [-1,0], target = -1</p><p><strong>Output:</strong> [1,2]</p><h2 id="constraints" tabindex="-1"><a class="header-anchor" href="#constraints" aria-hidden="true">#</a> Constraints</h2><ul><li><code>2 &lt;= nums.length &lt;= 3 * 104</code></li><li><code>-1000 &lt;= nums[i] &lt;= 1000</code></li><li><code>nums</code> is sorted in <strong>increasing order</strong>.</li><li><code>-1000 &lt;= target &lt;= 1000</code></li></ul>',16);function m(g,_){const n=d("ExternalLinkIcon");return o(),s("div",null,[e("h1",p,[c,t(),e("a",l,[t("167. Two Sum II - Input array is sorted"),a(n)])]),h])}const f=r(u,[["render",m],["__file","index.html.vue"]]);export{f as default};
