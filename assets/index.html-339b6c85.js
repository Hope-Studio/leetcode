import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as s,c,a as e,d as t,b as a,e as i}from"./app-b54447e7.js";const d={},u={id:"_43-multiply-strings",tabindex:"-1"},l=e("a",{class:"header-anchor",href:"#_43-multiply-strings","aria-hidden":"true"},"#",-1),p={href:"https://leetcode.com/problems/multiply-strings/",target:"_blank",rel:"noopener noreferrer"},m=i('<p>Given two non-negative integers <code>num1</code> and <code>num2</code> represented as strings, return the product of <code>num1</code> and <code>num2</code>, also represented as a string.</p><p><strong>Note:</strong> You must not use any built-in BigInteger library or convert the inputs to integer directly.</p><p><strong>Example 1:</strong></p><p><strong>Input:</strong> num1 = &quot;2&quot;, num2 = &quot;3&quot;</p><p><strong>Output:</strong> &quot;6&quot;</p><p><strong>Example 2:</strong></p><p><strong>Input:</strong> num1 = &quot;123&quot;, num2 = &quot;456&quot;</p><p><strong>Output:</strong> &quot;56088&quot;</p><h2 id="constraints" tabindex="-1"><a class="header-anchor" href="#constraints" aria-hidden="true">#</a> Constraints</h2><ul><li><code>1 &lt;= num1.length, num2.length &lt;= 200</code></li><li><code>num1</code> and <code>num2</code> consist of digits only.</li><li>Both <code>num1</code> and <code>num2</code> do not contain any leading zero, except the number <code>0</code> itself.</li></ul>',10);function g(h,_){const n=r("ExternalLinkIcon");return s(),c("div",null,[e("h1",u,[l,t(),e("a",p,[t("43. Multiply Strings"),a(n)])]),m])}const q=o(d,[["render",g],["__file","index.html.vue"]]);export{q as default};
