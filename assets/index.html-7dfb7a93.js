import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as s,c as a,a as e,d as t,b as p,e as i}from"./app-b54447e7.js";const g={},c={id:"_7-reverse-integer",tabindex:"-1"},d=e("a",{class:"header-anchor",href:"#_7-reverse-integer","aria-hidden":"true"},"#",-1),l={href:"https://leetcode.com/problems/reverse-integer/",target:"_blank",rel:"noopener noreferrer"},h=i('<p>Given a 32-bit signed integer, reverse digits of an integer.</p><p><strong>Note:</strong> Assume we are dealing with an environment that could only store integers within the 32-bit signed integer range: [−231, 231 − 1]. For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.</p><p><strong>Example 1:</strong></p><p><strong>Input:</strong> x = 123</p><p><strong>Output:</strong> 321</p><p><strong>Example 2:</strong></p><p><strong>Input:</strong> x = -123</p><p><strong>Output:</strong> -321</p><p><strong>Example 3:</strong></p><p><strong>Input:</strong> x = 120</p><p><strong>Output:</strong> 21</p><p><strong>Example 4:</strong></p><p><strong>Input:</strong> x = 0</p><p><strong>Output:</strong> 0</p><h2 id="constraints" tabindex="-1"><a class="header-anchor" href="#constraints" aria-hidden="true">#</a> Constraints</h2><ul><li><code>-231 &lt;= x &lt;= 231 - 1</code></li></ul>',16);function u(_,m){const r=o("ExternalLinkIcon");return s(),a("div",null,[e("h1",c,[d,t(),e("a",l,[t("7. Reverse Integer"),p(r)])]),h])}const v=n(g,[["render",u],["__file","index.html.vue"]]);export{v as default};
