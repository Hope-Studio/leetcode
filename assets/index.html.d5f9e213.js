import{_ as o}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as r,a as e,d as t,b as a,e as d,r as i}from"./app.ade70d4c.js";const l={},p={id:"_2-add-two-numbers",tabindex:"-1"},c=e("a",{class:"header-anchor",href:"#_2-add-two-numbers","aria-hidden":"true"},"#",-1),g={href:"https://leetcode.com/problems/add-two-numbers/",target:"_blank",rel:"noopener noreferrer"},h=d('<p>You are given two <strong>non-empty</strong> linked lists representing two non-negative integers. The digits are stored in <strong>reverse order</strong>, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.</p><p>You may assume the two numbers do not contain any leading zero, except the number 0 itself.</p><p><strong>Example 1:</strong></p><p><img src="https://assets.leetcode.com/uploads/2020/10/02/addtwonumber1.jpg" alt="LeetCode Image"></p><p><strong>Input:</strong> l1 = [2,4,3], l2 = [5,6,4]</p><p><strong>Output:</strong> [7,0,8]</p><p><strong>Explanation:</strong> 342 + 465 = 807.</p><p><strong>Example 2:</strong></p><p><strong>Input:</strong> l1 = [0], l2 = [0]</p><p><strong>Output:</strong> [0]</p><p><strong>Example 3:</strong></p><p><strong>Input:</strong> l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]</p><p><strong>Output:</strong> [8,9,9,9,0,0,0,1]</p><h2 id="constraints" tabindex="-1"><a class="header-anchor" href="#constraints" aria-hidden="true">#</a> Constraints</h2><ul><li>The number of nodes in each linked list is in the range <code>[1, 100]</code>.</li><li><code>0 &lt;= Node.val &lt;= 9</code></li><li>It is guaranteed that the list represents a number that does not have leading zeros.</li></ul>',15);function u(m,_){const n=i("ExternalLinkIcon");return s(),r("div",null,[e("h1",p,[c,t(),e("a",g,[t("2. Add Two Numbers"),a(n)])]),h])}const x=o(l,[["render",u],["__file","index.html.vue"]]);export{x as default};
