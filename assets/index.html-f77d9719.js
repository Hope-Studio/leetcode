import{_ as r,W as o,X as s,Y as t,a0 as e,Z as a,a1 as p,C as i}from"./framework-45146e23.js";const l={},d={id:"_9-palindrome-number",tabindex:"-1"},g=t("a",{class:"header-anchor",href:"#_9-palindrome-number","aria-hidden":"true"},"#",-1),c={href:"https://leetcode.com/problems/palindrome-number/",target:"_blank",rel:"noopener noreferrer"},m=p('<p>Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forward.</p><p><strong>Follow up:</strong> Could you solve it without converting the integer to a string?</p><p><strong>Example 1:</strong></p><p><strong>Input:</strong> x = 121</p><p><strong>Output:</strong> true</p><p><strong>Example 2:</strong></p><p><strong>Input:</strong> x = -121</p><p><strong>Output:</strong> false</p><p><strong>Explanation:</strong> From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.</p><p><strong>Example 3:</strong></p><p><strong>Input:</strong> x = 10</p><p><strong>Output:</strong> false</p><p><strong>Explanation:</strong> Reads 01 from right to left. Therefore it is not a palindrome.</p><p><strong>Example 4:</strong></p><p><strong>Input:</strong> x = -101</p><p><strong>Output:</strong> false</p><h2 id="constraints" tabindex="-1"><a class="header-anchor" href="#constraints" aria-hidden="true">#</a> Constraints</h2><ul><li><code>-231 &lt;= x &lt;= 231 - 1</code></li></ul>',18);function h(u,_){const n=i("ExternalLinkIcon");return o(),s("div",null,[t("h1",d,[g,e(),t("a",c,[e("9. Palindrome Number"),a(n)])]),m])}const x=r(l,[["render",h],["__file","index.html.vue"]]);export{x as default};
