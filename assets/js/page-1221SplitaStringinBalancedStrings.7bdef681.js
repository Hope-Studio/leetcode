(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{530:function(t,n,s){"use strict";s.r(n);var a=s(1),e=Object(a.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_1221-split-a-string-in-balanced-strings"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1221-split-a-string-in-balanced-strings"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://leetcode.com/problems/split-a-string-in-balanced-strings/",target:"_blank",rel:"noopener noreferrer"}},[t._v("1221. Split a String in Balanced Strings"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("em",[t._v("Balanced")]),t._v(" strings are those who have equal quantity of 'L' and 'R' characters.")]),t._v(" "),s("p",[t._v("Given a balanced string "),s("code",[t._v("s")]),t._v(" split it in the maximum amount of balanced strings.")]),t._v(" "),s("p",[t._v("Return the maximum amount of splitted balanced strings.")]),t._v(" "),s("p",[s("strong",[t._v("Example 1:")])]),t._v(" "),s("p",[s("strong",[t._v("Input:")]),t._v(' s = "RLRRLLRLRL"')]),t._v(" "),s("p",[s("strong",[t._v("Output:")]),t._v(" 4")]),t._v(" "),s("p",[s("strong",[t._v("Explanation:")]),t._v(' s can be split into "RL", "RRLL", "RL", "RL", each substring contains same number of \'L\' and \'R\'.')]),t._v(" "),s("p",[s("strong",[t._v("Example 2:")])]),t._v(" "),s("p",[s("strong",[t._v("Input:")]),t._v(' s = "RLLLLRRRLR"')]),t._v(" "),s("p",[s("strong",[t._v("Output:")]),t._v(" 3")]),t._v(" "),s("p",[s("strong",[t._v("Explanation:")]),t._v(' s can be split into "RL", "LLLRRR", "LR", each substring contains same number of \'L\' and \'R\'.')]),t._v(" "),s("p",[s("strong",[t._v("Example 3:")])]),t._v(" "),s("p",[s("strong",[t._v("Input:")]),t._v(' s = "LLLLRRRR"')]),t._v(" "),s("p",[s("strong",[t._v("Output:")]),t._v(" 1")]),t._v(" "),s("p",[s("strong",[t._v("Explanation:")]),t._v(' s can be split into "LLLLRRRR".')]),t._v(" "),s("p",[s("strong",[t._v("Example 4:")])]),t._v(" "),s("p",[s("strong",[t._v("Input:")]),t._v(' s = "RLRRRLLRLL"')]),t._v(" "),s("p",[s("strong",[t._v("Output:")]),t._v(" 2")]),t._v(" "),s("p",[s("strong",[t._v("Explanation:")]),t._v(" s can be split into \"RL\", \"RRRLLRLL\", since each substring contains an equal number of 'L' and 'R'")]),t._v(" "),s("h2",{attrs:{id:"constraints"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#constraints"}},[t._v("#")]),t._v(" Constraints")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("1 <= s.length <= 1000")])]),t._v(" "),s("li",[s("code",[t._v("s[i] = 'L' or 'R'")])])])])}),[],!1,null,null,null);n.default=e.exports}}]);