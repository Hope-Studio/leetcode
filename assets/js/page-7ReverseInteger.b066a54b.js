(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{699:function(t,e,r){"use strict";r.r(e);var n=r(1),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"_7-reverse-integer"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-reverse-integer"}},[t._v("#")]),t._v(" "),r("a",{attrs:{href:"https://leetcode.com/problems/reverse-integer/",target:"_blank",rel:"noopener noreferrer"}},[t._v("7. Reverse Integer"),r("OutboundLink")],1)]),t._v(" "),r("p",[t._v("Given a 32-bit signed integer, reverse digits of an integer.")]),t._v(" "),r("p",[r("strong",[t._v("Note:")]),t._v("\nAssume we are dealing with an environment that could only store integers within the 32-bit signed integer range: [−231, 231 − 1]. For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.")]),t._v(" "),r("p",[r("strong",[t._v("Example 1:")])]),t._v(" "),r("p",[r("strong",[t._v("Input:")]),t._v(" x = 123")]),t._v(" "),r("p",[r("strong",[t._v("Output:")]),t._v(" 321")]),t._v(" "),r("p",[r("strong",[t._v("Example 2:")])]),t._v(" "),r("p",[r("strong",[t._v("Input:")]),t._v(" x = -123")]),t._v(" "),r("p",[r("strong",[t._v("Output:")]),t._v(" -321")]),t._v(" "),r("p",[r("strong",[t._v("Example 3:")])]),t._v(" "),r("p",[r("strong",[t._v("Input:")]),t._v(" x = 120")]),t._v(" "),r("p",[r("strong",[t._v("Output:")]),t._v(" 21")]),t._v(" "),r("p",[r("strong",[t._v("Example 4:")])]),t._v(" "),r("p",[r("strong",[t._v("Input:")]),t._v(" x = 0")]),t._v(" "),r("p",[r("strong",[t._v("Output:")]),t._v(" 0")]),t._v(" "),r("h2",{attrs:{id:"constraints"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#constraints"}},[t._v("#")]),t._v(" Constraints")]),t._v(" "),r("ul",[r("li",[r("code",[t._v("-231 <= x <= 231 - 1")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);