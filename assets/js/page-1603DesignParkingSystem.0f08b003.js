(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{623:function(e,a,r){"use strict";r.r(a);var t=r(1),s=Object(t.a)({},(function(){var e=this,a=e.$createElement,r=e._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"_1603-design-parking-system"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1603-design-parking-system"}},[e._v("#")]),e._v(" "),r("a",{attrs:{href:"https://leetcode.com/problems/design-parking-system/",target:"_blank",rel:"noopener noreferrer"}},[e._v("1603. Design Parking System"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("Design a parking system for a parking lot. The parking lot has three kinds of parking spaces: big, medium, and small, with a fixed number of slots for each size.")]),e._v(" "),r("p",[e._v("Implement the "),r("code",[e._v("ParkingSystem")]),e._v(" class:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("ParkingSystem(int big, int medium, int small)")]),e._v(" Initializes object of the "),r("code",[e._v("ParkingSystem")]),e._v(" class. The number of slots for each parking space are given as part of the constructor.")]),e._v(" "),r("li",[r("code",[e._v("bool addCar(int carType)")]),e._v(" Checks whether there is a parking space of "),r("code",[e._v("carType")]),e._v(" for the car that wants to get into the parking lot. "),r("code",[e._v("carType")]),e._v(" can be of three kinds: big, medium, or small, which are represented by "),r("code",[e._v("1")]),e._v(", "),r("code",[e._v("2")]),e._v(", and "),r("code",[e._v("3")]),e._v(" respectively. "),r("strong",[e._v("A car can only park in a parking space of its")]),e._v(" "),r("code",[e._v("carType")]),e._v(". If there is no space available, return "),r("code",[e._v("false")]),e._v(", else park the car in that size space and return "),r("code",[e._v("true")]),e._v(".")])]),e._v(" "),r("p",[r("strong",[e._v("Example 1:")])]),e._v(" "),r("p",[r("strong",[e._v("Input")]),e._v('\n["ParkingSystem", "addCar", "addCar", "addCar", "addCar"]\n[[1, 1, 0], [1], [2], [3], [1]]\n'),r("strong",[e._v("Output")]),e._v("\n[null, true, true, false, false]")]),e._v(" "),r("p",[r("strong",[e._v("Explanation")]),e._v("\nParkingSystem parkingSystem = new ParkingSystem(1, 1, 0);\nparkingSystem.addCar(1); // return true because there is 1 available slot for a big car\nparkingSystem.addCar(2); // return true because there is 1 available slot for a medium car\nparkingSystem.addCar(3); // return false because there is no available slot for a small car\nparkingSystem.addCar(1); // return false because there is no available slot for a big car. It is already occupied.")]),e._v(" "),r("h2",{attrs:{id:"constraints"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#constraints"}},[e._v("#")]),e._v(" Constraints")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("0 <= big, medium, small <= 1000")])]),e._v(" "),r("li",[r("code",[e._v("carType")]),e._v(" is "),r("code",[e._v("1")]),e._v(", "),r("code",[e._v("2")]),e._v(", or "),r("code",[e._v("3")])]),e._v(" "),r("li",[e._v("At most "),r("code",[e._v("1000")]),e._v(" calls will be made to "),r("code",[e._v("addCar")])])])])}),[],!1,null,null,null);a.default=s.exports}}]);