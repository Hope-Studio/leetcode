import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as a,o as n,c,a as e,d as r,b as d,e as s}from"./app-b54447e7.js";const i={},l={id:"_1122-relative-sort-array",tabindex:"-1"},h=e("a",{class:"header-anchor",href:"#_1122-relative-sort-array","aria-hidden":"true"},"#",-1),p={href:"https://leetcode.com/problems/relative-sort-array/",target:"_blank",rel:"noopener noreferrer"},_=s('<p>Given two arrays <code>arr1</code> and <code>arr2</code>, the elements of <code>arr2</code> are distinct, and all elements in <code>arr2</code> are also in <code>arr1</code>.</p><p>Sort the elements of <code>arr1</code> such that the relative ordering of items in <code>arr1</code> are the same as in <code>arr2</code>. Elements that don&#39;t appear in <code>arr2</code> should be placed at the end of <code>arr1</code> in <strong>ascending</strong> order.</p><p><strong>Example 1:</strong></p><p><strong>Input:</strong> arr1 = [2,3,1,3,2,4,6,7,9,2,19], arr2 = [2,1,4,3,9,6]</p><p><strong>Output:</strong> [2,2,2,1,4,3,3,9,6,7,19]</p><h2 id="constraints" tabindex="-1"><a class="header-anchor" href="#constraints" aria-hidden="true">#</a> Constraints</h2><ul><li><code>1 &lt;= arr1.length, arr2.length &lt;= 1000</code></li><li><code>0 &lt;= arr1[i], arr2[i] &lt;= 1000</code></li><li>All the elements of <code>arr2</code> are <strong>distinct</strong>.</li><li>Each <code>arr2[i]</code> is in <code>arr1</code>.</li></ul>',7);function m(f,g){const t=a("ExternalLinkIcon");return n(),c("div",null,[e("h1",l,[h,r(),e("a",p,[r("1122. Relative Sort Array"),d(t)])]),_])}const v=o(i,[["render",m],["__file","index.html.vue"]]);export{v as default};
